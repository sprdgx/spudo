/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./node_modules/ethers/_version.js":
/*!*****************************************!*\
  !*** ./node_modules/ethers/_version.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.version = \"4.0.49\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL192ZXJzaW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL192ZXJzaW9uLmpzP2YwYTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZlcnNpb24gPSBcIjQuMC40OVwiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/_version.js\n");

/***/ }),

/***/ "./node_modules/ethers/abstract-signer.js":
/*!************************************************!*\
  !*** ./node_modules/ethers/abstract-signer.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar properties_1 = __webpack_require__(/*! ethers/utils/properties */ \"ethers/utils/properties\");\nvar Signer = /** @class */ (function () {\n    function Signer() {\n        properties_1.setType(this, 'Signer');\n    }\n    Signer.isSigner = function (value) {\n        return properties_1.isType(value, 'Signer');\n    };\n    return Signer;\n}());\nexports.Signer = Signer;\n//defineReadOnly(Signer, 'inherits', inheritable(Signer));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL2Fic3RyYWN0LXNpZ25lci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsbUJBQU8sQ0FBQyx3REFBeUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL2Fic3RyYWN0LXNpZ25lci5qcz9kMGIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHByb3BlcnRpZXNfMSA9IHJlcXVpcmUoXCJldGhlcnMvdXRpbHMvcHJvcGVydGllc1wiKTtcbnZhciBTaWduZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU2lnbmVyKCkge1xuICAgICAgICBwcm9wZXJ0aWVzXzEuc2V0VHlwZSh0aGlzLCAnU2lnbmVyJyk7XG4gICAgfVxuICAgIFNpZ25lci5pc1NpZ25lciA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gcHJvcGVydGllc18xLmlzVHlwZSh2YWx1ZSwgJ1NpZ25lcicpO1xuICAgIH07XG4gICAgcmV0dXJuIFNpZ25lcjtcbn0oKSk7XG5leHBvcnRzLlNpZ25lciA9IFNpZ25lcjtcbi8vZGVmaW5lUmVhZE9ubHkoU2lnbmVyLCAnaW5oZXJpdHMnLCBpbmhlcml0YWJsZShTaWduZXIpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethers/abstract-signer.js\n");

/***/ }),

/***/ "./node_modules/ethers/constants.js":
/*!******************************************!*\
  !*** ./node_modules/ethers/constants.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bignumber_1 = __webpack_require__(/*! ./utils/bignumber */ \"./node_modules/ethers/utils/bignumber.js\");\nvar AddressZero = '0x0000000000000000000000000000000000000000';\nexports.AddressZero = AddressZero;\nvar HashZero = '0x0000000000000000000000000000000000000000000000000000000000000000';\nexports.HashZero = HashZero;\n// NFKD (decomposed)\n//const EtherSymbol = '\\uD835\\uDF63';\n// NFKC (composed)\nvar EtherSymbol = '\\u039e';\nexports.EtherSymbol = EtherSymbol;\nvar NegativeOne = bignumber_1.bigNumberify(-1);\nexports.NegativeOne = NegativeOne;\nvar Zero = bignumber_1.bigNumberify(0);\nexports.Zero = Zero;\nvar One = bignumber_1.bigNumberify(1);\nexports.One = One;\nvar Two = bignumber_1.bigNumberify(2);\nexports.Two = Two;\nvar WeiPerEther = bignumber_1.bigNumberify('1000000000000000000');\nexports.WeiPerEther = WeiPerEther;\nvar MaxUint256 = bignumber_1.bigNumberify('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nexports.MaxUint256 = MaxUint256;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL2NvbnN0YW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsbUJBQU8sQ0FBQyxtRUFBbUI7QUFDN0M7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxZQUFZO0FBQ1o7QUFDQSxXQUFXO0FBQ1g7QUFDQSxXQUFXO0FBQ1g7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL2NvbnN0YW50cy5qcz8wN2JiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGJpZ251bWJlcl8xID0gcmVxdWlyZShcIi4vdXRpbHMvYmlnbnVtYmVyXCIpO1xudmFyIEFkZHJlc3NaZXJvID0gJzB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCc7XG5leHBvcnRzLkFkZHJlc3NaZXJvID0gQWRkcmVzc1plcm87XG52YXIgSGFzaFplcm8gPSAnMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJztcbmV4cG9ydHMuSGFzaFplcm8gPSBIYXNoWmVybztcbi8vIE5GS0QgKGRlY29tcG9zZWQpXG4vL2NvbnN0IEV0aGVyU3ltYm9sID0gJ1xcdUQ4MzVcXHVERjYzJztcbi8vIE5GS0MgKGNvbXBvc2VkKVxudmFyIEV0aGVyU3ltYm9sID0gJ1xcdTAzOWUnO1xuZXhwb3J0cy5FdGhlclN5bWJvbCA9IEV0aGVyU3ltYm9sO1xudmFyIE5lZ2F0aXZlT25lID0gYmlnbnVtYmVyXzEuYmlnTnVtYmVyaWZ5KC0xKTtcbmV4cG9ydHMuTmVnYXRpdmVPbmUgPSBOZWdhdGl2ZU9uZTtcbnZhciBaZXJvID0gYmlnbnVtYmVyXzEuYmlnTnVtYmVyaWZ5KDApO1xuZXhwb3J0cy5aZXJvID0gWmVybztcbnZhciBPbmUgPSBiaWdudW1iZXJfMS5iaWdOdW1iZXJpZnkoMSk7XG5leHBvcnRzLk9uZSA9IE9uZTtcbnZhciBUd28gPSBiaWdudW1iZXJfMS5iaWdOdW1iZXJpZnkoMik7XG5leHBvcnRzLlR3byA9IFR3bztcbnZhciBXZWlQZXJFdGhlciA9IGJpZ251bWJlcl8xLmJpZ051bWJlcmlmeSgnMTAwMDAwMDAwMDAwMDAwMDAwMCcpO1xuZXhwb3J0cy5XZWlQZXJFdGhlciA9IFdlaVBlckV0aGVyO1xudmFyIE1heFVpbnQyNTYgPSBiaWdudW1iZXJfMS5iaWdOdW1iZXJpZnkoJzB4ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZicpO1xuZXhwb3J0cy5NYXhVaW50MjU2ID0gTWF4VWludDI1NjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethers/constants.js\n");

/***/ }),

/***/ "./node_modules/ethers/contract.js":
/*!*****************************************!*\
  !*** ./node_modules/ethers/contract.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/ethers/constants.js\");\nvar errors = __importStar(__webpack_require__(/*! ./errors */ \"./node_modules/ethers/errors.js\"));\nvar abi_coder_1 = __webpack_require__(/*! ./utils/abi-coder */ \"./node_modules/ethers/utils/abi-coder.js\");\nvar address_1 = __webpack_require__(/*! ./utils/address */ \"./node_modules/ethers/utils/address.js\");\nvar bignumber_1 = __webpack_require__(/*! ./utils/bignumber */ \"./node_modules/ethers/utils/bignumber.js\");\nvar bytes_1 = __webpack_require__(/*! ./utils/bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar interface_1 = __webpack_require__(/*! ./utils/interface */ \"./node_modules/ethers/utils/interface.js\");\nvar properties_1 = __webpack_require__(/*! ./utils/properties */ \"./node_modules/ethers/utils/properties.js\");\n///////////////////////////////\n// Imported Abstracts\nvar abstract_provider_1 = __webpack_require__(/*! ./providers/abstract-provider */ \"./node_modules/ethers/providers/abstract-provider.js\");\nvar abstract_signer_1 = __webpack_require__(/*! ./abstract-signer */ \"./node_modules/ethers/abstract-signer.js\");\n///////////////////////////////\nvar VoidSigner = /** @class */ (function (_super) {\n    __extends(VoidSigner, _super);\n    function VoidSigner(address, provider) {\n        var _this = _super.call(this) || this;\n        properties_1.defineReadOnly(_this, 'address', address);\n        properties_1.defineReadOnly(_this, 'provider', provider);\n        return _this;\n    }\n    VoidSigner.prototype.getAddress = function () {\n        return Promise.resolve(this.address);\n    };\n    VoidSigner.prototype._fail = function (message, operation) {\n        return Promise.resolve().then(function () {\n            errors.throwError(message, errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    };\n    VoidSigner.prototype.signMessage = function (message) {\n        return this._fail('VoidSigner cannot sign messages', 'signMessage');\n    };\n    VoidSigner.prototype.sendTransaction = function (transaction) {\n        return this._fail('VoidSigner cannot sign transactions', 'sendTransaction');\n    };\n    VoidSigner.prototype.connect = function (provider) {\n        return new VoidSigner(this.address, provider);\n    };\n    return VoidSigner;\n}(abstract_signer_1.Signer));\nexports.VoidSigner = VoidSigner;\nvar allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true\n};\n// Recursively replaces ENS names with promises to resolve the name and\n// stalls until all promises have returned\n// @TODO: Expand this to resolve any promises too\nfunction resolveAddresses(provider, value, paramType) {\n    if (Array.isArray(paramType)) {\n        var promises_1 = [];\n        paramType.forEach(function (paramType, index) {\n            var v = null;\n            if (Array.isArray(value)) {\n                v = value[index];\n            }\n            else {\n                v = value[paramType.name];\n            }\n            promises_1.push(resolveAddresses(provider, v, paramType));\n        });\n        return Promise.all(promises_1);\n    }\n    if (paramType.type === 'address') {\n        return provider.resolveName(value);\n    }\n    if (paramType.type === 'tuple') {\n        return resolveAddresses(provider, value, paramType.components);\n    }\n    // Strips one level of array indexing off the end to recuse into\n    var isArrayMatch = paramType.type.match(/(.*)(\\[[0-9]*\\]$)/);\n    if (isArrayMatch) {\n        if (!Array.isArray(value)) {\n            throw new Error('invalid value for array');\n        }\n        var promises = [];\n        var subParamType = {\n            components: paramType.components,\n            type: isArrayMatch[1],\n        };\n        value.forEach(function (v) {\n            promises.push(resolveAddresses(provider, v, subParamType));\n        });\n        return Promise.all(promises);\n    }\n    return Promise.resolve(value);\n}\nfunction runMethod(contract, functionName, estimateOnly) {\n    var method = contract.interface.functions[functionName];\n    return function () {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        var tx = {};\n        var blockTag = null;\n        // If 1 extra parameter was passed in, it contains overrides\n        if (params.length === method.inputs.length + 1 && typeof (params[params.length - 1]) === 'object') {\n            tx = properties_1.shallowCopy(params.pop());\n            if (tx.blockTag != null) {\n                blockTag = tx.blockTag;\n            }\n            delete tx.blockTag;\n            // Check for unexpected keys (e.g. using \"gas\" instead of \"gasLimit\")\n            for (var key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error('unknown transaction override ' + key);\n                }\n            }\n        }\n        if (params.length != method.inputs.length) {\n            throw new Error('incorrect number of arguments');\n        }\n        // Check overrides make sense\n        ['data', 'to'].forEach(function (key) {\n            if (tx[key] != null) {\n                errors.throwError('cannot override ' + key, errors.UNSUPPORTED_OPERATION, { operation: key });\n            }\n        });\n        tx.to = contract._deployed(blockTag).then(function () {\n            return contract.addressPromise;\n        });\n        return resolveAddresses(contract.provider, params, method.inputs).then(function (params) {\n            tx.data = method.encode(params);\n            if (method.type === 'call') {\n                // Call (constant functions) always cost 0 ether\n                if (estimateOnly) {\n                    return Promise.resolve(constants_1.Zero);\n                }\n                if (!contract.provider) {\n                    errors.throwError('call (constant functions) require a provider or a signer with a provider', errors.UNSUPPORTED_OPERATION, { operation: 'call' });\n                }\n                // Check overrides make sense\n                ['gasLimit', 'gasPrice', 'value'].forEach(function (key) {\n                    if (tx[key] != null) {\n                        throw new Error('call cannot override ' + key);\n                    }\n                });\n                if (tx.from == null && contract.signer) {\n                    tx.from = contract.signer.getAddress();\n                }\n                return contract.provider.call(tx, blockTag).then(function (value) {\n                    if ((bytes_1.hexDataLength(value) % 32) === 4 && bytes_1.hexDataSlice(value, 0, 4) === '0x08c379a0') {\n                        var reason = abi_coder_1.defaultAbiCoder.decode(['string'], bytes_1.hexDataSlice(value, 4));\n                        errors.throwError('call revert exception', errors.CALL_EXCEPTION, {\n                            address: contract.address,\n                            args: params,\n                            method: method.signature,\n                            errorSignature: 'Error(string)',\n                            errorArgs: [reason],\n                            reason: reason,\n                            transaction: tx\n                        });\n                    }\n                    try {\n                        var result = method.decode(value);\n                        if (method.outputs.length === 1) {\n                            result = result[0];\n                        }\n                        return result;\n                    }\n                    catch (error) {\n                        if (value === '0x' && method.outputs.length > 0) {\n                            errors.throwError('call exception', errors.CALL_EXCEPTION, {\n                                address: contract.address,\n                                method: method.signature,\n                                args: params\n                            });\n                        }\n                        throw error;\n                    }\n                });\n            }\n            else if (method.type === 'transaction') {\n                // Only computing the transaction estimate\n                if (estimateOnly) {\n                    if (!contract.provider) {\n                        errors.throwError('estimate gas require a provider or a signer with a provider', errors.UNSUPPORTED_OPERATION, { operation: 'estimateGas' });\n                    }\n                    if (tx.from == null && contract.signer) {\n                        tx.from = contract.signer.getAddress();\n                    }\n                    return contract.provider.estimateGas(tx);\n                }\n                if (tx.gasLimit == null && method.gas != null) {\n                    tx.gasLimit = bignumber_1.bigNumberify(method.gas).add(21000);\n                }\n                if (!contract.signer) {\n                    errors.throwError('sending a transaction requires a signer', errors.UNSUPPORTED_OPERATION, { operation: 'sendTransaction' });\n                }\n                // Make sure they aren't overriding something they shouldn't\n                if (tx.from != null) {\n                    errors.throwError('cannot override from in a transaction', errors.UNSUPPORTED_OPERATION, { operation: 'sendTransaction' });\n                }\n                return contract.signer.sendTransaction(tx).then(function (tx) {\n                    var wait = tx.wait.bind(tx);\n                    tx.wait = function (confirmations) {\n                        return wait(confirmations).then(function (receipt) {\n                            receipt.events = receipt.logs.map(function (log) {\n                                var event = properties_1.deepCopy(log);\n                                var parsed = contract.interface.parseLog(log);\n                                if (parsed) {\n                                    event.args = parsed.values;\n                                    event.decode = parsed.decode;\n                                    event.event = parsed.name;\n                                    event.eventSignature = parsed.signature;\n                                }\n                                event.removeListener = function () { return contract.provider; };\n                                event.getBlock = function () {\n                                    return contract.provider.getBlock(receipt.blockHash);\n                                };\n                                event.getTransaction = function () {\n                                    return contract.provider.getTransaction(receipt.transactionHash);\n                                };\n                                event.getTransactionReceipt = function () {\n                                    return Promise.resolve(receipt);\n                                };\n                                return event;\n                            });\n                            return receipt;\n                        });\n                    };\n                    return tx;\n                });\n            }\n            throw new Error('invalid type - ' + method.type);\n            return null;\n        });\n    };\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return '*';\n    }\n    return (filter.address || '*') + '@' + (filter.topics ? filter.topics.join(':') : '');\n}\nvar Contract = /** @class */ (function () {\n    // https://github.com/Microsoft/TypeScript/issues/5453\n    // Once this issue is resolved (there are open PR) we can do this nicer\n    // by making addressOrName default to null for 2 operand calls. :)\n    // ParamType is not actually correct here, but for legacy reasons,\n    // we need it. See #721.\n    function Contract(addressOrName, contractInterface, signerOrProvider) {\n        var _this = this;\n        errors.checkNew(this, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        if (interface_1.Interface.isInterface(contractInterface)) {\n            properties_1.defineReadOnly(this, 'interface', contractInterface);\n        }\n        else {\n            properties_1.defineReadOnly(this, 'interface', new interface_1.Interface(contractInterface));\n        }\n        if (abstract_signer_1.Signer.isSigner(signerOrProvider)) {\n            properties_1.defineReadOnly(this, 'provider', signerOrProvider.provider);\n            properties_1.defineReadOnly(this, 'signer', signerOrProvider);\n        }\n        else if (abstract_provider_1.Provider.isProvider(signerOrProvider)) {\n            properties_1.defineReadOnly(this, 'provider', signerOrProvider);\n            properties_1.defineReadOnly(this, 'signer', null);\n        }\n        else {\n            errors.throwError('invalid signer or provider', errors.INVALID_ARGUMENT, { arg: 'signerOrProvider', value: signerOrProvider });\n        }\n        properties_1.defineReadOnly(this, 'estimate', {});\n        properties_1.defineReadOnly(this, 'functions', {});\n        properties_1.defineReadOnly(this, 'filters', {});\n        Object.keys(this.interface.events).forEach(function (eventName) {\n            var event = _this.interface.events[eventName];\n            properties_1.defineReadOnly(_this.filters, eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return {\n                    address: _this.address,\n                    topics: event.encodeTopics(args)\n                };\n            });\n        });\n        this._events = [];\n        properties_1.defineReadOnly(this, 'address', addressOrName);\n        if (this.provider) {\n            properties_1.defineReadOnly(this, 'addressPromise', this.provider.resolveName(addressOrName).then(function (address) {\n                if (address == null) {\n                    throw new Error('name not found');\n                }\n                return address;\n            }).catch(function (error) {\n                throw error;\n            }));\n        }\n        else {\n            try {\n                properties_1.defineReadOnly(this, 'addressPromise', Promise.resolve(address_1.getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                errors.throwError('provider is required to use non-address contract address', errors.INVALID_ARGUMENT, { argument: 'addressOrName', value: addressOrName });\n            }\n        }\n        Object.keys(this.interface.functions).forEach(function (name) {\n            var run = runMethod(_this, name, false);\n            if (_this[name] == null) {\n                properties_1.defineReadOnly(_this, name, run);\n            }\n            else {\n                errors.warn('WARNING: Multiple definitions for ' + name);\n            }\n            if (_this.functions[name] == null) {\n                properties_1.defineReadOnly(_this.functions, name, run);\n                properties_1.defineReadOnly(_this.estimate, name, runMethod(_this, name, true));\n            }\n        });\n    }\n    // @TODO: Allow timeout?\n    Contract.prototype.deployed = function () {\n        return this._deployed();\n    };\n    Contract.prototype._deployed = function (blockTag) {\n        var _this = this;\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(function () {\n                    return _this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then(function (code) {\n                    if (code === '0x') {\n                        errors.throwError('contract not deployed', errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: _this.address,\n                            operation: 'getDeployed'\n                        });\n                    }\n                    return _this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    };\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    Contract.prototype.fallback = function (overrides) {\n        var _this = this;\n        if (!this.signer) {\n            errors.throwError('sending a transaction requires a signer', errors.UNSUPPORTED_OPERATION, { operation: 'sendTransaction(fallback)' });\n        }\n        var tx = properties_1.shallowCopy(overrides || {});\n        ['from', 'to'].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            errors.throwError('cannot override ' + key, errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.addressPromise;\n        return this.deployed().then(function () {\n            return _this.signer.sendTransaction(tx);\n        });\n    };\n    // Reconnect to a different signer or provider\n    Contract.prototype.connect = function (signerOrProvider) {\n        if (typeof (signerOrProvider) === 'string') {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        var contract = new Contract(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            properties_1.defineReadOnly(contract, 'deployTransaction', this.deployTransaction);\n        }\n        return contract;\n    };\n    // Re-attach to a different on=chain instance of this contract\n    Contract.prototype.attach = function (addressOrName) {\n        return new Contract(addressOrName, this.interface, this.signer || this.provider);\n    };\n    Contract.isIndexed = function (value) {\n        return interface_1.Interface.isIndexed(value);\n    };\n    Contract.prototype._getEventFilter = function (eventName) {\n        var _this = this;\n        if (typeof (eventName) === 'string') {\n            // Listen for any event\n            if (eventName === '*') {\n                return {\n                    prepareEvent: function (e) {\n                        var parsed = _this.interface.parseLog(e);\n                        if (parsed) {\n                            e.args = parsed.values;\n                            e.decode = parsed.decode;\n                            e.event = parsed.name;\n                            e.eventSignature = parsed.signature;\n                        }\n                        return [e];\n                    },\n                    eventTag: '*',\n                    filter: { address: this.address },\n                };\n            }\n            // Normalize the eventName\n            if (eventName.indexOf('(') !== -1) {\n                eventName = abi_coder_1.formatSignature(abi_coder_1.parseSignature('event ' + eventName));\n            }\n            var event_1 = this.interface.events[eventName];\n            if (!event_1) {\n                errors.throwError('unknown event - ' + eventName, errors.INVALID_ARGUMENT, { argumnet: 'eventName', value: eventName });\n            }\n            var filter_1 = {\n                address: this.address,\n                topics: [event_1.topic]\n            };\n            return {\n                prepareEvent: function (e) {\n                    var args = event_1.decode(e.data, e.topics);\n                    e.args = args;\n                    var result = Array.prototype.slice.call(args);\n                    result.push(e);\n                    return result;\n                },\n                event: event_1,\n                eventTag: getEventTag(filter_1),\n                filter: filter_1\n            };\n        }\n        var filter = {\n            address: this.address\n        };\n        // Find the matching event in the ABI; if none, we still allow filtering\n        // since it may be a filter for an otherwise unknown event\n        var event = null;\n        if (eventName.topics && eventName.topics[0]) {\n            filter.topics = eventName.topics;\n            for (var name_1 in this.interface.events) {\n                if (name_1.indexOf('(') === -1) {\n                    continue;\n                }\n                var e = this.interface.events[name_1];\n                if (e.topic === eventName.topics[0].toLowerCase()) {\n                    event = e;\n                    break;\n                }\n            }\n        }\n        return {\n            prepareEvent: function (e) {\n                if (!event) {\n                    return [e];\n                }\n                var args = event.decode(e.data, e.topics);\n                e.args = args;\n                var result = Array.prototype.slice.call(args);\n                result.push(e);\n                return result;\n            },\n            event: event,\n            eventTag: getEventTag(filter),\n            filter: filter\n        };\n    };\n    Contract.prototype._addEventListener = function (eventFilter, listener, once) {\n        var _this = this;\n        if (!this.provider) {\n            errors.throwError('events require a provider or a signer with a provider', errors.UNSUPPORTED_OPERATION, { operation: 'once' });\n        }\n        var wrappedListener = function (log) {\n            var event = properties_1.deepCopy(log);\n            var args = eventFilter.prepareEvent(event);\n            if (eventFilter.event) {\n                event.decode = eventFilter.event.decode;\n                event.event = eventFilter.event.name;\n                event.eventSignature = eventFilter.event.signature;\n            }\n            event.removeListener = function () { _this.removeListener(eventFilter.filter, listener); };\n            event.getBlock = function () { return _this.provider.getBlock(log.blockHash); };\n            event.getTransaction = function () { return _this.provider.getTransaction(log.transactionHash); };\n            event.getTransactionReceipt = function () { return _this.provider.getTransactionReceipt(log.transactionHash); };\n            _this.emit.apply(_this, [eventFilter.filter].concat(args));\n        };\n        this.provider.on(eventFilter.filter, wrappedListener);\n        this._events.push({ eventFilter: eventFilter, listener: listener, wrappedListener: wrappedListener, once: once });\n    };\n    Contract.prototype.on = function (event, listener) {\n        this._addEventListener(this._getEventFilter(event), listener, false);\n        return this;\n    };\n    Contract.prototype.once = function (event, listener) {\n        this._addEventListener(this._getEventFilter(event), listener, true);\n        return this;\n    };\n    Contract.prototype.addListener = function (eventName, listener) {\n        return this.on(eventName, listener);\n    };\n    Contract.prototype.emit = function (eventName) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (!this.provider) {\n            return false;\n        }\n        var result = false;\n        var eventFilter = this._getEventFilter(eventName);\n        this._events = this._events.filter(function (event) {\n            // Not this event (keep it for later)\n            if (event.eventFilter.eventTag !== eventFilter.eventTag) {\n                return true;\n            }\n            // Call the callback in the next event loop\n            setTimeout(function () {\n                event.listener.apply(_this, args);\n            }, 0);\n            result = true;\n            // Reschedule it if it not \"once\"\n            return !(event.once);\n        });\n        return result;\n    };\n    Contract.prototype.listenerCount = function (eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        var eventFilter = this._getEventFilter(eventName);\n        return this._events.filter(function (event) {\n            return event.eventFilter.eventTag === eventFilter.eventTag;\n        }).length;\n    };\n    Contract.prototype.listeners = function (eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        var eventFilter = this._getEventFilter(eventName);\n        return this._events.filter(function (event) {\n            return event.eventFilter.eventTag === eventFilter.eventTag;\n        }).map(function (event) { return event.listener; });\n    };\n    Contract.prototype.removeAllListeners = function (eventName) {\n        var _this = this;\n        if (!this.provider) {\n            return this;\n        }\n        var eventFilter = this._getEventFilter(eventName);\n        this._events = this._events.filter(function (event) {\n            // Keep all other events\n            if (event.eventFilter.eventTag !== eventFilter.eventTag) {\n                return true;\n            }\n            // Deregister this event from the provider and filter it out\n            _this.provider.removeListener(event.eventFilter.filter, event.wrappedListener);\n            return false;\n        });\n        return this;\n    };\n    Contract.prototype.removeListener = function (eventName, listener) {\n        var _this = this;\n        if (!this.provider) {\n            return this;\n        }\n        var found = false;\n        var eventFilter = this._getEventFilter(eventName);\n        this._events = this._events.filter(function (event) {\n            // Make sure this event and listener match\n            if (event.eventFilter.eventTag !== eventFilter.eventTag) {\n                return true;\n            }\n            if (event.listener !== listener) {\n                return true;\n            }\n            _this.provider.removeListener(event.eventFilter.filter, event.wrappedListener);\n            // Already found a matching event in a previous loop\n            if (found) {\n                return true;\n            }\n            // REmove this event (returning false filters us out)\n            found = true;\n            return false;\n        });\n        return this;\n    };\n    return Contract;\n}());\nexports.Contract = Contract;\nvar ContractFactory = /** @class */ (function () {\n    // ParamType is not actually correct here, but for legacy reasons,\n    // we need it. See #721.\n    function ContractFactory(contractInterface, bytecode, signer) {\n        var bytecodeHex = null;\n        // Allow the bytecode object from the Solidity compiler\n        if (typeof (bytecode) === 'string') {\n            bytecodeHex = bytecode;\n        }\n        else if (bytes_1.isArrayish(bytecode)) {\n            bytecodeHex = bytes_1.hexlify(bytecode);\n        }\n        else if (typeof (bytecode.object) === 'string') {\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            errors.throwError('bytecode must be a valid hex string', errors.INVALID_ARGUMENT, { arg: 'bytecode', value: bytecode });\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== '0x') {\n            bytecodeHex = '0x' + bytecodeHex;\n        }\n        if (!bytes_1.isHexString(bytecodeHex)) {\n            errors.throwError('bytecode must be a valid hex string', errors.INVALID_ARGUMENT, { arg: 'bytecode', value: bytecode });\n        }\n        if ((bytecodeHex.length % 2) !== 0) {\n            errors.throwError('bytecode must be valid data (even length)', errors.INVALID_ARGUMENT, { arg: 'bytecode', value: bytecode });\n        }\n        properties_1.defineReadOnly(this, 'bytecode', bytecodeHex);\n        if (interface_1.Interface.isInterface(contractInterface)) {\n            properties_1.defineReadOnly(this, 'interface', contractInterface);\n        }\n        else {\n            properties_1.defineReadOnly(this, 'interface', new interface_1.Interface(contractInterface));\n        }\n        if (signer && !abstract_signer_1.Signer.isSigner(signer)) {\n            errors.throwError('invalid signer', errors.INVALID_ARGUMENT, { arg: 'signer', value: null });\n        }\n        properties_1.defineReadOnly(this, 'signer', signer || null);\n    }\n    ContractFactory.prototype.getDeployTransaction = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deployFunction.inputs.length + 1) {\n            tx = properties_1.shallowCopy(args.pop());\n            for (var key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error('unknown transaction override ' + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        ['data', 'from', 'to'].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            errors.throwError('cannot override ' + key, errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        // Make sure the call matches the constructor signature\n        errors.checkArgumentCount(args.length, this.interface.deployFunction.inputs.length, ' in Contract constructor');\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = this.interface.deployFunction.encode(this.bytecode, args);\n        return tx;\n    };\n    ContractFactory.prototype.deploy = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Get the deployment transaction (with optional overrides)\n        var tx = this.getDeployTransaction.apply(this, args);\n        // Send the deployment transaction\n        return this.signer.sendTransaction(tx).then(function (tx) {\n            var contract = new Contract(address_1.getContractAddress(tx), _this.interface, _this.signer);\n            properties_1.defineReadOnly(contract, 'deployTransaction', tx);\n            return contract;\n        });\n    };\n    ContractFactory.prototype.attach = function (address) {\n        return new Contract(address, this.interface, this.signer);\n    };\n    ContractFactory.prototype.connect = function (signer) {\n        return new ContractFactory(this.interface, this.bytecode, signer);\n    };\n    ContractFactory.fromSolidity = function (compilerOutput, signer) {\n        if (compilerOutput == null) {\n            errors.throwError('missing compiler output', errors.MISSING_ARGUMENT, { argument: 'compilerOutput' });\n        }\n        if (typeof (compilerOutput) === 'string') {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        var abi = compilerOutput.abi;\n        var bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new ContractFactory(abi, bytecode, signer);\n    };\n    return ContractFactory;\n}());\nexports.ContractFactory = ContractFactory;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/contract.js\n");

/***/ }),

/***/ "./node_modules/ethers/errors.js":
/*!***************************************!*\
  !*** ./node_modules/ethers/errors.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar _version_1 = __webpack_require__(/*! ./_version */ \"./node_modules/ethers/_version.js\");\n// Unknown Error\nexports.UNKNOWN_ERROR = 'UNKNOWN_ERROR';\n// Not implemented\nexports.NOT_IMPLEMENTED = 'NOT_IMPLEMENTED';\n// Missing new operator to an object\n//  - name: The name of the class\nexports.MISSING_NEW = 'MISSING_NEW';\n// Call exception\n//  - transaction: the transaction\n//  - address?: the contract address\n//  - args?: The arguments passed into the function\n//  - method?: The Solidity method signature\n//  - errorSignature?: The EIP848 error signature\n//  - errorArgs?: The EIP848 error parameters\n//  - reason: The reason (only for EIP848 \"Error(string)\")\nexports.CALL_EXCEPTION = 'CALL_EXCEPTION';\n// Invalid argument (e.g. value is incompatible with type) to a function:\n//   - argument: The argument name that was invalid\n//   - value: The value of the argument\nexports.INVALID_ARGUMENT = 'INVALID_ARGUMENT';\n// Missing argument to a function:\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.MISSING_ARGUMENT = 'MISSING_ARGUMENT';\n// Too many arguments\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT';\n// Numeric Fault\n//   - operation: the operation being executed\n//   - fault: the reason this faulted\nexports.NUMERIC_FAULT = 'NUMERIC_FAULT';\n// Insufficien funds (< value + gasLimit * gasPrice)\n//   - transaction: the transaction attempted\nexports.INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS';\n// Nonce has already been used\n//   - transaction: the transaction attempted\nexports.NONCE_EXPIRED = 'NONCE_EXPIRED';\n// The replacement fee for the transaction is too low\n//   - transaction: the transaction attempted\nexports.REPLACEMENT_UNDERPRICED = 'REPLACEMENT_UNDERPRICED';\n// Unsupported operation\n//   - operation\nexports.UNSUPPORTED_OPERATION = 'UNSUPPORTED_OPERATION';\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\n// @TODO: Enum\nfunction throwError(message, code, params) {\n    if (_censorErrors) {\n        throw new Error('unknown error');\n    }\n    if (!code) {\n        code = exports.UNKNOWN_ERROR;\n    }\n    if (!params) {\n        params = {};\n    }\n    var messageDetails = [];\n    Object.keys(params).forEach(function (key) {\n        try {\n            messageDetails.push(key + '=' + JSON.stringify(params[key]));\n        }\n        catch (error) {\n            messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));\n        }\n    });\n    messageDetails.push(\"version=\" + _version_1.version);\n    var reason = message;\n    if (messageDetails.length) {\n        message += ' (' + messageDetails.join(', ') + ')';\n    }\n    // @TODO: Any??\n    var error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n        error[key] = params[key];\n    });\n    throw error;\n}\nexports.throwError = throwError;\nfunction checkNew(self, kind) {\n    if (!(self instanceof kind)) {\n        throwError('missing new', exports.MISSING_NEW, { name: kind.name });\n    }\n}\nexports.checkNew = checkNew;\nfunction checkArgumentCount(count, expectedCount, suffix) {\n    if (!suffix) {\n        suffix = '';\n    }\n    if (count < expectedCount) {\n        throwError('missing argument' + suffix, exports.MISSING_ARGUMENT, { count: count, expectedCount: expectedCount });\n    }\n    if (count > expectedCount) {\n        throwError('too many arguments' + suffix, exports.UNEXPECTED_ARGUMENT, { count: count, expectedCount: expectedCount });\n    }\n}\nexports.checkArgumentCount = checkArgumentCount;\nfunction setCensorship(censorship, permanent) {\n    if (_permanentCensorErrors) {\n        throwError('error censorship permanent', exports.UNSUPPORTED_OPERATION, { operation: 'setCensorship' });\n    }\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n}\nexports.setCensorship = setCensorship;\nfunction checkNormalize() {\n    try {\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\n            try {\n                \"test\".normalize(form);\n            }\n            catch (error) {\n                throw new Error('missing ' + form);\n            }\n        });\n        if (String.fromCharCode(0xe9).normalize('NFD') !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error('broken implementation');\n        }\n    }\n    catch (error) {\n        throwError('platform missing String.prototype.normalize', exports.UNSUPPORTED_OPERATION, { operation: 'String.prototype.normalize', form: error.message });\n    }\n}\nexports.checkNormalize = checkNormalize;\nvar LogLevels = { debug: 1, \"default\": 2, info: 2, warn: 3, error: 4, off: 5 };\nvar LogLevel = LogLevels[\"default\"];\nfunction setLogLevel(logLevel) {\n    var level = LogLevels[logLevel];\n    if (level == null) {\n        warn(\"invliad log level - \" + logLevel);\n        return;\n    }\n    LogLevel = level;\n}\nexports.setLogLevel = setLogLevel;\nfunction log(logLevel, args) {\n    if (LogLevel > LogLevels[logLevel]) {\n        return;\n    }\n    console.log.apply(console, args);\n}\nfunction warn() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    log(\"warn\", args);\n}\nexports.warn = warn;\nfunction info() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    log(\"info\", args);\n}\nexports.info = info;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/errors.js\n");

/***/ }),

/***/ "./node_modules/ethers/ethers.js":
/*!***************************************!*\
  !*** ./node_modules/ethers/ethers.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar contract_1 = __webpack_require__(/*! ./contract */ \"./node_modules/ethers/contract.js\");\nexports.Contract = contract_1.Contract;\nexports.ContractFactory = contract_1.ContractFactory;\nexports.VoidSigner = contract_1.VoidSigner;\nvar abstract_signer_1 = __webpack_require__(/*! ./abstract-signer */ \"./node_modules/ethers/abstract-signer.js\");\nexports.Signer = abstract_signer_1.Signer;\nvar wallet_1 = __webpack_require__(/*! ./wallet */ \"./node_modules/ethers/wallet.js\");\nexports.Wallet = wallet_1.Wallet;\nvar constants = __importStar(__webpack_require__(/*! ./constants */ \"./node_modules/ethers/constants.js\"));\nexports.constants = constants;\nvar errors = __importStar(__webpack_require__(/*! ./errors */ \"./node_modules/ethers/errors.js\"));\nexports.errors = errors;\nvar providers = __importStar(__webpack_require__(/*! ./providers */ \"./node_modules/ethers/providers/index.js\"));\nexports.providers = providers;\nvar utils = __importStar(__webpack_require__(/*! ./utils */ \"./node_modules/ethers/utils/index.js\"));\nexports.utils = utils;\nvar wordlists = __importStar(__webpack_require__(/*! ./wordlists */ \"./node_modules/ethers/wordlists/index.js\"));\nexports.wordlists = wordlists;\n////////////////////////\n// Compile-Time Constants\n// This is empty in node, and used by browserify to inject extra goodies\nvar shims_1 = __webpack_require__(/*! ./utils/shims */ \"./node_modules/ethers/utils/shims.js\");\nexports.platform = shims_1.platform;\n// This is generated by \"npm run dist\"\nvar _version_1 = __webpack_require__(/*! ./_version */ \"./node_modules/ethers/_version.js\");\nexports.version = _version_1.version;\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network) {\n    if (network == null) {\n        network = 'homestead';\n    }\n    var n = utils.getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        errors.throwError('unsupported getDefaultProvider network', errors.UNSUPPORTED_OPERATION, {\n            operation: 'getDefaultProvider',\n            network: network\n        });\n    }\n    return n._defaultProvider(providers);\n}\nexports.getDefaultProvider = getDefaultProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL2V0aGVycy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixtQkFBTyxDQUFDLHFEQUFZO0FBQ3JDLGdCQUFnQjtBQUNoQix1QkFBdUI7QUFDdkIsa0JBQWtCO0FBQ2xCLHdCQUF3QixtQkFBTyxDQUFDLG1FQUFtQjtBQUNuRCxjQUFjO0FBQ2QsZUFBZSxtQkFBTyxDQUFDLGlEQUFVO0FBQ2pDLGNBQWM7QUFDZCw2QkFBNkIsbUJBQU8sQ0FBQyx1REFBYTtBQUNsRCxpQkFBaUI7QUFDakIsMEJBQTBCLG1CQUFPLENBQUMsaURBQVU7QUFDNUMsY0FBYztBQUNkLDZCQUE2QixtQkFBTyxDQUFDLDZEQUFhO0FBQ2xELGlCQUFpQjtBQUNqQix5QkFBeUIsbUJBQU8sQ0FBQyxxREFBUztBQUMxQyxhQUFhO0FBQ2IsNkJBQTZCLG1CQUFPLENBQUMsNkRBQWE7QUFDbEQsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQywyREFBZTtBQUNyQyxnQkFBZ0I7QUFDaEI7QUFDQSxpQkFBaUIsbUJBQU8sQ0FBQyxxREFBWTtBQUNyQyxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL2V0aGVycy5qcz8zNTJjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSByZXN1bHRba10gPSBtb2Rba107XG4gICAgcmVzdWx0W1wiZGVmYXVsdFwiXSA9IG1vZDtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBjb250cmFjdF8xID0gcmVxdWlyZShcIi4vY29udHJhY3RcIik7XG5leHBvcnRzLkNvbnRyYWN0ID0gY29udHJhY3RfMS5Db250cmFjdDtcbmV4cG9ydHMuQ29udHJhY3RGYWN0b3J5ID0gY29udHJhY3RfMS5Db250cmFjdEZhY3Rvcnk7XG5leHBvcnRzLlZvaWRTaWduZXIgPSBjb250cmFjdF8xLlZvaWRTaWduZXI7XG52YXIgYWJzdHJhY3Rfc2lnbmVyXzEgPSByZXF1aXJlKFwiLi9hYnN0cmFjdC1zaWduZXJcIik7XG5leHBvcnRzLlNpZ25lciA9IGFic3RyYWN0X3NpZ25lcl8xLlNpZ25lcjtcbnZhciB3YWxsZXRfMSA9IHJlcXVpcmUoXCIuL3dhbGxldFwiKTtcbmV4cG9ydHMuV2FsbGV0ID0gd2FsbGV0XzEuV2FsbGV0O1xudmFyIGNvbnN0YW50cyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIikpO1xuZXhwb3J0cy5jb25zdGFudHMgPSBjb25zdGFudHM7XG52YXIgZXJyb3JzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9yc1wiKSk7XG5leHBvcnRzLmVycm9ycyA9IGVycm9ycztcbnZhciBwcm92aWRlcnMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vcHJvdmlkZXJzXCIpKTtcbmV4cG9ydHMucHJvdmlkZXJzID0gcHJvdmlkZXJzO1xudmFyIHV0aWxzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzXCIpKTtcbmV4cG9ydHMudXRpbHMgPSB1dGlscztcbnZhciB3b3JkbGlzdHMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vd29yZGxpc3RzXCIpKTtcbmV4cG9ydHMud29yZGxpc3RzID0gd29yZGxpc3RzO1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBDb21waWxlLVRpbWUgQ29uc3RhbnRzXG4vLyBUaGlzIGlzIGVtcHR5IGluIG5vZGUsIGFuZCB1c2VkIGJ5IGJyb3dzZXJpZnkgdG8gaW5qZWN0IGV4dHJhIGdvb2RpZXNcbnZhciBzaGltc18xID0gcmVxdWlyZShcIi4vdXRpbHMvc2hpbXNcIik7XG5leHBvcnRzLnBsYXRmb3JtID0gc2hpbXNfMS5wbGF0Zm9ybTtcbi8vIFRoaXMgaXMgZ2VuZXJhdGVkIGJ5IFwibnBtIHJ1biBkaXN0XCJcbnZhciBfdmVyc2lvbl8xID0gcmVxdWlyZShcIi4vX3ZlcnNpb25cIik7XG5leHBvcnRzLnZlcnNpb24gPSBfdmVyc2lvbl8xLnZlcnNpb247XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEhlbHBlciBGdW5jdGlvbnNcbmZ1bmN0aW9uIGdldERlZmF1bHRQcm92aWRlcihuZXR3b3JrKSB7XG4gICAgaWYgKG5ldHdvcmsgPT0gbnVsbCkge1xuICAgICAgICBuZXR3b3JrID0gJ2hvbWVzdGVhZCc7XG4gICAgfVxuICAgIHZhciBuID0gdXRpbHMuZ2V0TmV0d29yayhuZXR3b3JrKTtcbiAgICBpZiAoIW4gfHwgIW4uX2RlZmF1bHRQcm92aWRlcikge1xuICAgICAgICBlcnJvcnMudGhyb3dFcnJvcigndW5zdXBwb3J0ZWQgZ2V0RGVmYXVsdFByb3ZpZGVyIG5ldHdvcmsnLCBlcnJvcnMuVU5TVVBQT1JURURfT1BFUkFUSU9OLCB7XG4gICAgICAgICAgICBvcGVyYXRpb246ICdnZXREZWZhdWx0UHJvdmlkZXInLFxuICAgICAgICAgICAgbmV0d29yazogbmV0d29ya1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG4uX2RlZmF1bHRQcm92aWRlcihwcm92aWRlcnMpO1xufVxuZXhwb3J0cy5nZXREZWZhdWx0UHJvdmlkZXIgPSBnZXREZWZhdWx0UHJvdmlkZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethers/ethers.js\n");

/***/ }),

/***/ "./node_modules/ethers/index.js":
/*!**************************************!*\
  !*** ./node_modules/ethers/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ethers = __importStar(__webpack_require__(/*! ./ethers */ \"./node_modules/ethers/ethers.js\"));\nexports.ethers = ethers;\n__export(__webpack_require__(/*! ./ethers */ \"./node_modules/ethers/ethers.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLG1CQUFPLENBQUMsaURBQVU7QUFDNUMsY0FBYztBQUNkLFNBQVMsbUJBQU8sQ0FBQyxpREFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy9ldGhlcnMvaW5kZXguanM/ODYwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmZ1bmN0aW9uIF9fZXhwb3J0KG0pIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmICghZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XG59XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgcmVzdWx0W2tdID0gbW9kW2tdO1xuICAgIHJlc3VsdFtcImRlZmF1bHRcIl0gPSBtb2Q7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZXRoZXJzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2V0aGVyc1wiKSk7XG5leHBvcnRzLmV0aGVycyA9IGV0aGVycztcbl9fZXhwb3J0KHJlcXVpcmUoXCIuL2V0aGVyc1wiKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethers/index.js\n");

/***/ }),

/***/ "./node_modules/ethers/node_modules/bn.js/lib/bn.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethers/node_modules/bn.js/lib/bn.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = (__webpack_require__(/*! buffer */ \"buffer\").Buffer);\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/node_modules/bn.js/lib/bn.js\n");

/***/ }),

/***/ "./node_modules/ethers/node_modules/uuid/rng.js":
/*!******************************************************!*\
  !*** ./node_modules/ethers/node_modules/uuid/rng.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var rb = (__webpack_require__(/*! crypto */ \"crypto\").randomBytes);\nmodule.exports = function() {\n  return rb(16);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL25vZGVfbW9kdWxlcy91dWlkL3JuZy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxTQUFTLHlEQUE2QjtBQUN0QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL25vZGVfbW9kdWxlcy91dWlkL3JuZy5qcz9lMGNkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByYiA9IHJlcXVpcmUoJ2NyeXB0bycpLnJhbmRvbUJ5dGVzO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHJiKDE2KTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethers/node_modules/uuid/rng.js\n");

/***/ }),

/***/ "./node_modules/ethers/node_modules/uuid/uuid.js":
/*!*******************************************************!*\
  !*** ./node_modules/ethers/node_modules/uuid/uuid.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = __webpack_require__(/*! ./rng */ \"./node_modules/ethers/node_modules/uuid/rng.js\");\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/node_modules/uuid/uuid.js\n");

/***/ }),

/***/ "./node_modules/ethers/providers/abstract-provider.js":
/*!************************************************************!*\
  !*** ./node_modules/ethers/providers/abstract-provider.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar properties_1 = __webpack_require__(/*! ../utils/properties */ \"./node_modules/ethers/utils/properties.js\");\n;\n;\n///////////////////////////////\n// Exported Abstracts\nvar Provider = /** @class */ (function () {\n    function Provider() {\n        properties_1.setType(this, 'Provider');\n    }\n    Provider.isProvider = function (value) {\n        return properties_1.isType(value, 'Provider');\n    };\n    return Provider;\n}());\nexports.Provider = Provider;\n//defineReadOnly(Signer, 'inherits', inheritable(Abstract));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3Byb3ZpZGVycy9hYnN0cmFjdC1wcm92aWRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsbUJBQU8sQ0FBQyxzRUFBcUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGdCQUFnQjtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy9ldGhlcnMvcHJvdmlkZXJzL2Fic3RyYWN0LXByb3ZpZGVyLmpzPzYyODkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgcHJvcGVydGllc18xID0gcmVxdWlyZShcIi4uL3V0aWxzL3Byb3BlcnRpZXNcIik7XG47XG47XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBFeHBvcnRlZCBBYnN0cmFjdHNcbnZhciBQcm92aWRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQcm92aWRlcigpIHtcbiAgICAgICAgcHJvcGVydGllc18xLnNldFR5cGUodGhpcywgJ1Byb3ZpZGVyJyk7XG4gICAgfVxuICAgIFByb3ZpZGVyLmlzUHJvdmlkZXIgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHByb3BlcnRpZXNfMS5pc1R5cGUodmFsdWUsICdQcm92aWRlcicpO1xuICAgIH07XG4gICAgcmV0dXJuIFByb3ZpZGVyO1xufSgpKTtcbmV4cG9ydHMuUHJvdmlkZXIgPSBQcm92aWRlcjtcbi8vZGVmaW5lUmVhZE9ubHkoU2lnbmVyLCAnaW5oZXJpdHMnLCBpbmhlcml0YWJsZShBYnN0cmFjdCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/providers/abstract-provider.js\n");

/***/ }),

/***/ "./node_modules/ethers/providers/base-provider.js":
/*!********************************************************!*\
  !*** ./node_modules/ethers/providers/base-provider.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar address_1 = __webpack_require__(/*! ../utils/address */ \"./node_modules/ethers/utils/address.js\");\nvar bignumber_1 = __webpack_require__(/*! ../utils/bignumber */ \"./node_modules/ethers/utils/bignumber.js\");\nvar bytes_1 = __webpack_require__(/*! ../utils/bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar constants_1 = __webpack_require__(/*! ../constants */ \"./node_modules/ethers/constants.js\");\nvar hash_1 = __webpack_require__(/*! ../utils/hash */ \"./node_modules/ethers/utils/hash.js\");\nvar networks_1 = __webpack_require__(/*! ../utils/networks */ \"./node_modules/ethers/utils/networks.js\");\nvar properties_1 = __webpack_require__(/*! ../utils/properties */ \"./node_modules/ethers/utils/properties.js\");\nvar rlp_1 = __webpack_require__(/*! ../utils/rlp */ \"./node_modules/ethers/utils/rlp.js\");\nvar transaction_1 = __webpack_require__(/*! ../utils/transaction */ \"./node_modules/ethers/utils/transaction.js\");\nvar utf8_1 = __webpack_require__(/*! ../utils/utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar web_1 = __webpack_require__(/*! ../utils/web */ \"./node_modules/ethers/utils/web.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\n///////////////////////////////\n// Imported Abstracts\nvar abstract_provider_1 = __webpack_require__(/*! ./abstract-provider */ \"./node_modules/ethers/providers/abstract-provider.js\");\n//////////////////////////////\n// Request and Response Checking\n// @TODO: not any?\nfunction check(format, object) {\n    var result = {};\n    for (var key in format) {\n        try {\n            var value = format[key](object[key]);\n            if (value !== undefined) {\n                result[key] = value;\n            }\n        }\n        catch (error) {\n            error.checkKey = key;\n            error.checkValue = object[key];\n            throw error;\n        }\n    }\n    return result;\n}\nfunction allowNull(check, nullValue) {\n    return (function (value) {\n        if (value == null) {\n            return nullValue;\n        }\n        return check(value);\n    });\n}\nfunction allowFalsish(check, replaceValue) {\n    return (function (value) {\n        if (!value) {\n            return replaceValue;\n        }\n        return check(value);\n    });\n}\nfunction arrayOf(check) {\n    return (function (array) {\n        if (!Array.isArray(array)) {\n            throw new Error('not an array');\n        }\n        var result = [];\n        array.forEach(function (value) {\n            result.push(check(value));\n        });\n        return result;\n    });\n}\nfunction checkHash(hash, requirePrefix) {\n    if (typeof (hash) === 'string') {\n        // geth-etc does add a \"0x\" prefix on receipt.root\n        if (!requirePrefix && hash.substring(0, 2) !== '0x') {\n            hash = '0x' + hash;\n        }\n        if (bytes_1.hexDataLength(hash) === 32) {\n            return hash.toLowerCase();\n        }\n    }\n    errors.throwError('invalid hash', errors.INVALID_ARGUMENT, { arg: 'hash', value: hash });\n    return null;\n}\nfunction checkNumber(number) {\n    return bignumber_1.bigNumberify(number).toNumber();\n}\n// Returns the difficulty as a number, or if too large (i.e. PoA network) null\nfunction checkDifficulty(value) {\n    var v = bignumber_1.bigNumberify(value);\n    try {\n        return v.toNumber();\n    }\n    catch (error) { }\n    return null;\n}\nfunction checkBoolean(value) {\n    if (typeof (value) === 'boolean') {\n        return value;\n    }\n    if (typeof (value) === 'string') {\n        if (value === 'true') {\n            return true;\n        }\n        if (value === 'false') {\n            return false;\n        }\n    }\n    throw new Error('invaid boolean - ' + value);\n}\nfunction checkUint256(uint256) {\n    if (!bytes_1.isHexString(uint256)) {\n        throw new Error('invalid uint256');\n    }\n    while (uint256.length < 66) {\n        uint256 = '0x0' + uint256.substring(2);\n    }\n    return uint256;\n}\n/*\nfunction checkString(string) {\n    if (typeof(string) !== 'string') { throw new Error('invalid string'); }\n    return string;\n}\n*/\nfunction checkBlockTag(blockTag) {\n    if (blockTag == null) {\n        return 'latest';\n    }\n    if (blockTag === 'earliest') {\n        return '0x0';\n    }\n    if (blockTag === 'latest' || blockTag === 'pending') {\n        return blockTag;\n    }\n    if (typeof (blockTag) === 'number') {\n        return bytes_1.hexStripZeros(bytes_1.hexlify(blockTag));\n    }\n    if (bytes_1.isHexString(blockTag)) {\n        return bytes_1.hexStripZeros(blockTag);\n    }\n    throw new Error('invalid blockTag');\n}\nvar formatTransaction = {\n    hash: checkHash,\n    blockHash: allowNull(checkHash, null),\n    blockNumber: allowNull(checkNumber, null),\n    transactionIndex: allowNull(checkNumber, null),\n    confirmations: allowNull(checkNumber, null),\n    from: address_1.getAddress,\n    gasPrice: bignumber_1.bigNumberify,\n    gasLimit: bignumber_1.bigNumberify,\n    to: allowNull(address_1.getAddress, null),\n    value: bignumber_1.bigNumberify,\n    nonce: checkNumber,\n    data: bytes_1.hexlify,\n    r: allowNull(checkUint256),\n    s: allowNull(checkUint256),\n    v: allowNull(checkNumber),\n    creates: allowNull(address_1.getAddress, null),\n    raw: allowNull(bytes_1.hexlify),\n};\nfunction checkTransactionResponse(transaction) {\n    // Rename gas to gasLimit\n    if (transaction.gas != null && transaction.gasLimit == null) {\n        transaction.gasLimit = transaction.gas;\n    }\n    // Some clients (TestRPC) do strange things like return 0x0 for the\n    // 0 address; correct this to be a real address\n    if (transaction.to && bignumber_1.bigNumberify(transaction.to).isZero()) {\n        transaction.to = '0x0000000000000000000000000000000000000000';\n    }\n    // Rename input to data\n    if (transaction.input != null && transaction.data == null) {\n        transaction.data = transaction.input;\n    }\n    // If to and creates are empty, populate the creates from the transaction\n    if (transaction.to == null && transaction.creates == null) {\n        transaction.creates = address_1.getContractAddress(transaction);\n    }\n    // @TODO: use transaction.serialize? Have to add support for including v, r, and s...\n    if (!transaction.raw) {\n        // Very loose providers (e.g. TestRPC) don't provide a signature or raw\n        if (transaction.v && transaction.r && transaction.s) {\n            var raw = [\n                bytes_1.stripZeros(bytes_1.hexlify(transaction.nonce)),\n                bytes_1.stripZeros(bytes_1.hexlify(transaction.gasPrice)),\n                bytes_1.stripZeros(bytes_1.hexlify(transaction.gasLimit)),\n                (transaction.to || \"0x\"),\n                bytes_1.stripZeros(bytes_1.hexlify(transaction.value || '0x')),\n                bytes_1.hexlify(transaction.data || '0x'),\n                bytes_1.stripZeros(bytes_1.hexlify(transaction.v || '0x')),\n                bytes_1.stripZeros(bytes_1.hexlify(transaction.r)),\n                bytes_1.stripZeros(bytes_1.hexlify(transaction.s)),\n            ];\n            transaction.raw = rlp_1.encode(raw);\n        }\n    }\n    var result = check(formatTransaction, transaction);\n    var networkId = transaction.networkId;\n    // geth-etc returns chainId\n    if (transaction.chainId != null && networkId == null && result.v == null) {\n        networkId = transaction.chainId;\n    }\n    if (bytes_1.isHexString(networkId)) {\n        networkId = bignumber_1.bigNumberify(networkId).toNumber();\n    }\n    if (typeof (networkId) !== 'number' && result.v != null) {\n        networkId = (result.v - 35) / 2;\n        if (networkId < 0) {\n            networkId = 0;\n        }\n        networkId = parseInt(networkId);\n    }\n    if (typeof (networkId) !== 'number') {\n        networkId = 0;\n    }\n    result.networkId = networkId;\n    if (result.chainId == null && networkId != null) {\n        result.chainId = networkId;\n    }\n    // 0x0000... should actually be null\n    if (result.blockHash && result.blockHash.replace(/0/g, '') === 'x') {\n        result.blockHash = null;\n    }\n    return result;\n}\nvar formatBlock = {\n    hash: checkHash,\n    parentHash: checkHash,\n    number: checkNumber,\n    timestamp: checkNumber,\n    nonce: allowNull(bytes_1.hexlify),\n    difficulty: checkDifficulty,\n    gasLimit: bignumber_1.bigNumberify,\n    gasUsed: bignumber_1.bigNumberify,\n    miner: address_1.getAddress,\n    extraData: bytes_1.hexlify,\n    transactions: allowNull(arrayOf(checkHash)),\n};\nvar formatBlockWithTransactions = properties_1.shallowCopy(formatBlock);\nformatBlockWithTransactions.transactions = allowNull(arrayOf(checkTransactionResponse));\nfunction checkBlock(block, includeTransactions) {\n    if (block.author != null && block.miner == null) {\n        block.miner = block.author;\n    }\n    return check(includeTransactions ? formatBlockWithTransactions : formatBlock, block);\n}\nvar formatTransactionRequest = {\n    from: allowNull(address_1.getAddress),\n    nonce: allowNull(checkNumber),\n    gasLimit: allowNull(bignumber_1.bigNumberify),\n    gasPrice: allowNull(bignumber_1.bigNumberify),\n    to: allowNull(address_1.getAddress),\n    value: allowNull(bignumber_1.bigNumberify),\n    data: allowNull(bytes_1.hexlify),\n};\nfunction checkTransactionRequest(transaction) {\n    return check(formatTransactionRequest, transaction);\n}\nvar formatTransactionReceiptLog = {\n    transactionLogIndex: allowNull(checkNumber),\n    transactionIndex: checkNumber,\n    blockNumber: checkNumber,\n    transactionHash: checkHash,\n    address: address_1.getAddress,\n    topics: arrayOf(checkHash),\n    data: bytes_1.hexlify,\n    logIndex: checkNumber,\n    blockHash: checkHash,\n};\nfunction checkTransactionReceiptLog(log) {\n    return check(formatTransactionReceiptLog, log);\n}\nvar formatTransactionReceipt = {\n    to: allowNull(address_1.getAddress, null),\n    from: allowNull(address_1.getAddress, null),\n    contractAddress: allowNull(address_1.getAddress, null),\n    transactionIndex: checkNumber,\n    root: allowNull(checkHash),\n    gasUsed: bignumber_1.bigNumberify,\n    logsBloom: allowNull(bytes_1.hexlify),\n    blockHash: checkHash,\n    transactionHash: checkHash,\n    logs: arrayOf(checkTransactionReceiptLog),\n    blockNumber: checkNumber,\n    confirmations: allowNull(checkNumber, null),\n    cumulativeGasUsed: bignumber_1.bigNumberify,\n    status: allowNull(checkNumber)\n};\nfunction checkTransactionReceipt(transactionReceipt) {\n    //var status = transactionReceipt.status;\n    //var root = transactionReceipt.root;\n    var result = check(formatTransactionReceipt, transactionReceipt);\n    result.logs.forEach(function (entry, index) {\n        if (entry.transactionLogIndex == null) {\n            entry.transactionLogIndex = index;\n        }\n    });\n    if (transactionReceipt.status != null) {\n        result.byzantium = true;\n    }\n    return result;\n}\nfunction checkTopics(topics) {\n    if (Array.isArray(topics)) {\n        topics.forEach(function (topic) {\n            checkTopics(topic);\n        });\n    }\n    else if (topics != null) {\n        checkHash(topics);\n    }\n    return topics;\n}\nvar formatFilter = {\n    fromBlock: allowNull(checkBlockTag, undefined),\n    toBlock: allowNull(checkBlockTag, undefined),\n    address: allowNull(address_1.getAddress, undefined),\n    topics: allowNull(checkTopics, undefined),\n};\nvar formatFilterByBlock = {\n    blockHash: allowNull(checkHash, undefined),\n    address: allowNull(address_1.getAddress, undefined),\n    topics: allowNull(checkTopics, undefined),\n};\nfunction checkFilter(filter) {\n    if (filter && filter.blockHash) {\n        return check(formatFilterByBlock, filter);\n    }\n    return check(formatFilter, filter);\n}\nvar formatLog = {\n    blockNumber: allowNull(checkNumber),\n    blockHash: allowNull(checkHash),\n    transactionIndex: checkNumber,\n    removed: allowNull(checkBoolean),\n    address: address_1.getAddress,\n    data: allowFalsish(bytes_1.hexlify, '0x'),\n    topics: arrayOf(checkHash),\n    transactionHash: checkHash,\n    logIndex: checkNumber,\n};\nfunction checkLog(log) {\n    return check(formatLog, log);\n}\n//////////////////////////////\n// Event Serializeing\nfunction serializeTopics(topics) {\n    return topics.map(function (topic) {\n        if (typeof (topic) === 'string') {\n            return topic;\n        }\n        else if (Array.isArray(topic)) {\n            topic.forEach(function (topic) {\n                if (topic !== null && bytes_1.hexDataLength(topic) !== 32) {\n                    errors.throwError('invalid topic', errors.INVALID_ARGUMENT, { argument: 'topic', value: topic });\n                }\n            });\n            return topic.join(',');\n        }\n        else if (topic === null) {\n            return '';\n        }\n        return errors.throwError('invalid topic value', errors.INVALID_ARGUMENT, { argument: 'topic', value: topic });\n    }).join('&');\n}\nfunction deserializeTopics(data) {\n    return data.split(/&/g).map(function (topic) {\n        var comps = topic.split(',');\n        if (comps.length === 1) {\n            if (comps[0] === '') {\n                return null;\n            }\n            return topic;\n        }\n        return comps.map(function (topic) {\n            if (topic === '') {\n                return null;\n            }\n            return topic;\n        });\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === 'string') {\n        if (bytes_1.hexDataLength(eventName) === 20) {\n            return 'address:' + address_1.getAddress(eventName);\n        }\n        eventName = eventName.toLowerCase();\n        if (bytes_1.hexDataLength(eventName) === 32) {\n            return 'tx:' + eventName;\n        }\n        if (eventName.indexOf(':') === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return 'filter::' + serializeTopics(eventName);\n    }\n    else if (eventName && typeof (eventName) === 'object') {\n        return 'filter:' + (eventName.address || '') + ':' + serializeTopics(eventName.topics || []);\n    }\n    throw new Error('invalid event - ' + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nvar BaseProvider = /** @class */ (function (_super) {\n    __extends(BaseProvider, _super);\n    function BaseProvider(network) {\n        var _this = _super.call(this) || this;\n        errors.checkNew(_this, abstract_provider_1.Provider);\n        if (network instanceof Promise) {\n            properties_1.defineReadOnly(_this, 'ready', network.then(function (network) {\n                properties_1.defineReadOnly(_this, '_network', network);\n                return network;\n            }));\n            // Squash any \"unhandled promise\" errors; the don't need to be handled\n            _this.ready.catch(function (error) { });\n        }\n        else {\n            var knownNetwork = networks_1.getNetwork((network == null) ? 'homestead' : network);\n            if (knownNetwork) {\n                properties_1.defineReadOnly(_this, '_network', knownNetwork);\n                properties_1.defineReadOnly(_this, 'ready', Promise.resolve(_this._network));\n            }\n            else {\n                errors.throwError('invalid network', errors.INVALID_ARGUMENT, { arg: 'network', value: network });\n            }\n        }\n        _this._lastBlockNumber = -2;\n        // Balances being watched for changes\n        _this._balances = {};\n        // Events being listened to\n        _this._events = [];\n        _this._pollingInterval = 4000;\n        _this._emitted = { block: -2 };\n        _this._fastQueryDate = 0;\n        return _this;\n    }\n    BaseProvider.prototype._doPoll = function () {\n        var _this = this;\n        this.getBlockNumber().then(function (blockNumber) {\n            if (!_this.polling) {\n                return;\n            }\n            _this._setFastBlockNumber(blockNumber);\n            // If the block hasn't changed, meh.\n            if (blockNumber === _this._lastBlockNumber) {\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (_this._emitted.block === -2) {\n                _this._emitted.block = blockNumber - 1;\n            }\n            // Notify all listener for each block that has passed\n            for (var i = _this._emitted.block + 1; i <= blockNumber; i++) {\n                _this.emit('block', i);\n            }\n            // The emitted block was updated, check for obsolete events\n            if (_this._emitted.block !== blockNumber) {\n                _this._emitted.block = blockNumber;\n                Object.keys(_this._emitted).forEach(function (key) {\n                    // The block event does not expire\n                    if (key === 'block') {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    var eventBlockNumber = _this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === 'pending') {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete _this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (_this._lastBlockNumber === -2) {\n                _this._lastBlockNumber = blockNumber - 1;\n            }\n            // Sweep balances and remove addresses we no longer have events for\n            var newBalances = {};\n            // Find all transaction hashes we are waiting on\n            var uniqueEventTags = {};\n            _this._events.forEach(function (event) {\n                uniqueEventTags[event.tag] = true;\n            });\n            Object.keys(uniqueEventTags).forEach(function (tag) {\n                var comps = tag.split(':');\n                switch (comps[0]) {\n                    case 'tx': {\n                        var hash_2 = comps[1];\n                        _this.getTransactionReceipt(hash_2).then(function (receipt) {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            _this._emitted['t:' + hash_2] = receipt.blockNumber;\n                            _this.emit(hash_2, receipt);\n                            return null;\n                        }).catch(function (error) { _this.emit('error', error); });\n                        break;\n                    }\n                    case 'address': {\n                        var address_2 = comps[1];\n                        if (_this._balances[address_2]) {\n                            newBalances[address_2] = _this._balances[address_2];\n                        }\n                        _this.getBalance(address_2, 'latest').then(function (balance) {\n                            var lastBalance = _this._balances[address_2];\n                            if (lastBalance && balance.eq(lastBalance)) {\n                                return;\n                            }\n                            _this._balances[address_2] = balance;\n                            _this.emit(address_2, balance);\n                            return null;\n                        }).catch(function (error) { _this.emit('error', error); });\n                        break;\n                    }\n                    case 'filter': {\n                        var topics = deserializeTopics(comps[2]);\n                        var filter_1 = {\n                            address: comps[1],\n                            fromBlock: _this._lastBlockNumber + 1,\n                            toBlock: blockNumber,\n                            topics: topics\n                        };\n                        if (!filter_1.address) {\n                            delete filter_1.address;\n                        }\n                        _this.getLogs(filter_1).then(function (logs) {\n                            if (logs.length === 0) {\n                                return;\n                            }\n                            logs.forEach(function (log) {\n                                _this._emitted['b:' + log.blockHash] = log.blockNumber;\n                                _this._emitted['t:' + log.transactionHash] = log.blockNumber;\n                                _this.emit(filter_1, log);\n                            });\n                            return null;\n                        }).catch(function (error) { _this.emit('error', error); });\n                        break;\n                    }\n                }\n            });\n            _this._lastBlockNumber = blockNumber;\n            _this._balances = newBalances;\n            return null;\n        }).catch(function (error) { });\n        this.doPoll();\n    };\n    BaseProvider.prototype.resetEventsBlock = function (blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this._doPoll();\n        }\n    };\n    Object.defineProperty(BaseProvider.prototype, \"network\", {\n        get: function () {\n            return this._network;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseProvider.prototype.getNetwork = function () {\n        return this.ready;\n    };\n    Object.defineProperty(BaseProvider.prototype, \"blockNumber\", {\n        get: function () {\n            return this._fastBlockNumber;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseProvider.prototype, \"polling\", {\n        get: function () {\n            return (this._poller != null);\n        },\n        set: function (value) {\n            var _this = this;\n            setTimeout(function () {\n                if (value && !_this._poller) {\n                    _this._poller = setInterval(_this._doPoll.bind(_this), _this.pollingInterval);\n                    _this._doPoll();\n                }\n                else if (!value && _this._poller) {\n                    clearInterval(_this._poller);\n                    _this._poller = null;\n                }\n            }, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseProvider.prototype, \"pollingInterval\", {\n        get: function () {\n            return this._pollingInterval;\n        },\n        set: function (value) {\n            var _this = this;\n            if (typeof (value) !== 'number' || value <= 0 || parseInt(String(value)) != value) {\n                throw new Error('invalid polling interval');\n            }\n            this._pollingInterval = value;\n            if (this._poller) {\n                clearInterval(this._poller);\n                this._poller = setInterval(function () { _this._doPoll(); }, this._pollingInterval);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseProvider.prototype._getFastBlockNumber = function () {\n        var _this = this;\n        var now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then(function (blockNumber) {\n                if (_this._fastBlockNumber == null || blockNumber > _this._fastBlockNumber) {\n                    _this._fastBlockNumber = blockNumber;\n                }\n                return _this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    };\n    BaseProvider.prototype._setFastBlockNumber = function (blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    };\n    // @TODO: Add .poller which must be an event emitter with a 'start', 'stop' and 'block' event;\n    //        this will be used once we move to the WebSocket or other alternatives to polling\n    BaseProvider.prototype.waitForTransaction = function (transactionHash, confirmations) {\n        var _this = this;\n        if (confirmations == null) {\n            confirmations = 1;\n        }\n        return this.getTransactionReceipt(transactionHash).then(function (receipt) {\n            if (confirmations === 0 || (receipt && receipt.confirmations >= confirmations)) {\n                return receipt;\n            }\n            return (new Promise(function (resolve) {\n                var handler = function (receipt) {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    _this.removeListener(transactionHash, handler);\n                    resolve(receipt);\n                };\n                _this.on(transactionHash, handler);\n            }));\n        });\n    };\n    BaseProvider.prototype.getBlockNumber = function () {\n        var _this = this;\n        return this.ready.then(function () {\n            return _this.perform('getBlockNumber', {}).then(function (result) {\n                var value = parseInt(result);\n                if (value != result) {\n                    throw new Error('invalid response - getBlockNumber');\n                }\n                _this._setFastBlockNumber(value);\n                return value;\n            });\n        });\n    };\n    BaseProvider.prototype.getGasPrice = function () {\n        var _this = this;\n        return this.ready.then(function () {\n            return _this.perform('getGasPrice', {}).then(function (result) {\n                return bignumber_1.bigNumberify(result);\n            });\n        });\n    };\n    BaseProvider.prototype.getBalance = function (addressOrName, blockTag) {\n        var _this = this;\n        return this.ready.then(function () {\n            return properties_1.resolveProperties({ addressOrName: addressOrName, blockTag: blockTag }).then(function (_a) {\n                var addressOrName = _a.addressOrName, blockTag = _a.blockTag;\n                return _this._getAddress(addressOrName).then(function (address) {\n                    var params = { address: address, blockTag: checkBlockTag(blockTag) };\n                    return _this.perform('getBalance', params).then(function (result) {\n                        return bignumber_1.bigNumberify(result);\n                    });\n                });\n            });\n        });\n    };\n    BaseProvider.prototype.getTransactionCount = function (addressOrName, blockTag) {\n        var _this = this;\n        return this.ready.then(function () {\n            return properties_1.resolveProperties({ addressOrName: addressOrName, blockTag: blockTag }).then(function (_a) {\n                var addressOrName = _a.addressOrName, blockTag = _a.blockTag;\n                return _this._getAddress(addressOrName).then(function (address) {\n                    var params = { address: address, blockTag: checkBlockTag(blockTag) };\n                    return _this.perform('getTransactionCount', params).then(function (result) {\n                        return bignumber_1.bigNumberify(result).toNumber();\n                    });\n                });\n            });\n        });\n    };\n    BaseProvider.prototype.getCode = function (addressOrName, blockTag) {\n        var _this = this;\n        return this.ready.then(function () {\n            return properties_1.resolveProperties({ addressOrName: addressOrName, blockTag: blockTag }).then(function (_a) {\n                var addressOrName = _a.addressOrName, blockTag = _a.blockTag;\n                return _this._getAddress(addressOrName).then(function (address) {\n                    var params = { address: address, blockTag: checkBlockTag(blockTag) };\n                    return _this.perform('getCode', params).then(function (result) {\n                        return bytes_1.hexlify(result);\n                    });\n                });\n            });\n        });\n    };\n    BaseProvider.prototype.getStorageAt = function (addressOrName, position, blockTag) {\n        var _this = this;\n        return this.ready.then(function () {\n            return properties_1.resolveProperties({ addressOrName: addressOrName, position: position, blockTag: blockTag }).then(function (_a) {\n                var addressOrName = _a.addressOrName, position = _a.position, blockTag = _a.blockTag;\n                return _this._getAddress(addressOrName).then(function (address) {\n                    var params = {\n                        address: address,\n                        blockTag: checkBlockTag(blockTag),\n                        position: bytes_1.hexStripZeros(bytes_1.hexlify(position)),\n                    };\n                    return _this.perform('getStorageAt', params).then(function (result) {\n                        return bytes_1.hexlify(result);\n                    });\n                });\n            });\n        });\n    };\n    BaseProvider.prototype.sendTransaction = function (signedTransaction) {\n        var _this = this;\n        return this.ready.then(function () {\n            return properties_1.resolveProperties({ signedTransaction: signedTransaction }).then(function (_a) {\n                var signedTransaction = _a.signedTransaction;\n                var params = { signedTransaction: bytes_1.hexlify(signedTransaction) };\n                return _this.perform('sendTransaction', params).then(function (hash) {\n                    return _this._wrapTransaction(transaction_1.parse(signedTransaction), hash);\n                }, function (error) {\n                    error.transaction = transaction_1.parse(signedTransaction);\n                    if (error.transaction.hash) {\n                        error.transactionHash = error.transaction.hash;\n                    }\n                    throw error;\n                });\n            });\n        });\n    };\n    // This should be called by any subclass wrapping a TransactionResponse\n    BaseProvider.prototype._wrapTransaction = function (tx, hash) {\n        var _this = this;\n        if (hash != null && bytes_1.hexDataLength(hash) !== 32) {\n            throw new Error('invalid response - sendTransaction');\n        }\n        var result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            errors.throwError('Transaction hash mismatch from Provider.sendTransaction.', errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        // @TODO: (confirmations? number, timeout? number)\n        result.wait = function (confirmations) {\n            // We know this transaction *must* exist (whether it gets mined is\n            // another story), so setting an emitted value forces us to\n            // wait even if the node returns null for the receipt\n            if (confirmations !== 0) {\n                _this._emitted['t:' + tx.hash] = 'pending';\n            }\n            return _this.waitForTransaction(tx.hash, confirmations).then(function (receipt) {\n                if (receipt == null && confirmations === 0) {\n                    return null;\n                }\n                // No longer pending, allow the polling loop to garbage collect this\n                _this._emitted['t:' + tx.hash] = receipt.blockNumber;\n                if (receipt.status === 0) {\n                    errors.throwError('transaction failed', errors.CALL_EXCEPTION, {\n                        transactionHash: tx.hash,\n                        transaction: tx\n                    });\n                }\n                return receipt;\n            });\n        };\n        return result;\n    };\n    BaseProvider.prototype.call = function (transaction, blockTag) {\n        var _this = this;\n        var tx = properties_1.shallowCopy(transaction);\n        return this.ready.then(function () {\n            return properties_1.resolveProperties({ blockTag: blockTag, tx: tx }).then(function (_a) {\n                var blockTag = _a.blockTag, tx = _a.tx;\n                return _this._resolveNames(tx, ['to', 'from']).then(function (tx) {\n                    var params = { blockTag: checkBlockTag(blockTag), transaction: checkTransactionRequest(tx) };\n                    return _this.perform('call', params).then(function (result) {\n                        return bytes_1.hexlify(result);\n                    });\n                });\n            });\n        });\n    };\n    BaseProvider.prototype.estimateGas = function (transaction) {\n        var _this = this;\n        var tx = {\n            to: transaction.to,\n            from: transaction.from,\n            data: transaction.data,\n            gasPrice: transaction.gasPrice,\n            value: transaction.value\n        };\n        return this.ready.then(function () {\n            return properties_1.resolveProperties(tx).then(function (tx) {\n                return _this._resolveNames(tx, ['to', 'from']).then(function (tx) {\n                    var params = { transaction: checkTransactionRequest(tx) };\n                    return _this.perform('estimateGas', params).then(function (result) {\n                        return bignumber_1.bigNumberify(result);\n                    });\n                });\n            });\n        });\n    };\n    BaseProvider.prototype.getBlock = function (blockHashOrBlockTag, includeTransactions) {\n        var _this = this;\n        return this.ready.then(function () {\n            return properties_1.resolveProperties({ blockHashOrBlockTag: blockHashOrBlockTag }).then(function (_a) {\n                var blockHashOrBlockTag = _a.blockHashOrBlockTag;\n                try {\n                    var blockHash_1 = bytes_1.hexlify(blockHashOrBlockTag);\n                    if (bytes_1.hexDataLength(blockHash_1) === 32) {\n                        return web_1.poll(function () {\n                            return _this.perform('getBlock', { blockHash: blockHash_1, includeTransactions: !!includeTransactions }).then(function (block) {\n                                if (block == null) {\n                                    if (_this._emitted['b:' + blockHash_1] == null) {\n                                        return null;\n                                    }\n                                    return undefined;\n                                }\n                                return checkBlock(block, includeTransactions);\n                            });\n                        }, { onceBlock: _this });\n                    }\n                }\n                catch (error) { }\n                try {\n                    var blockNumber_1 = -128;\n                    var blockTag_1 = checkBlockTag(blockHashOrBlockTag);\n                    if (bytes_1.isHexString(blockTag_1)) {\n                        blockNumber_1 = parseInt(blockTag_1.substring(2), 16);\n                    }\n                    return web_1.poll(function () {\n                        return _this.perform('getBlock', { blockTag: blockTag_1, includeTransactions: !!includeTransactions }).then(function (block) {\n                            if (block == null) {\n                                if (blockNumber_1 <= _this._emitted.block) {\n                                    return undefined;\n                                }\n                                return null;\n                            }\n                            return checkBlock(block, includeTransactions);\n                        });\n                    }, { onceBlock: _this });\n                }\n                catch (error) { }\n                throw new Error('invalid block hash or block tag');\n            });\n        });\n    };\n    BaseProvider.prototype.getTransaction = function (transactionHash) {\n        var _this = this;\n        return this.ready.then(function () {\n            return properties_1.resolveProperties({ transactionHash: transactionHash }).then(function (_a) {\n                var transactionHash = _a.transactionHash;\n                var params = { transactionHash: checkHash(transactionHash, true) };\n                return web_1.poll(function () {\n                    return _this.perform('getTransaction', params).then(function (result) {\n                        if (result == null) {\n                            if (_this._emitted['t:' + transactionHash] == null) {\n                                return null;\n                            }\n                            return undefined;\n                        }\n                        var tx = BaseProvider.checkTransactionResponse(result);\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            return _this._getFastBlockNumber().then(function (blockNumber) {\n                                // Add the confirmations using the fast block number (pessimistic)\n                                var confirmations = (blockNumber - tx.blockNumber) + 1;\n                                if (confirmations <= 0) {\n                                    confirmations = 1;\n                                }\n                                tx.confirmations = confirmations;\n                                return _this._wrapTransaction(tx);\n                            });\n                        }\n                        return _this._wrapTransaction(tx);\n                    });\n                }, { onceBlock: _this });\n            });\n        });\n    };\n    BaseProvider.prototype.getTransactionReceipt = function (transactionHash) {\n        var _this = this;\n        return this.ready.then(function () {\n            return properties_1.resolveProperties({ transactionHash: transactionHash }).then(function (_a) {\n                var transactionHash = _a.transactionHash;\n                var params = { transactionHash: checkHash(transactionHash, true) };\n                return web_1.poll(function () {\n                    return _this.perform('getTransactionReceipt', params).then(function (result) {\n                        if (result == null) {\n                            if (_this._emitted['t:' + transactionHash] == null) {\n                                return null;\n                            }\n                            return undefined;\n                        }\n                        // \"geth-etc\" returns receipts before they are ready\n                        if (result.blockHash == null) {\n                            return undefined;\n                        }\n                        var receipt = checkTransactionReceipt(result);\n                        if (receipt.blockNumber == null) {\n                            receipt.confirmations = 0;\n                        }\n                        else if (receipt.confirmations == null) {\n                            return _this._getFastBlockNumber().then(function (blockNumber) {\n                                // Add the confirmations using the fast block number (pessimistic)\n                                var confirmations = (blockNumber - receipt.blockNumber) + 1;\n                                if (confirmations <= 0) {\n                                    confirmations = 1;\n                                }\n                                receipt.confirmations = confirmations;\n                                return receipt;\n                            });\n                        }\n                        return receipt;\n                    });\n                }, { onceBlock: _this });\n            });\n        });\n    };\n    BaseProvider.prototype.getLogs = function (filter) {\n        var _this = this;\n        return this.ready.then(function () {\n            return properties_1.resolveProperties(filter).then(function (filter) {\n                return _this._resolveNames(filter, ['address']).then(function (filter) {\n                    var params = { filter: checkFilter(filter) };\n                    return _this.perform('getLogs', params).then(function (result) {\n                        return arrayOf(checkLog)(result);\n                    });\n                });\n            });\n        });\n    };\n    BaseProvider.prototype.getEtherPrice = function () {\n        var _this = this;\n        return this.ready.then(function () {\n            return _this.perform('getEtherPrice', {}).then(function (result) {\n                // @TODO: Check valid float\n                return result;\n            });\n        });\n    };\n    BaseProvider.prototype._getAddress = function (addressOrName) {\n        return this.resolveName(addressOrName).then(function (address) {\n            if (address == null) {\n                errors.throwError(\"ENS name not configured\", errors.UNSUPPORTED_OPERATION, { operation: \"resolveName(\" + JSON.stringify(addressOrName) + \")\" });\n            }\n            return address;\n        });\n    };\n    // @TODO: Could probably use resolveProperties instead?\n    BaseProvider.prototype._resolveNames = function (object, keys) {\n        var promises = [];\n        var result = properties_1.shallowCopy(object);\n        keys.forEach(function (key) {\n            if (result[key] == null) {\n                return;\n            }\n            promises.push(this._getAddress(result[key]).then(function (address) {\n                result[key] = address;\n                return;\n            }));\n        }, this);\n        return Promise.all(promises).then(function () { return result; });\n    };\n    BaseProvider.prototype._getResolver = function (name) {\n        var _this = this;\n        // Get the resolver from the blockchain\n        return this.getNetwork().then(function (network) {\n            // No ENS...\n            if (!network.ensAddress) {\n                errors.throwError('network does not support ENS', errors.UNSUPPORTED_OPERATION, { operation: 'ENS', network: network.name });\n            }\n            // keccak256('resolver(bytes32)')\n            var data = '0x0178b8bf' + hash_1.namehash(name).substring(2);\n            var transaction = { to: network.ensAddress, data: data };\n            return _this.call(transaction).then(function (data) {\n                // extract the address from the data\n                if (bytes_1.hexDataLength(data) !== 32) {\n                    return null;\n                }\n                var address = address_1.getAddress(bytes_1.hexDataSlice(data, 12));\n                if (address === constants_1.AddressZero) {\n                    return null;\n                }\n                return address;\n            });\n        });\n    };\n    BaseProvider.prototype.resolveName = function (name) {\n        var _this = this;\n        // If it is a promise, resolve it then recurse\n        if (name instanceof Promise) {\n            return name.then(function (addressOrName) {\n                return _this.resolveName(addressOrName);\n            });\n        }\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(address_1.getAddress(name));\n        }\n        catch (error) {\n            // See #694\n            if (bytes_1.isHexString(name)) {\n                throw error;\n            }\n        }\n        var self = this;\n        var nodeHash = hash_1.namehash(name);\n        // Get the addr from the resovler\n        return this._getResolver(name).then(function (resolverAddress) {\n            if (resolverAddress == null) {\n                return null;\n            }\n            // keccak256('addr(bytes32)')\n            var data = '0x3b3b57de' + nodeHash.substring(2);\n            var transaction = { to: resolverAddress, data: data };\n            return self.call(transaction);\n            // extract the address from the data\n        }).then(function (data) {\n            if (bytes_1.hexDataLength(data) !== 32) {\n                return null;\n            }\n            var address = address_1.getAddress(bytes_1.hexDataSlice(data, 12));\n            if (address === constants_1.AddressZero) {\n                return null;\n            }\n            return address;\n        });\n    };\n    BaseProvider.prototype.lookupAddress = function (address) {\n        var _this = this;\n        if (address instanceof Promise) {\n            return address.then(function (address) {\n                return _this.lookupAddress(address);\n            });\n        }\n        address = address_1.getAddress(address);\n        var name = address.substring(2) + '.addr.reverse';\n        var nodehash = hash_1.namehash(name);\n        var self = this;\n        return this._getResolver(name).then(function (resolverAddress) {\n            if (!resolverAddress) {\n                return null;\n            }\n            // keccak('name(bytes32)')\n            var data = '0x691f3431' + nodehash.substring(2);\n            var transaction = { to: resolverAddress, data: data };\n            return self.call(transaction);\n        }).then(function (data) {\n            if (data == null) {\n                return null;\n            }\n            // Strip off the \"0x\"\n            data = data.substring(2);\n            // Strip off the dynamic string pointer (0x20)\n            if (data.length < 64) {\n                return null;\n            }\n            data = data.substring(64);\n            if (data.length < 64) {\n                return null;\n            }\n            var length = bignumber_1.bigNumberify('0x' + data.substring(0, 64)).toNumber();\n            data = data.substring(64);\n            if (2 * length > data.length) {\n                return null;\n            }\n            var name = utf8_1.toUtf8String('0x' + data.substring(0, 2 * length));\n            // Make sure the reverse record matches the foward record\n            return self.resolveName(name).then(function (addr) {\n                if (addr != address) {\n                    return null;\n                }\n                return name;\n            });\n        });\n    };\n    BaseProvider.checkTransactionResponse = function (transaction) {\n        return checkTransactionResponse(transaction);\n    };\n    BaseProvider.prototype.doPoll = function () {\n    };\n    BaseProvider.prototype.perform = function (method, params) {\n        errors.throwError(method + ' not implemented', errors.NOT_IMPLEMENTED, { operation: method });\n        return null;\n    };\n    BaseProvider.prototype._startPending = function () {\n        errors.warn('WARNING: this provider does not support pending events');\n    };\n    BaseProvider.prototype._stopPending = function () {\n    };\n    BaseProvider.prototype._addEventListener = function (eventName, listener, once) {\n        this._events.push({\n            tag: getEventTag(eventName),\n            listener: listener,\n            once: once,\n        });\n        if (eventName === 'pending') {\n            this._startPending();\n        }\n        this.polling = true;\n    };\n    BaseProvider.prototype.on = function (eventName, listener) {\n        this._addEventListener(eventName, listener, false);\n        return this;\n    };\n    BaseProvider.prototype.once = function (eventName, listener) {\n        this._addEventListener(eventName, listener, true);\n        return this;\n    };\n    BaseProvider.prototype.addEventListener = function (eventName, listener) {\n        return this.on(eventName, listener);\n    };\n    BaseProvider.prototype.emit = function (eventName) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var result = false;\n        var eventTag = getEventTag(eventName);\n        this._events = this._events.filter(function (event) {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(function () {\n                event.listener.apply(_this, args);\n            }, 0);\n            result = true;\n            return !(event.once);\n        });\n        if (this.listenerCount() === 0) {\n            this.polling = false;\n        }\n        return result;\n    };\n    BaseProvider.prototype.listenerCount = function (eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        var eventTag = getEventTag(eventName);\n        return this._events.filter(function (event) {\n            return (event.tag === eventTag);\n        }).length;\n    };\n    BaseProvider.prototype.listeners = function (eventName) {\n        var eventTag = getEventTag(eventName);\n        return this._events.filter(function (event) {\n            return (event.tag === eventTag);\n        }).map(function (event) {\n            return event.listener;\n        });\n    };\n    BaseProvider.prototype.removeAllListeners = function (eventName) {\n        if (eventName == null) {\n            this._events = [];\n            this._stopPending();\n        }\n        else {\n            var eventTag_1 = getEventTag(eventName);\n            this._events = this._events.filter(function (event) {\n                return (event.tag !== eventTag_1);\n            });\n            if (eventName === 'pending') {\n                this._stopPending();\n            }\n        }\n        if (this._events.length === 0) {\n            this.polling = false;\n        }\n        return this;\n    };\n    BaseProvider.prototype.removeListener = function (eventName, listener) {\n        var found = false;\n        var eventTag = getEventTag(eventName);\n        this._events = this._events.filter(function (event) {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            return false;\n        });\n        if (eventName === 'pending' && this.listenerCount('pending') === 0) {\n            this._stopPending();\n        }\n        if (this.listenerCount() === 0) {\n            this.polling = false;\n        }\n        return this;\n    };\n    return BaseProvider;\n}(abstract_provider_1.Provider));\nexports.BaseProvider = BaseProvider;\nproperties_1.defineReadOnly(abstract_provider_1.Provider, 'inherits', properties_1.inheritable(abstract_provider_1.Provider));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/providers/base-provider.js\n");

/***/ }),

/***/ "./node_modules/ethers/providers/etherscan-provider.js":
/*!*************************************************************!*\
  !*** ./node_modules/ethers/providers/etherscan-provider.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar base_provider_1 = __webpack_require__(/*! ./base-provider */ \"./node_modules/ethers/providers/base-provider.js\");\nvar bytes_1 = __webpack_require__(/*! ../utils/bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar properties_1 = __webpack_require__(/*! ../utils/properties */ \"./node_modules/ethers/utils/properties.js\");\nvar web_1 = __webpack_require__(/*! ../utils/web */ \"./node_modules/ethers/utils/web.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\n///////////////////////////////\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionString(transaction) {\n    var result = [];\n    for (var key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        var value = bytes_1.hexlify(transaction[key]);\n        if ({ gasLimit: true, gasPrice: true, nonce: true, value: true }[key]) {\n            value = bytes_1.hexStripZeros(value);\n        }\n        result.push(key + '=' + value);\n    }\n    return result.join('&');\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === 'No records found' || result.message === 'No transactions found')) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != 'OK') {\n        // @TODO: not any\n        var error = new Error('invalid response');\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    if (result.jsonrpc != '2.0') {\n        // @TODO: not any\n        var error = new Error('invalid response');\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        var error = new Error(result.error.message || 'unknown error');\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === 'pending') {\n        throw new Error('pending not supported');\n    }\n    if (blockTag === 'latest') {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nvar defaultApiKey = \"8FG3JMZ9USS4NTA6YKEKHINU56SEPPVBJR\";\nvar EtherscanProvider = /** @class */ (function (_super) {\n    __extends(EtherscanProvider, _super);\n    function EtherscanProvider(network, apiKey) {\n        var _this = _super.call(this, network) || this;\n        errors.checkNew(_this, EtherscanProvider);\n        var name = 'invalid';\n        if (_this.network) {\n            name = _this.network.name;\n        }\n        var baseUrl = null;\n        switch (name) {\n            case 'homestead':\n                baseUrl = 'https://api.etherscan.io';\n                break;\n            case 'ropsten':\n                baseUrl = 'https://api-ropsten.etherscan.io';\n                break;\n            case 'rinkeby':\n                baseUrl = 'https://api-rinkeby.etherscan.io';\n                break;\n            case 'kovan':\n                baseUrl = 'https://api-kovan.etherscan.io';\n                break;\n            case 'goerli':\n                baseUrl = 'https://api-goerli.etherscan.io';\n                break;\n            default:\n                throw new Error('unsupported network');\n        }\n        properties_1.defineReadOnly(_this, 'baseUrl', baseUrl);\n        properties_1.defineReadOnly(_this, 'apiKey', apiKey || defaultApiKey);\n        return _this;\n    }\n    EtherscanProvider.prototype.perform = function (method, params) {\n        var _this = this;\n        var url = this.baseUrl;\n        var apiKey = '';\n        if (this.apiKey) {\n            apiKey += '&apikey=' + this.apiKey;\n        }\n        var get = function (url, procFunc) {\n            return web_1.fetchJson(url, null, procFunc || getJsonResult).then(function (result) {\n                _this.emit('debug', {\n                    action: 'perform',\n                    request: url,\n                    response: result,\n                    provider: _this\n                });\n                return result;\n            });\n        };\n        switch (method) {\n            case 'getBlockNumber':\n                url += '/api?module=proxy&action=eth_blockNumber' + apiKey;\n                return get(url);\n            case 'getGasPrice':\n                url += '/api?module=proxy&action=eth_gasPrice' + apiKey;\n                return get(url);\n            case 'getBalance':\n                // Returns base-10 result\n                url += '/api?module=account&action=balance&address=' + params.address;\n                url += '&tag=' + params.blockTag + apiKey;\n                return get(url, getResult);\n            case 'getTransactionCount':\n                url += '/api?module=proxy&action=eth_getTransactionCount&address=' + params.address;\n                url += '&tag=' + params.blockTag + apiKey;\n                return get(url);\n            case 'getCode':\n                url += '/api?module=proxy&action=eth_getCode&address=' + params.address;\n                url += '&tag=' + params.blockTag + apiKey;\n                return get(url, getJsonResult);\n            case 'getStorageAt':\n                url += '/api?module=proxy&action=eth_getStorageAt&address=' + params.address;\n                url += '&position=' + params.position;\n                url += '&tag=' + params.blockTag + apiKey;\n                return get(url, getJsonResult);\n            case 'sendTransaction':\n                url += '/api?module=proxy&action=eth_sendRawTransaction&hex=' + params.signedTransaction;\n                url += apiKey;\n                return get(url).catch(function (error) {\n                    if (error.responseText) {\n                        // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n                        if (error.responseText.toLowerCase().indexOf('insufficient funds') >= 0) {\n                            errors.throwError('insufficient funds', errors.INSUFFICIENT_FUNDS, {});\n                        }\n                        // \"Transaction with the same hash was already imported.\"\n                        if (error.responseText.indexOf('same hash was already imported') >= 0) {\n                            errors.throwError('nonce has already been used', errors.NONCE_EXPIRED, {});\n                        }\n                        // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n                        if (error.responseText.indexOf('another transaction with same nonce') >= 0) {\n                            errors.throwError('replacement fee too low', errors.REPLACEMENT_UNDERPRICED, {});\n                        }\n                    }\n                    throw error;\n                });\n            case 'getBlock':\n                if (params.blockTag) {\n                    url += '/api?module=proxy&action=eth_getBlockByNumber&tag=' + params.blockTag;\n                    if (params.includeTransactions) {\n                        url += '&boolean=true';\n                    }\n                    else {\n                        url += '&boolean=false';\n                    }\n                    url += apiKey;\n                    return get(url);\n                }\n                return Promise.reject(new Error('getBlock by blockHash not implemeneted'));\n            case 'getTransaction':\n                url += '/api?module=proxy&action=eth_getTransactionByHash&txhash=' + params.transactionHash;\n                url += apiKey;\n                return get(url);\n            case 'getTransactionReceipt':\n                url += '/api?module=proxy&action=eth_getTransactionReceipt&txhash=' + params.transactionHash;\n                url += apiKey;\n                return get(url);\n            case 'call': {\n                var transaction = getTransactionString(params.transaction);\n                if (transaction) {\n                    transaction = '&' + transaction;\n                }\n                url += '/api?module=proxy&action=eth_call' + transaction;\n                //url += '&tag=' + params.blockTag + apiKey;\n                if (params.blockTag !== 'latest') {\n                    return Promise.reject(new Error('EtherscanProvider does not support blockTag for call'));\n                }\n                url += apiKey;\n                return get(url);\n            }\n            case 'estimateGas': {\n                var transaction = getTransactionString(params.transaction);\n                if (transaction) {\n                    transaction = '&' + transaction;\n                }\n                url += '/api?module=proxy&action=eth_estimateGas&' + transaction;\n                url += apiKey;\n                return get(url);\n            }\n            case 'getLogs':\n                url += '/api?module=logs&action=getLogs';\n                try {\n                    if (params.filter.fromBlock) {\n                        url += '&fromBlock=' + checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        url += '&toBlock=' + checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.blockHash) {\n                        try {\n                            errors.throwError(\"Etherscan does not support blockHash filters\", errors.UNSUPPORTED_OPERATION, {\n                                operation: \"getLogs(blockHash)\"\n                            });\n                        }\n                        catch (error) {\n                            return Promise.reject(error);\n                        }\n                    }\n                    if (params.filter.address) {\n                        url += '&address=' + params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            throw new Error('unsupported topic format');\n                        }\n                        var topic0 = params.filter.topics[0];\n                        if (typeof (topic0) !== 'string' || topic0.length !== 66) {\n                            throw new Error('unsupported topic0 format');\n                        }\n                        url += '&topic0=' + topic0;\n                    }\n                }\n                catch (error) {\n                    return Promise.reject(error);\n                }\n                url += apiKey;\n                var self = this;\n                return get(url, getResult).then(function (logs) {\n                    var txs = {};\n                    var seq = Promise.resolve();\n                    logs.forEach(function (log) {\n                        seq = seq.then(function () {\n                            if (log.blockHash != null) {\n                                return null;\n                            }\n                            log.blockHash = txs[log.transactionHash];\n                            if (log.blockHash == null) {\n                                return self.getTransaction(log.transactionHash).then(function (tx) {\n                                    txs[log.transactionHash] = tx.blockHash;\n                                    log.blockHash = tx.blockHash;\n                                    return null;\n                                });\n                            }\n                            return null;\n                        });\n                    });\n                    return seq.then(function () {\n                        return logs;\n                    });\n                });\n            case 'getEtherPrice':\n                if (this.network.name !== 'homestead') {\n                    return Promise.resolve(0.0);\n                }\n                url += '/api?module=stats&action=ethprice';\n                url += apiKey;\n                return get(url, getResult).then(function (result) {\n                    return parseFloat(result.ethusd);\n                });\n            default:\n                break;\n        }\n        return _super.prototype.perform.call(this, method, params);\n    };\n    // @TODO: Allow startBlock and endBlock to be Promises\n    EtherscanProvider.prototype.getHistory = function (addressOrName, startBlock, endBlock) {\n        var _this = this;\n        var url = this.baseUrl;\n        var apiKey = '';\n        if (this.apiKey) {\n            apiKey += '&apikey=' + this.apiKey;\n        }\n        if (startBlock == null) {\n            startBlock = 0;\n        }\n        if (endBlock == null) {\n            endBlock = 99999999;\n        }\n        return this.resolveName(addressOrName).then(function (address) {\n            url += '/api?module=account&action=txlist&address=' + address;\n            url += '&startblock=' + startBlock;\n            url += '&endblock=' + endBlock;\n            url += '&sort=asc' + apiKey;\n            return web_1.fetchJson(url, null, getResult).then(function (result) {\n                _this.emit('debug', {\n                    action: 'getHistory',\n                    request: url,\n                    response: result,\n                    provider: _this\n                });\n                var output = [];\n                result.forEach(function (tx) {\n                    ['contractAddress', 'to'].forEach(function (key) {\n                        if (tx[key] == '') {\n                            delete tx[key];\n                        }\n                    });\n                    if (tx.creates == null && tx.contractAddress != null) {\n                        tx.creates = tx.contractAddress;\n                    }\n                    var item = base_provider_1.BaseProvider.checkTransactionResponse(tx);\n                    if (tx.timeStamp) {\n                        item.timestamp = parseInt(tx.timeStamp);\n                    }\n                    output.push(item);\n                });\n                return output;\n            });\n        });\n    };\n    return EtherscanProvider;\n}(base_provider_1.BaseProvider));\nexports.EtherscanProvider = EtherscanProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/providers/etherscan-provider.js\n");

/***/ }),

/***/ "./node_modules/ethers/providers/fallback-provider.js":
/*!************************************************************!*\
  !*** ./node_modules/ethers/providers/fallback-provider.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar base_provider_1 = __webpack_require__(/*! ./base-provider */ \"./node_modules/ethers/providers/base-provider.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\n// Returns:\n//  - true is all networks match\n//  - false if any network is null\n//  - throws if any 2 networks do not match\nfunction checkNetworks(networks) {\n    var result = true;\n    var check = null;\n    networks.forEach(function (network) {\n        // Null\n        if (network == null) {\n            result = false;\n            return;\n        }\n        // Have nothing to compre to yet\n        if (check == null) {\n            check = network;\n            return;\n        }\n        // Matches!\n        if (check.name === network.name &&\n            check.chainId === network.chainId &&\n            ((check.ensAddress === network.ensAddress) ||\n                (check.ensAddress == null && network.ensAddress == null))) {\n            return;\n        }\n        errors.throwError('provider mismatch', errors.INVALID_ARGUMENT, { arg: 'networks', value: networks });\n    });\n    return result;\n}\nvar FallbackProvider = /** @class */ (function (_super) {\n    __extends(FallbackProvider, _super);\n    function FallbackProvider(providers) {\n        var _this = this;\n        if (providers.length === 0) {\n            throw new Error('no providers');\n        }\n        // All networks are ready, we can know the network for certain\n        var ready = checkNetworks(providers.map(function (p) { return p.network; }));\n        if (ready) {\n            _this = _super.call(this, providers[0].network) || this;\n        }\n        else {\n            // The network won't be known until all child providers know\n            var ready_1 = Promise.all(providers.map(function (p) { return p.getNetwork(); })).then(function (networks) {\n                if (!checkNetworks(networks)) {\n                    errors.throwError('getNetwork returned null', errors.UNKNOWN_ERROR, {});\n                }\n                return networks[0];\n            });\n            _this = _super.call(this, ready_1) || this;\n        }\n        errors.checkNew(_this, FallbackProvider);\n        // Preserve a copy, so we don't get mutated\n        _this._providers = providers.slice(0);\n        return _this;\n    }\n    Object.defineProperty(FallbackProvider.prototype, \"providers\", {\n        get: function () {\n            // Return a copy, so we don't get mutated\n            return this._providers.slice(0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FallbackProvider.prototype.perform = function (method, params) {\n        // Creates a copy of the providers array\n        var providers = this.providers;\n        return new Promise(function (resolve, reject) {\n            var firstError = null;\n            function next() {\n                if (!providers.length) {\n                    reject(firstError);\n                    return;\n                }\n                var provider = providers.shift();\n                provider.perform(method, params).then(function (result) {\n                    return resolve(result);\n                }).catch(function (error) {\n                    if (!firstError) {\n                        firstError = error;\n                    }\n                    setTimeout(next, 0);\n                });\n            }\n            next();\n        });\n    };\n    return FallbackProvider;\n}(base_provider_1.BaseProvider));\nexports.FallbackProvider = FallbackProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3Byb3ZpZGVycy9mYWxsYmFjay1wcm92aWRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ25GLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCLG1CQUFPLENBQUMseUVBQWlCO0FBQy9DLDBCQUEwQixtQkFBTyxDQUFDLGtEQUFXO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEVBQTBFLGtDQUFrQztBQUM1RyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsbUJBQW1CO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsd0JBQXdCO0FBQzNGO0FBQ0EsMEZBQTBGO0FBQzFGO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLENBQUM7QUFDRCx3QkFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL3Byb3ZpZGVycy9mYWxsYmFjay1wcm92aWRlci5qcz9lNzE1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIHJlc3VsdFtrXSA9IG1vZFtrXTtcbiAgICByZXN1bHRbXCJkZWZhdWx0XCJdID0gbW9kO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGJhc2VfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2Jhc2UtcHJvdmlkZXJcIik7XG52YXIgZXJyb3JzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuLi9lcnJvcnNcIikpO1xuLy8gUmV0dXJuczpcbi8vICAtIHRydWUgaXMgYWxsIG5ldHdvcmtzIG1hdGNoXG4vLyAgLSBmYWxzZSBpZiBhbnkgbmV0d29yayBpcyBudWxsXG4vLyAgLSB0aHJvd3MgaWYgYW55IDIgbmV0d29ya3MgZG8gbm90IG1hdGNoXG5mdW5jdGlvbiBjaGVja05ldHdvcmtzKG5ldHdvcmtzKSB7XG4gICAgdmFyIHJlc3VsdCA9IHRydWU7XG4gICAgdmFyIGNoZWNrID0gbnVsbDtcbiAgICBuZXR3b3Jrcy5mb3JFYWNoKGZ1bmN0aW9uIChuZXR3b3JrKSB7XG4gICAgICAgIC8vIE51bGxcbiAgICAgICAgaWYgKG5ldHdvcmsgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gSGF2ZSBub3RoaW5nIHRvIGNvbXByZSB0byB5ZXRcbiAgICAgICAgaWYgKGNoZWNrID09IG51bGwpIHtcbiAgICAgICAgICAgIGNoZWNrID0gbmV0d29yaztcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBNYXRjaGVzIVxuICAgICAgICBpZiAoY2hlY2submFtZSA9PT0gbmV0d29yay5uYW1lICYmXG4gICAgICAgICAgICBjaGVjay5jaGFpbklkID09PSBuZXR3b3JrLmNoYWluSWQgJiZcbiAgICAgICAgICAgICgoY2hlY2suZW5zQWRkcmVzcyA9PT0gbmV0d29yay5lbnNBZGRyZXNzKSB8fFxuICAgICAgICAgICAgICAgIChjaGVjay5lbnNBZGRyZXNzID09IG51bGwgJiYgbmV0d29yay5lbnNBZGRyZXNzID09IG51bGwpKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVycm9ycy50aHJvd0Vycm9yKCdwcm92aWRlciBtaXNtYXRjaCcsIGVycm9ycy5JTlZBTElEX0FSR1VNRU5ULCB7IGFyZzogJ25ldHdvcmtzJywgdmFsdWU6IG5ldHdvcmtzIH0pO1xuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG52YXIgRmFsbGJhY2tQcm92aWRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRmFsbGJhY2tQcm92aWRlciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBGYWxsYmFja1Byb3ZpZGVyKHByb3ZpZGVycykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAocHJvdmlkZXJzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdubyBwcm92aWRlcnMnKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBBbGwgbmV0d29ya3MgYXJlIHJlYWR5LCB3ZSBjYW4ga25vdyB0aGUgbmV0d29yayBmb3IgY2VydGFpblxuICAgICAgICB2YXIgcmVhZHkgPSBjaGVja05ldHdvcmtzKHByb3ZpZGVycy5tYXAoZnVuY3Rpb24gKHApIHsgcmV0dXJuIHAubmV0d29yazsgfSkpO1xuICAgICAgICBpZiAocmVhZHkpIHtcbiAgICAgICAgICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgcHJvdmlkZXJzWzBdLm5ldHdvcmspIHx8IHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBUaGUgbmV0d29yayB3b24ndCBiZSBrbm93biB1bnRpbCBhbGwgY2hpbGQgcHJvdmlkZXJzIGtub3dcbiAgICAgICAgICAgIHZhciByZWFkeV8xID0gUHJvbWlzZS5hbGwocHJvdmlkZXJzLm1hcChmdW5jdGlvbiAocCkgeyByZXR1cm4gcC5nZXROZXR3b3JrKCk7IH0pKS50aGVuKGZ1bmN0aW9uIChuZXR3b3Jrcykge1xuICAgICAgICAgICAgICAgIGlmICghY2hlY2tOZXR3b3JrcyhuZXR3b3JrcykpIHtcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JzLnRocm93RXJyb3IoJ2dldE5ldHdvcmsgcmV0dXJuZWQgbnVsbCcsIGVycm9ycy5VTktOT1dOX0VSUk9SLCB7fSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBuZXR3b3Jrc1swXTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCByZWFkeV8xKSB8fCB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIGVycm9ycy5jaGVja05ldyhfdGhpcywgRmFsbGJhY2tQcm92aWRlcik7XG4gICAgICAgIC8vIFByZXNlcnZlIGEgY29weSwgc28gd2UgZG9uJ3QgZ2V0IG11dGF0ZWRcbiAgICAgICAgX3RoaXMuX3Byb3ZpZGVycyA9IHByb3ZpZGVycy5zbGljZSgwKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRmFsbGJhY2tQcm92aWRlci5wcm90b3R5cGUsIFwicHJvdmlkZXJzXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAvLyBSZXR1cm4gYSBjb3B5LCBzbyB3ZSBkb24ndCBnZXQgbXV0YXRlZFxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3Byb3ZpZGVycy5zbGljZSgwKTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgRmFsbGJhY2tQcm92aWRlci5wcm90b3R5cGUucGVyZm9ybSA9IGZ1bmN0aW9uIChtZXRob2QsIHBhcmFtcykge1xuICAgICAgICAvLyBDcmVhdGVzIGEgY29weSBvZiB0aGUgcHJvdmlkZXJzIGFycmF5XG4gICAgICAgIHZhciBwcm92aWRlcnMgPSB0aGlzLnByb3ZpZGVycztcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgIHZhciBmaXJzdEVycm9yID0gbnVsbDtcbiAgICAgICAgICAgIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFwcm92aWRlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChmaXJzdEVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgcHJvdmlkZXIgPSBwcm92aWRlcnMuc2hpZnQoKTtcbiAgICAgICAgICAgICAgICBwcm92aWRlci5wZXJmb3JtKG1ldGhvZCwgcGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFmaXJzdEVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaXJzdEVycm9yID0gZXJyb3I7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChuZXh0LCAwKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5leHQoKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gRmFsbGJhY2tQcm92aWRlcjtcbn0oYmFzZV9wcm92aWRlcl8xLkJhc2VQcm92aWRlcikpO1xuZXhwb3J0cy5GYWxsYmFja1Byb3ZpZGVyID0gRmFsbGJhY2tQcm92aWRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethers/providers/fallback-provider.js\n");

/***/ }),

/***/ "./node_modules/ethers/providers/index.js":
/*!************************************************!*\
  !*** ./node_modules/ethers/providers/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar abstract_provider_1 = __webpack_require__(/*! ./abstract-provider */ \"./node_modules/ethers/providers/abstract-provider.js\");\nexports.Provider = abstract_provider_1.Provider;\nvar base_provider_1 = __webpack_require__(/*! ./base-provider */ \"./node_modules/ethers/providers/base-provider.js\");\nexports.BaseProvider = base_provider_1.BaseProvider;\nvar etherscan_provider_1 = __webpack_require__(/*! ./etherscan-provider */ \"./node_modules/ethers/providers/etherscan-provider.js\");\nexports.EtherscanProvider = etherscan_provider_1.EtherscanProvider;\nvar fallback_provider_1 = __webpack_require__(/*! ./fallback-provider */ \"./node_modules/ethers/providers/fallback-provider.js\");\nexports.FallbackProvider = fallback_provider_1.FallbackProvider;\nvar ipc_provider_1 = __webpack_require__(/*! ./ipc-provider */ \"./node_modules/ethers/providers/ipc-provider.js\");\nexports.IpcProvider = ipc_provider_1.IpcProvider;\nvar infura_provider_1 = __webpack_require__(/*! ./infura-provider */ \"./node_modules/ethers/providers/infura-provider.js\");\nexports.InfuraProvider = infura_provider_1.InfuraProvider;\nvar json_rpc_provider_1 = __webpack_require__(/*! ./json-rpc-provider */ \"./node_modules/ethers/providers/json-rpc-provider.js\");\nexports.JsonRpcProvider = json_rpc_provider_1.JsonRpcProvider;\nexports.JsonRpcSigner = json_rpc_provider_1.JsonRpcSigner;\nvar web3_provider_1 = __webpack_require__(/*! ./web3-provider */ \"./node_modules/ethers/providers/web3-provider.js\");\nexports.Web3Provider = web3_provider_1.Web3Provider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3Byb3ZpZGVycy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsbUJBQU8sQ0FBQyxpRkFBcUI7QUFDdkQsZ0JBQWdCO0FBQ2hCLHNCQUFzQixtQkFBTyxDQUFDLHlFQUFpQjtBQUMvQyxvQkFBb0I7QUFDcEIsMkJBQTJCLG1CQUFPLENBQUMsbUZBQXNCO0FBQ3pELHlCQUF5QjtBQUN6QiwwQkFBMEIsbUJBQU8sQ0FBQyxpRkFBcUI7QUFDdkQsd0JBQXdCO0FBQ3hCLHFCQUFxQixtQkFBTyxDQUFDLHVFQUFnQjtBQUM3QyxtQkFBbUI7QUFDbkIsd0JBQXdCLG1CQUFPLENBQUMsNkVBQW1CO0FBQ25ELHNCQUFzQjtBQUN0QiwwQkFBMEIsbUJBQU8sQ0FBQyxpRkFBcUI7QUFDdkQsdUJBQXVCO0FBQ3ZCLHFCQUFxQjtBQUNyQixzQkFBc0IsbUJBQU8sQ0FBQyx5RUFBaUI7QUFDL0Msb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2V0aGVycy9wcm92aWRlcnMvaW5kZXguanM/MmU5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYWJzdHJhY3RfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2Fic3RyYWN0LXByb3ZpZGVyXCIpO1xuZXhwb3J0cy5Qcm92aWRlciA9IGFic3RyYWN0X3Byb3ZpZGVyXzEuUHJvdmlkZXI7XG52YXIgYmFzZV9wcm92aWRlcl8xID0gcmVxdWlyZShcIi4vYmFzZS1wcm92aWRlclwiKTtcbmV4cG9ydHMuQmFzZVByb3ZpZGVyID0gYmFzZV9wcm92aWRlcl8xLkJhc2VQcm92aWRlcjtcbnZhciBldGhlcnNjYW5fcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2V0aGVyc2Nhbi1wcm92aWRlclwiKTtcbmV4cG9ydHMuRXRoZXJzY2FuUHJvdmlkZXIgPSBldGhlcnNjYW5fcHJvdmlkZXJfMS5FdGhlcnNjYW5Qcm92aWRlcjtcbnZhciBmYWxsYmFja19wcm92aWRlcl8xID0gcmVxdWlyZShcIi4vZmFsbGJhY2stcHJvdmlkZXJcIik7XG5leHBvcnRzLkZhbGxiYWNrUHJvdmlkZXIgPSBmYWxsYmFja19wcm92aWRlcl8xLkZhbGxiYWNrUHJvdmlkZXI7XG52YXIgaXBjX3Byb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9pcGMtcHJvdmlkZXJcIik7XG5leHBvcnRzLklwY1Byb3ZpZGVyID0gaXBjX3Byb3ZpZGVyXzEuSXBjUHJvdmlkZXI7XG52YXIgaW5mdXJhX3Byb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9pbmZ1cmEtcHJvdmlkZXJcIik7XG5leHBvcnRzLkluZnVyYVByb3ZpZGVyID0gaW5mdXJhX3Byb3ZpZGVyXzEuSW5mdXJhUHJvdmlkZXI7XG52YXIganNvbl9ycGNfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2pzb24tcnBjLXByb3ZpZGVyXCIpO1xuZXhwb3J0cy5Kc29uUnBjUHJvdmlkZXIgPSBqc29uX3JwY19wcm92aWRlcl8xLkpzb25ScGNQcm92aWRlcjtcbmV4cG9ydHMuSnNvblJwY1NpZ25lciA9IGpzb25fcnBjX3Byb3ZpZGVyXzEuSnNvblJwY1NpZ25lcjtcbnZhciB3ZWIzX3Byb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi93ZWIzLXByb3ZpZGVyXCIpO1xuZXhwb3J0cy5XZWIzUHJvdmlkZXIgPSB3ZWIzX3Byb3ZpZGVyXzEuV2ViM1Byb3ZpZGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/providers/index.js\n");

/***/ }),

/***/ "./node_modules/ethers/providers/infura-provider.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethers/providers/infura-provider.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar json_rpc_provider_1 = __webpack_require__(/*! ./json-rpc-provider */ \"./node_modules/ethers/providers/json-rpc-provider.js\");\nvar bytes_1 = __webpack_require__(/*! ../utils/bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar networks_1 = __webpack_require__(/*! ../utils/networks */ \"./node_modules/ethers/utils/networks.js\");\nvar properties_1 = __webpack_require__(/*! ../utils/properties */ \"./node_modules/ethers/utils/properties.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nvar defaultProjectId = \"7d0d81d0919f4f05b9ab6634be01ee73\";\nvar InfuraProvider = /** @class */ (function (_super) {\n    __extends(InfuraProvider, _super);\n    function InfuraProvider(network, projectId) {\n        var _this = this;\n        var standard = networks_1.getNetwork((network == null) ? 'homestead' : network);\n        if (projectId == null) {\n            projectId = defaultProjectId;\n        }\n        var host = null;\n        switch (standard.name) {\n            case 'homestead':\n                host = 'mainnet.infura.io';\n                break;\n            case 'ropsten':\n                host = 'ropsten.infura.io';\n                break;\n            case 'rinkeby':\n                host = 'rinkeby.infura.io';\n                break;\n            case 'goerli':\n                host = 'goerli.infura.io';\n                break;\n            case 'kovan':\n                host = 'kovan.infura.io';\n                break;\n            default:\n                errors.throwError('unsupported network', errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        // New-style Project ID\n        if (bytes_1.isHexString(\"0x\" + projectId, 16)) {\n            _this = _super.call(this, 'https://' + host + '/v3/' + projectId, standard) || this;\n            properties_1.defineReadOnly(_this, 'apiAccessToken', null);\n            properties_1.defineReadOnly(_this, 'projectId', projectId);\n            // Legacy API Access Token\n        }\n        else {\n            errors.warn(\"The legacy INFURA apiAccesToken API is deprecated; please upgrade to a Project ID instead (see INFURA dshboard; https://infura.io)\");\n            _this = _super.call(this, 'https://' + host + '/' + projectId, standard) || this;\n            properties_1.defineReadOnly(_this, 'apiAccessToken', projectId);\n            properties_1.defineReadOnly(_this, 'projectId', null);\n        }\n        errors.checkNew(_this, InfuraProvider);\n        return _this;\n    }\n    InfuraProvider.prototype._startPending = function () {\n        errors.warn('WARNING: INFURA does not support pending filters');\n    };\n    InfuraProvider.prototype.getSigner = function (address) {\n        return errors.throwError('INFURA does not support signing', errors.UNSUPPORTED_OPERATION, { operation: 'getSigner' });\n    };\n    InfuraProvider.prototype.listAccounts = function () {\n        return Promise.resolve([]);\n    };\n    return InfuraProvider;\n}(json_rpc_provider_1.JsonRpcProvider));\nexports.InfuraProvider = InfuraProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3Byb3ZpZGVycy9pbmZ1cmEtcHJvdmlkZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsV0FBVyxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUNuRiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixtQkFBTyxDQUFDLGlGQUFxQjtBQUN2RCxjQUFjLG1CQUFPLENBQUMsNERBQWdCO0FBQ3RDLGlCQUFpQixtQkFBTyxDQUFDLGtFQUFtQjtBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQyxzRUFBcUI7QUFDaEQsMEJBQTBCLG1CQUFPLENBQUMsa0RBQVc7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSw2REFBNkQ7QUFDekk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9HQUFvRyx3QkFBd0I7QUFDNUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxzQkFBc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL3Byb3ZpZGVycy9pbmZ1cmEtcHJvdmlkZXIuanM/ZWY3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSByZXN1bHRba10gPSBtb2Rba107XG4gICAgcmVzdWx0W1wiZGVmYXVsdFwiXSA9IG1vZDtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBqc29uX3JwY19wcm92aWRlcl8xID0gcmVxdWlyZShcIi4vanNvbi1ycGMtcHJvdmlkZXJcIik7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuLi91dGlscy9ieXRlc1wiKTtcbnZhciBuZXR3b3Jrc18xID0gcmVxdWlyZShcIi4uL3V0aWxzL25ldHdvcmtzXCIpO1xudmFyIHByb3BlcnRpZXNfMSA9IHJlcXVpcmUoXCIuLi91dGlscy9wcm9wZXJ0aWVzXCIpO1xudmFyIGVycm9ycyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi4vZXJyb3JzXCIpKTtcbnZhciBkZWZhdWx0UHJvamVjdElkID0gXCI3ZDBkODFkMDkxOWY0ZjA1YjlhYjY2MzRiZTAxZWU3M1wiO1xudmFyIEluZnVyYVByb3ZpZGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhJbmZ1cmFQcm92aWRlciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBJbmZ1cmFQcm92aWRlcihuZXR3b3JrLCBwcm9qZWN0SWQpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHN0YW5kYXJkID0gbmV0d29ya3NfMS5nZXROZXR3b3JrKChuZXR3b3JrID09IG51bGwpID8gJ2hvbWVzdGVhZCcgOiBuZXR3b3JrKTtcbiAgICAgICAgaWYgKHByb2plY3RJZCA9PSBudWxsKSB7XG4gICAgICAgICAgICBwcm9qZWN0SWQgPSBkZWZhdWx0UHJvamVjdElkO1xuICAgICAgICB9XG4gICAgICAgIHZhciBob3N0ID0gbnVsbDtcbiAgICAgICAgc3dpdGNoIChzdGFuZGFyZC5uYW1lKSB7XG4gICAgICAgICAgICBjYXNlICdob21lc3RlYWQnOlxuICAgICAgICAgICAgICAgIGhvc3QgPSAnbWFpbm5ldC5pbmZ1cmEuaW8nO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAncm9wc3Rlbic6XG4gICAgICAgICAgICAgICAgaG9zdCA9ICdyb3BzdGVuLmluZnVyYS5pbyc7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdyaW5rZWJ5JzpcbiAgICAgICAgICAgICAgICBob3N0ID0gJ3JpbmtlYnkuaW5mdXJhLmlvJztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2dvZXJsaSc6XG4gICAgICAgICAgICAgICAgaG9zdCA9ICdnb2VybGkuaW5mdXJhLmlvJztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2tvdmFuJzpcbiAgICAgICAgICAgICAgICBob3N0ID0gJ2tvdmFuLmluZnVyYS5pbyc7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGVycm9ycy50aHJvd0Vycm9yKCd1bnN1cHBvcnRlZCBuZXR3b3JrJywgZXJyb3JzLklOVkFMSURfQVJHVU1FTlQsIHtcbiAgICAgICAgICAgICAgICAgICAgYXJndW1lbnQ6IFwibmV0d29ya1wiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbmV0d29ya1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIC8vIE5ldy1zdHlsZSBQcm9qZWN0IElEXG4gICAgICAgIGlmIChieXRlc18xLmlzSGV4U3RyaW5nKFwiMHhcIiArIHByb2plY3RJZCwgMTYpKSB7XG4gICAgICAgICAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsICdodHRwczovLycgKyBob3N0ICsgJy92My8nICsgcHJvamVjdElkLCBzdGFuZGFyZCkgfHwgdGhpcztcbiAgICAgICAgICAgIHByb3BlcnRpZXNfMS5kZWZpbmVSZWFkT25seShfdGhpcywgJ2FwaUFjY2Vzc1Rva2VuJywgbnVsbCk7XG4gICAgICAgICAgICBwcm9wZXJ0aWVzXzEuZGVmaW5lUmVhZE9ubHkoX3RoaXMsICdwcm9qZWN0SWQnLCBwcm9qZWN0SWQpO1xuICAgICAgICAgICAgLy8gTGVnYWN5IEFQSSBBY2Nlc3MgVG9rZW5cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGVycm9ycy53YXJuKFwiVGhlIGxlZ2FjeSBJTkZVUkEgYXBpQWNjZXNUb2tlbiBBUEkgaXMgZGVwcmVjYXRlZDsgcGxlYXNlIHVwZ3JhZGUgdG8gYSBQcm9qZWN0IElEIGluc3RlYWQgKHNlZSBJTkZVUkEgZHNoYm9hcmQ7IGh0dHBzOi8vaW5mdXJhLmlvKVwiKTtcbiAgICAgICAgICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgJ2h0dHBzOi8vJyArIGhvc3QgKyAnLycgKyBwcm9qZWN0SWQsIHN0YW5kYXJkKSB8fCB0aGlzO1xuICAgICAgICAgICAgcHJvcGVydGllc18xLmRlZmluZVJlYWRPbmx5KF90aGlzLCAnYXBpQWNjZXNzVG9rZW4nLCBwcm9qZWN0SWQpO1xuICAgICAgICAgICAgcHJvcGVydGllc18xLmRlZmluZVJlYWRPbmx5KF90aGlzLCAncHJvamVjdElkJywgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgICAgZXJyb3JzLmNoZWNrTmV3KF90aGlzLCBJbmZ1cmFQcm92aWRlcik7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgSW5mdXJhUHJvdmlkZXIucHJvdG90eXBlLl9zdGFydFBlbmRpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGVycm9ycy53YXJuKCdXQVJOSU5HOiBJTkZVUkEgZG9lcyBub3Qgc3VwcG9ydCBwZW5kaW5nIGZpbHRlcnMnKTtcbiAgICB9O1xuICAgIEluZnVyYVByb3ZpZGVyLnByb3RvdHlwZS5nZXRTaWduZXIgPSBmdW5jdGlvbiAoYWRkcmVzcykge1xuICAgICAgICByZXR1cm4gZXJyb3JzLnRocm93RXJyb3IoJ0lORlVSQSBkb2VzIG5vdCBzdXBwb3J0IHNpZ25pbmcnLCBlcnJvcnMuVU5TVVBQT1JURURfT1BFUkFUSU9OLCB7IG9wZXJhdGlvbjogJ2dldFNpZ25lcicgfSk7XG4gICAgfTtcbiAgICBJbmZ1cmFQcm92aWRlci5wcm90b3R5cGUubGlzdEFjY291bnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFtdKTtcbiAgICB9O1xuICAgIHJldHVybiBJbmZ1cmFQcm92aWRlcjtcbn0oanNvbl9ycGNfcHJvdmlkZXJfMS5Kc29uUnBjUHJvdmlkZXIpKTtcbmV4cG9ydHMuSW5mdXJhUHJvdmlkZXIgPSBJbmZ1cmFQcm92aWRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethers/providers/infura-provider.js\n");

/***/ }),

/***/ "./node_modules/ethers/providers/ipc-provider.js":
/*!*******************************************************!*\
  !*** ./node_modules/ethers/providers/ipc-provider.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar net_1 = __importDefault(__webpack_require__(/*! net */ \"net\"));\nvar json_rpc_provider_1 = __webpack_require__(/*! ./json-rpc-provider */ \"./node_modules/ethers/providers/json-rpc-provider.js\");\nvar properties_1 = __webpack_require__(/*! ../utils/properties */ \"./node_modules/ethers/utils/properties.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nvar IpcProvider = /** @class */ (function (_super) {\n    __extends(IpcProvider, _super);\n    function IpcProvider(path, network) {\n        var _this = this;\n        if (path == null) {\n            errors.throwError('missing path', errors.MISSING_ARGUMENT, {\n                argument: 'path'\n            });\n        }\n        _this = _super.call(this, 'ipc://' + path, network) || this;\n        errors.checkNew(_this, IpcProvider);\n        properties_1.defineReadOnly(_this, 'path', path);\n        return _this;\n    }\n    // @TODO: Create a connection to the IPC path and use filters instead of polling for block\n    IpcProvider.prototype.send = function (method, params) {\n        // This method is very simple right now. We create a new socket\n        // connection each time, which may be slower, but the main\n        // advantage we are aiming for now is security. This simplifies\n        // multiplexing requests (since we do not need to multiplex).\n        var _this = this;\n        var payload = JSON.stringify({\n            method: method,\n            params: params,\n            id: 42,\n            jsonrpc: \"2.0\"\n        });\n        return new Promise(function (resolve, reject) {\n            var response = Buffer.alloc(0);\n            var stream = net_1.default.connect(_this.path);\n            stream.on('data', function (data) {\n                response = Buffer.concat([response, data]);\n            });\n            stream.on(\"end\", function () {\n                try {\n                    var payload_1 = JSON.parse(response.toString('utf8'));\n                    if (payload_1.error) {\n                        var error = new Error(payload_1.error.message);\n                        error.code = payload_1.error.code;\n                        error.data = payload_1.error.data;\n                        reject(error);\n                    }\n                    else {\n                        resolve(payload_1.result);\n                    }\n                    stream.destroy();\n                }\n                catch (error) {\n                    reject(error);\n                    stream.destroy();\n                }\n            });\n            stream.on('error', function (error) {\n                reject(error);\n                stream.destroy();\n            });\n            stream.write(payload);\n            stream.end();\n        });\n    };\n    return IpcProvider;\n}(json_rpc_provider_1.JsonRpcProvider));\nexports.IpcProvider = IpcProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3Byb3ZpZGVycy9pcGMtcHJvdmlkZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsV0FBVyxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUNuRiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLG1CQUFPLENBQUMsZ0JBQUs7QUFDekMsMEJBQTBCLG1CQUFPLENBQUMsaUZBQXFCO0FBQ3ZELG1CQUFtQixtQkFBTyxDQUFDLHNFQUFxQjtBQUNoRCwwQkFBMEIsbUJBQU8sQ0FBQyxrREFBVztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLENBQUM7QUFDRCxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL3Byb3ZpZGVycy9pcGMtcHJvdmlkZXIuanM/ZWRmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIHJlc3VsdFtrXSA9IG1vZFtrXTtcbiAgICByZXN1bHRbXCJkZWZhdWx0XCJdID0gbW9kO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG5ldF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJuZXRcIikpO1xudmFyIGpzb25fcnBjX3Byb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9qc29uLXJwYy1wcm92aWRlclwiKTtcbnZhciBwcm9wZXJ0aWVzXzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvcHJvcGVydGllc1wiKTtcbnZhciBlcnJvcnMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4uL2Vycm9yc1wiKSk7XG52YXIgSXBjUHJvdmlkZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKElwY1Byb3ZpZGVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIElwY1Byb3ZpZGVyKHBhdGgsIG5ldHdvcmspIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKHBhdGggPT0gbnVsbCkge1xuICAgICAgICAgICAgZXJyb3JzLnRocm93RXJyb3IoJ21pc3NpbmcgcGF0aCcsIGVycm9ycy5NSVNTSU5HX0FSR1VNRU5ULCB7XG4gICAgICAgICAgICAgICAgYXJndW1lbnQ6ICdwYXRoJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCAnaXBjOi8vJyArIHBhdGgsIG5ldHdvcmspIHx8IHRoaXM7XG4gICAgICAgIGVycm9ycy5jaGVja05ldyhfdGhpcywgSXBjUHJvdmlkZXIpO1xuICAgICAgICBwcm9wZXJ0aWVzXzEuZGVmaW5lUmVhZE9ubHkoX3RoaXMsICdwYXRoJywgcGF0aCk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgLy8gQFRPRE86IENyZWF0ZSBhIGNvbm5lY3Rpb24gdG8gdGhlIElQQyBwYXRoIGFuZCB1c2UgZmlsdGVycyBpbnN0ZWFkIG9mIHBvbGxpbmcgZm9yIGJsb2NrXG4gICAgSXBjUHJvdmlkZXIucHJvdG90eXBlLnNlbmQgPSBmdW5jdGlvbiAobWV0aG9kLCBwYXJhbXMpIHtcbiAgICAgICAgLy8gVGhpcyBtZXRob2QgaXMgdmVyeSBzaW1wbGUgcmlnaHQgbm93LiBXZSBjcmVhdGUgYSBuZXcgc29ja2V0XG4gICAgICAgIC8vIGNvbm5lY3Rpb24gZWFjaCB0aW1lLCB3aGljaCBtYXkgYmUgc2xvd2VyLCBidXQgdGhlIG1haW5cbiAgICAgICAgLy8gYWR2YW50YWdlIHdlIGFyZSBhaW1pbmcgZm9yIG5vdyBpcyBzZWN1cml0eS4gVGhpcyBzaW1wbGlmaWVzXG4gICAgICAgIC8vIG11bHRpcGxleGluZyByZXF1ZXN0cyAoc2luY2Ugd2UgZG8gbm90IG5lZWQgdG8gbXVsdGlwbGV4KS5cbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHBheWxvYWQgPSBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgICAgICAgIHBhcmFtczogcGFyYW1zLFxuICAgICAgICAgICAgaWQ6IDQyLFxuICAgICAgICAgICAganNvbnJwYzogXCIyLjBcIlxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgIHZhciByZXNwb25zZSA9IEJ1ZmZlci5hbGxvYygwKTtcbiAgICAgICAgICAgIHZhciBzdHJlYW0gPSBuZXRfMS5kZWZhdWx0LmNvbm5lY3QoX3RoaXMucGF0aCk7XG4gICAgICAgICAgICBzdHJlYW0ub24oJ2RhdGEnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gQnVmZmVyLmNvbmNhdChbcmVzcG9uc2UsIGRhdGFdKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc3RyZWFtLm9uKFwiZW5kXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGF5bG9hZF8xID0gSlNPTi5wYXJzZShyZXNwb25zZS50b1N0cmluZygndXRmOCcpKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBheWxvYWRfMS5lcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yID0gbmV3IEVycm9yKHBheWxvYWRfMS5lcnJvci5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLmNvZGUgPSBwYXlsb2FkXzEuZXJyb3IuY29kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLmRhdGEgPSBwYXlsb2FkXzEuZXJyb3IuZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHBheWxvYWRfMS5yZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHN0cmVhbS5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICBzdHJlYW0uZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc3RyZWFtLm9uKCdlcnJvcicsIGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICAgICAgc3RyZWFtLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc3RyZWFtLndyaXRlKHBheWxvYWQpO1xuICAgICAgICAgICAgc3RyZWFtLmVuZCgpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBJcGNQcm92aWRlcjtcbn0oanNvbl9ycGNfcHJvdmlkZXJfMS5Kc29uUnBjUHJvdmlkZXIpKTtcbmV4cG9ydHMuSXBjUHJvdmlkZXIgPSBJcGNQcm92aWRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethers/providers/ipc-provider.js\n");

/***/ }),

/***/ "./node_modules/ethers/providers/json-rpc-provider.js":
/*!************************************************************!*\
  !*** ./node_modules/ethers/providers/json-rpc-provider.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\nvar base_provider_1 = __webpack_require__(/*! ./base-provider */ \"./node_modules/ethers/providers/base-provider.js\");\nvar abstract_signer_1 = __webpack_require__(/*! ../abstract-signer */ \"./node_modules/ethers/abstract-signer.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nvar address_1 = __webpack_require__(/*! ../utils/address */ \"./node_modules/ethers/utils/address.js\");\nvar bytes_1 = __webpack_require__(/*! ../utils/bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar networks_1 = __webpack_require__(/*! ../utils/networks */ \"./node_modules/ethers/utils/networks.js\");\nvar properties_1 = __webpack_require__(/*! ../utils/properties */ \"./node_modules/ethers/utils/properties.js\");\nvar utf8_1 = __webpack_require__(/*! ../utils/utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar web_1 = __webpack_require__(/*! ../utils/web */ \"./node_modules/ethers/utils/web.js\");\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(function () {\n            resolve();\n        }, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        var error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nvar _constructorGuard = {};\n// Some environments (Trust Wallet and company) use a global map\n// to track JSON-RPC ID, so we try to keep IDs unique across all\n// connections. See #489.\nvar _nextId = 42;\nvar JsonRpcSigner = /** @class */ (function (_super) {\n    __extends(JsonRpcSigner, _super);\n    function JsonRpcSigner(constructorGuard, provider, addressOrIndex) {\n        var _this = _super.call(this) || this;\n        errors.checkNew(_this, JsonRpcSigner);\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error('do not call the JsonRpcSigner constructor directly; use provider.getSigner');\n        }\n        properties_1.defineReadOnly(_this, 'provider', provider);\n        // Statically attach to a given address\n        if (addressOrIndex) {\n            if (typeof (addressOrIndex) === 'string') {\n                properties_1.defineReadOnly(_this, '_address', address_1.getAddress(addressOrIndex));\n            }\n            else if (typeof (addressOrIndex) === 'number') {\n                properties_1.defineReadOnly(_this, '_index', addressOrIndex);\n            }\n            else {\n                errors.throwError('invalid address or index', errors.INVALID_ARGUMENT, { argument: 'addressOrIndex', value: addressOrIndex });\n            }\n        }\n        else {\n            properties_1.defineReadOnly(_this, '_index', 0);\n        }\n        return _this;\n    }\n    JsonRpcSigner.prototype.getAddress = function () {\n        var _this = this;\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send('eth_accounts', []).then(function (accounts) {\n            if (accounts.length <= _this._index) {\n                errors.throwError('unknown account #' + _this._index, errors.UNSUPPORTED_OPERATION, { operation: 'getAddress' });\n            }\n            _this._address = address_1.getAddress(accounts[_this._index]);\n            return _this._address;\n        });\n    };\n    JsonRpcSigner.prototype.getBalance = function (blockTag) {\n        return this.provider.getBalance(this.getAddress(), blockTag);\n    };\n    JsonRpcSigner.prototype.getTransactionCount = function (blockTag) {\n        return this.provider.getTransactionCount(this.getAddress(), blockTag);\n    };\n    JsonRpcSigner.prototype.sendUncheckedTransaction = function (transaction) {\n        var _this = this;\n        transaction = properties_1.shallowCopy(transaction);\n        var fromAddress = this.getAddress().then(function (address) {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            var estimate = properties_1.shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        return Promise.all([\n            properties_1.resolveProperties(transaction),\n            fromAddress\n        ]).then(function (results) {\n            var tx = results[0];\n            var hexTx = JsonRpcProvider.hexlifyTransaction(tx);\n            hexTx.from = results[1];\n            return _this.provider.send('eth_sendTransaction', [hexTx]).then(function (hash) {\n                return hash;\n            }, function (error) {\n                if (error.responseText) {\n                    // See: JsonRpcProvider.sendTransaction (@TODO: Expose a ._throwError??)\n                    if (error.responseText.indexOf('insufficient funds') >= 0) {\n                        errors.throwError('insufficient funds', errors.INSUFFICIENT_FUNDS, {\n                            transaction: tx\n                        });\n                    }\n                    if (error.responseText.indexOf('nonce too low') >= 0) {\n                        errors.throwError('nonce has already been used', errors.NONCE_EXPIRED, {\n                            transaction: tx\n                        });\n                    }\n                    if (error.responseText.indexOf('replacement transaction underpriced') >= 0) {\n                        errors.throwError('replacement fee too low', errors.REPLACEMENT_UNDERPRICED, {\n                            transaction: tx\n                        });\n                    }\n                }\n                throw error;\n            });\n        });\n    };\n    JsonRpcSigner.prototype.sendTransaction = function (transaction) {\n        var _this = this;\n        return this.sendUncheckedTransaction(transaction).then(function (hash) {\n            return web_1.poll(function () {\n                return _this.provider.getTransaction(hash).then(function (tx) {\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return _this.provider._wrapTransaction(tx, hash);\n                });\n            }, { fastRetry: 250, onceBlock: _this.provider }).catch(function (error) {\n                error.transactionHash = hash;\n                throw error;\n            });\n        });\n    };\n    JsonRpcSigner.prototype.signMessage = function (message) {\n        var _this = this;\n        var data = ((typeof (message) === 'string') ? utf8_1.toUtf8Bytes(message) : message);\n        return this.getAddress().then(function (address) {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return _this.provider.send('eth_sign', [address.toLowerCase(), bytes_1.hexlify(data)]);\n        });\n    };\n    JsonRpcSigner.prototype.unlock = function (password) {\n        var provider = this.provider;\n        return this.getAddress().then(function (address) {\n            return provider.send('personal_unlockAccount', [address.toLowerCase(), password, null]);\n        });\n    };\n    return JsonRpcSigner;\n}(abstract_signer_1.Signer));\nexports.JsonRpcSigner = JsonRpcSigner;\nvar allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true\n};\nvar JsonRpcProvider = /** @class */ (function (_super) {\n    __extends(JsonRpcProvider, _super);\n    function JsonRpcProvider(url, network) {\n        var _this = this;\n        // One parameter, but it is a network name, so swap it with the URL\n        if (typeof (url) === 'string') {\n            if (network === null && networks_1.getNetwork(url)) {\n                network = url;\n                url = null;\n            }\n        }\n        if (network) {\n            // The network has been specified explicitly, we can use it\n            _this = _super.call(this, network) || this;\n        }\n        else {\n            // The network is unknown, query the JSON-RPC for it\n            var ready = new Promise(function (resolve, reject) {\n                setTimeout(function () {\n                    _this.send('net_version', []).then(function (result) {\n                        return resolve(networks_1.getNetwork(parseInt(result)));\n                    }).catch(function (error) {\n                        reject(error);\n                    });\n                });\n            });\n            _this = _super.call(this, ready) || this;\n        }\n        errors.checkNew(_this, JsonRpcProvider);\n        // Default URL\n        if (!url) {\n            url = 'http://localhost:8545';\n        }\n        if (typeof (url) === 'string') {\n            _this.connection = {\n                url: url\n            };\n        }\n        else {\n            _this.connection = url;\n        }\n        return _this;\n    }\n    JsonRpcProvider.prototype.getSigner = function (addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    };\n    JsonRpcProvider.prototype.listAccounts = function () {\n        return this.send('eth_accounts', []).then(function (accounts) {\n            return accounts.map(function (a) { return address_1.getAddress(a); });\n        });\n    };\n    JsonRpcProvider.prototype.send = function (method, params) {\n        var _this = this;\n        var request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return web_1.fetchJson(this.connection, JSON.stringify(request), getResult).then(function (result) {\n            _this.emit('debug', {\n                action: 'send',\n                request: request,\n                response: result,\n                provider: _this\n            });\n            return result;\n        });\n    };\n    JsonRpcProvider.prototype.perform = function (method, params) {\n        switch (method) {\n            case 'getBlockNumber':\n                return this.send('eth_blockNumber', []);\n            case 'getGasPrice':\n                return this.send('eth_gasPrice', []);\n            case 'getBalance':\n                return this.send('eth_getBalance', [getLowerCase(params.address), params.blockTag]);\n            case 'getTransactionCount':\n                return this.send('eth_getTransactionCount', [getLowerCase(params.address), params.blockTag]);\n            case 'getCode':\n                return this.send('eth_getCode', [getLowerCase(params.address), params.blockTag]);\n            case 'getStorageAt':\n                return this.send('eth_getStorageAt', [getLowerCase(params.address), params.position, params.blockTag]);\n            case 'sendTransaction':\n                return this.send('eth_sendRawTransaction', [params.signedTransaction]).catch(function (error) {\n                    if (error.responseText) {\n                        // \"insufficient funds for gas * price + value\"\n                        if (error.responseText.indexOf('insufficient funds') > 0) {\n                            errors.throwError('insufficient funds', errors.INSUFFICIENT_FUNDS, {});\n                        }\n                        // \"nonce too low\"\n                        if (error.responseText.indexOf('nonce too low') > 0) {\n                            errors.throwError('nonce has already been used', errors.NONCE_EXPIRED, {});\n                        }\n                        // \"replacement transaction underpriced\"\n                        if (error.responseText.indexOf('replacement transaction underpriced') > 0) {\n                            errors.throwError('replacement fee too low', errors.REPLACEMENT_UNDERPRICED, {});\n                        }\n                    }\n                    throw error;\n                });\n            case 'getBlock':\n                if (params.blockTag) {\n                    return this.send('eth_getBlockByNumber', [params.blockTag, !!params.includeTransactions]);\n                }\n                else if (params.blockHash) {\n                    return this.send('eth_getBlockByHash', [params.blockHash, !!params.includeTransactions]);\n                }\n                return Promise.reject(new Error('invalid block tag or block hash'));\n            case 'getTransaction':\n                return this.send('eth_getTransactionByHash', [params.transactionHash]);\n            case 'getTransactionReceipt':\n                return this.send('eth_getTransactionReceipt', [params.transactionHash]);\n            case 'call':\n                return this.send('eth_call', [JsonRpcProvider.hexlifyTransaction(params.transaction, { from: true }), params.blockTag]);\n            case 'estimateGas':\n                return this.send('eth_estimateGas', [JsonRpcProvider.hexlifyTransaction(params.transaction, { from: true })]);\n            case 'getLogs':\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return this.send('eth_getLogs', [params.filter]);\n            default:\n                break;\n        }\n        errors.throwError(method + ' not implemented', errors.NOT_IMPLEMENTED, { operation: method });\n        return null;\n    };\n    JsonRpcProvider.prototype._startPending = function () {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        var self = this;\n        var pendingFilter = this.send('eth_newPendingTransactionFilter', []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send('eth_getFilterChanges', [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    var seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted['t:' + hash.toLowerCase()] = 'pending';\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit('pending', tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send('eth_uninstallFilter', [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch(function (error) { });\n            }\n            poll();\n            return filterId;\n        }).catch(function (error) { });\n    };\n    JsonRpcProvider.prototype._stopPending = function () {\n        this._pendingFilter = null;\n    };\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    JsonRpcProvider.hexlifyTransaction = function (transaction, allowExtra) {\n        // Check only allowed properties are given\n        var allowed = properties_1.shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (var key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        properties_1.checkProperties(transaction, allowed);\n        var result = {};\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) don't like leading zeros.\n        ['gasLimit', 'gasPrice', 'nonce', 'value'].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            var value = bytes_1.hexStripZeros(bytes_1.hexlify(transaction[key]));\n            if (key === 'gasLimit') {\n                key = 'gas';\n            }\n            result[key] = value;\n        });\n        ['from', 'to', 'data'].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = bytes_1.hexlify(transaction[key]);\n        });\n        return result;\n    };\n    return JsonRpcProvider;\n}(base_provider_1.BaseProvider));\nexports.JsonRpcProvider = JsonRpcProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/providers/json-rpc-provider.js\n");

/***/ }),

/***/ "./node_modules/ethers/providers/web3-provider.js":
/*!********************************************************!*\
  !*** ./node_modules/ethers/providers/web3-provider.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar json_rpc_provider_1 = __webpack_require__(/*! ./json-rpc-provider */ \"./node_modules/ethers/providers/json-rpc-provider.js\");\nvar properties_1 = __webpack_require__(/*! ../utils/properties */ \"./node_modules/ethers/utils/properties.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\n/*\n@TODO\nutils.defineProperty(Web3Signer, 'onchange', {\n\n});\n\n*/\nvar _nextId = 42;\nvar Web3Provider = /** @class */ (function (_super) {\n    __extends(Web3Provider, _super);\n    function Web3Provider(web3Provider, network) {\n        var _this = \n        // HTTP has a host; IPC has a path.\n        _super.call(this, web3Provider.host || web3Provider.path || '', network) || this;\n        errors.checkNew(_this, Web3Provider);\n        if (web3Provider) {\n            if (web3Provider.sendAsync) {\n                _this._sendAsync = web3Provider.sendAsync.bind(web3Provider);\n            }\n            else if (web3Provider.send) {\n                _this._sendAsync = web3Provider.send.bind(web3Provider);\n            }\n        }\n        if (!web3Provider || !_this._sendAsync) {\n            errors.throwError('invalid web3Provider', errors.INVALID_ARGUMENT, { arg: 'web3Provider', value: web3Provider });\n        }\n        properties_1.defineReadOnly(_this, '_web3Provider', web3Provider);\n        // @TODO: In v5 remove the above definition; only this one is needed\n        properties_1.defineReadOnly(_this, 'provider', web3Provider);\n        return _this;\n    }\n    Web3Provider.prototype.send = function (method, params) {\n        var _this = this;\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == 'eth_sign' && this._web3Provider.isMetaMask) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = 'personal_sign';\n            params = [params[1], params[0]];\n        }\n        return new Promise(function (resolve, reject) {\n            var request = {\n                method: method,\n                params: params,\n                id: (_nextId++),\n                jsonrpc: \"2.0\"\n            };\n            _this._sendAsync(request, function (error, result) {\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                if (result.error) {\n                    // @TODO: not any\n                    var error_1 = new Error(result.error.message);\n                    error_1.code = result.error.code;\n                    error_1.data = result.error.data;\n                    reject(error_1);\n                    return;\n                }\n                resolve(result.result);\n            });\n        });\n    };\n    return Web3Provider;\n}(json_rpc_provider_1.JsonRpcProvider));\nexports.Web3Provider = Web3Provider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3Byb3ZpZGVycy93ZWIzLXByb3ZpZGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDbkYsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsbUJBQU8sQ0FBQyxpRkFBcUI7QUFDdkQsbUJBQW1CLG1CQUFPLENBQUMsc0VBQXFCO0FBQ2hELDBCQUEwQixtQkFBTyxDQUFDLGtEQUFXO0FBQzdDO0FBQ0E7QUFDQTs7QUFFQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGLDBDQUEwQztBQUMzSDtBQUNBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2V0aGVycy9wcm92aWRlcnMvd2ViMy1wcm92aWRlci5qcz9jNTIxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIHJlc3VsdFtrXSA9IG1vZFtrXTtcbiAgICByZXN1bHRbXCJkZWZhdWx0XCJdID0gbW9kO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGpzb25fcnBjX3Byb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9qc29uLXJwYy1wcm92aWRlclwiKTtcbnZhciBwcm9wZXJ0aWVzXzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvcHJvcGVydGllc1wiKTtcbnZhciBlcnJvcnMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4uL2Vycm9yc1wiKSk7XG4vKlxuQFRPRE9cbnV0aWxzLmRlZmluZVByb3BlcnR5KFdlYjNTaWduZXIsICdvbmNoYW5nZScsIHtcblxufSk7XG5cbiovXG52YXIgX25leHRJZCA9IDQyO1xudmFyIFdlYjNQcm92aWRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoV2ViM1Byb3ZpZGVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFdlYjNQcm92aWRlcih3ZWIzUHJvdmlkZXIsIG5ldHdvcmspIHtcbiAgICAgICAgdmFyIF90aGlzID0gXG4gICAgICAgIC8vIEhUVFAgaGFzIGEgaG9zdDsgSVBDIGhhcyBhIHBhdGguXG4gICAgICAgIF9zdXBlci5jYWxsKHRoaXMsIHdlYjNQcm92aWRlci5ob3N0IHx8IHdlYjNQcm92aWRlci5wYXRoIHx8ICcnLCBuZXR3b3JrKSB8fCB0aGlzO1xuICAgICAgICBlcnJvcnMuY2hlY2tOZXcoX3RoaXMsIFdlYjNQcm92aWRlcik7XG4gICAgICAgIGlmICh3ZWIzUHJvdmlkZXIpIHtcbiAgICAgICAgICAgIGlmICh3ZWIzUHJvdmlkZXIuc2VuZEFzeW5jKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3NlbmRBc3luYyA9IHdlYjNQcm92aWRlci5zZW5kQXN5bmMuYmluZCh3ZWIzUHJvdmlkZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAod2ViM1Byb3ZpZGVyLnNlbmQpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fc2VuZEFzeW5jID0gd2ViM1Byb3ZpZGVyLnNlbmQuYmluZCh3ZWIzUHJvdmlkZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghd2ViM1Byb3ZpZGVyIHx8ICFfdGhpcy5fc2VuZEFzeW5jKSB7XG4gICAgICAgICAgICBlcnJvcnMudGhyb3dFcnJvcignaW52YWxpZCB3ZWIzUHJvdmlkZXInLCBlcnJvcnMuSU5WQUxJRF9BUkdVTUVOVCwgeyBhcmc6ICd3ZWIzUHJvdmlkZXInLCB2YWx1ZTogd2ViM1Byb3ZpZGVyIH0pO1xuICAgICAgICB9XG4gICAgICAgIHByb3BlcnRpZXNfMS5kZWZpbmVSZWFkT25seShfdGhpcywgJ193ZWIzUHJvdmlkZXInLCB3ZWIzUHJvdmlkZXIpO1xuICAgICAgICAvLyBAVE9ETzogSW4gdjUgcmVtb3ZlIHRoZSBhYm92ZSBkZWZpbml0aW9uOyBvbmx5IHRoaXMgb25lIGlzIG5lZWRlZFxuICAgICAgICBwcm9wZXJ0aWVzXzEuZGVmaW5lUmVhZE9ubHkoX3RoaXMsICdwcm92aWRlcicsIHdlYjNQcm92aWRlcik7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgV2ViM1Byb3ZpZGVyLnByb3RvdHlwZS5zZW5kID0gZnVuY3Rpb24gKG1ldGhvZCwgcGFyYW1zKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIC8vIE1ldGFtYXNrIGNvbXBsYWlucyBhYm91dCBldGhfc2lnbiAoYW5kIG9uIHNvbWUgdmVyc2lvbnMgaGFuZ3MpXG4gICAgICAgIGlmIChtZXRob2QgPT0gJ2V0aF9zaWduJyAmJiB0aGlzLl93ZWIzUHJvdmlkZXIuaXNNZXRhTWFzaykge1xuICAgICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL2dvLWV0aGVyZXVtL3dpa2kvTWFuYWdlbWVudC1BUElzI3BlcnNvbmFsX3NpZ25cbiAgICAgICAgICAgIG1ldGhvZCA9ICdwZXJzb25hbF9zaWduJztcbiAgICAgICAgICAgIHBhcmFtcyA9IFtwYXJhbXNbMV0sIHBhcmFtc1swXV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgIHZhciByZXF1ZXN0ID0ge1xuICAgICAgICAgICAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgICAgICAgICAgIHBhcmFtczogcGFyYW1zLFxuICAgICAgICAgICAgICAgIGlkOiAoX25leHRJZCsrKSxcbiAgICAgICAgICAgICAgICBqc29ucnBjOiBcIjIuMFwiXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgX3RoaXMuX3NlbmRBc3luYyhyZXF1ZXN0LCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQFRPRE86IG5vdCBhbnlcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yXzEgPSBuZXcgRXJyb3IocmVzdWx0LmVycm9yLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICAgICBlcnJvcl8xLmNvZGUgPSByZXN1bHQuZXJyb3IuY29kZTtcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JfMS5kYXRhID0gcmVzdWx0LmVycm9yLmRhdGE7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcl8xKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3VsdC5yZXN1bHQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIFdlYjNQcm92aWRlcjtcbn0oanNvbl9ycGNfcHJvdmlkZXJfMS5Kc29uUnBjUHJvdmlkZXIpKTtcbmV4cG9ydHMuV2ViM1Byb3ZpZGVyID0gV2ViM1Byb3ZpZGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/providers/web3-provider.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/abi-coder.js":
/*!************************************************!*\
  !*** ./node_modules/ethers/utils/abi-coder.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nvar constants_1 = __webpack_require__(/*! ../constants */ \"./node_modules/ethers/constants.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nvar address_1 = __webpack_require__(/*! ./address */ \"./node_modules/ethers/utils/address.js\");\nvar bignumber_1 = __webpack_require__(/*! ./bignumber */ \"./node_modules/ethers/utils/bignumber.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar utf8_1 = __webpack_require__(/*! ./utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar properties_1 = __webpack_require__(/*! ./properties */ \"./node_modules/ethers/utils/properties.js\");\n///////////////////////////////\nvar paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nvar paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nvar paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexports.defaultCoerceFunc = function (type, value) {\n    var match = type.match(paramTypeNumber);\n    if (match && parseInt(match[2]) <= 48) {\n        return value.toNumber();\n    }\n    return value;\n};\n///////////////////////////////////\n// Parsing for Solidity Signatures\nvar regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nvar regexIdentifier = new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = 'uint256' + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = 'int256' + type.substring(3);\n    }\n    return type;\n}\nfunction parseParam(param, allowIndexed) {\n    var originalParam = param;\n    function throwError(i) {\n        throw new Error('unexpected character \"' + originalParam[i] + '\" at position ' + i + ' in \"' + originalParam + '\"');\n    }\n    param = param.replace(/\\s/g, ' ');\n    var parent = { type: '', name: '', state: { allowType: true } };\n    var node = parent;\n    for (var i = 0; i < param.length; i++) {\n        var c = param[i];\n        switch (c) {\n            case '(':\n                if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [{ type: '', name: '', parent: node, state: { allowType: true } }];\n                node = node.components[0];\n                break;\n            case ')':\n                delete node.state;\n                if (allowIndexed && node.name === 'indexed') {\n                    node.indexed = true;\n                    node.name = '';\n                }\n                node.type = verifyType(node.type);\n                var child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case ',':\n                delete node.state;\n                if (allowIndexed && node.name === 'indexed') {\n                    node.indexed = true;\n                    node.name = '';\n                }\n                node.type = verifyType(node.type);\n                var sibling = { type: '', name: '', parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case ' ':\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== '') {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== '') {\n                        if (allowIndexed && node.name === 'indexed') {\n                            node.indexed = true;\n                            node.name = '';\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case '[':\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case ']':\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        throw new Error(\"unexpected eof\");\n    }\n    delete parent.state;\n    if (allowIndexed && node.name === 'indexed') {\n        node.indexed = true;\n        node.name = '';\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\n// @TODO: Better return type\nfunction parseSignatureEvent(fragment) {\n    var abi = {\n        anonymous: false,\n        inputs: [],\n        name: '',\n        type: 'event'\n    };\n    var match = fragment.match(regexParen);\n    if (!match) {\n        throw new Error('invalid event: ' + fragment);\n    }\n    abi.name = match[1].trim();\n    splitNesting(match[2]).forEach(function (param) {\n        param = parseParam(param, true);\n        param.indexed = !!param.indexed;\n        abi.inputs.push(param);\n    });\n    match[3].split(' ').forEach(function (modifier) {\n        switch (modifier) {\n            case 'anonymous':\n                abi.anonymous = true;\n                break;\n            case '':\n                break;\n            default:\n                errors.info('unknown modifier: ' + modifier);\n        }\n    });\n    if (abi.name && !abi.name.match(regexIdentifier)) {\n        throw new Error('invalid identifier: \"' + abi.name + '\"');\n    }\n    return abi;\n}\nfunction parseSignatureFunction(fragment) {\n    var abi = {\n        constant: false,\n        gas: null,\n        inputs: [],\n        name: '',\n        outputs: [],\n        payable: false,\n        stateMutability: null,\n        type: 'function'\n    };\n    var comps = fragment.split('@');\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            throw new Error('invalid signature');\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            throw new Error('invalid signature gas');\n        }\n        abi.gas = bignumber_1.bigNumberify(comps[1]);\n        fragment = comps[0];\n    }\n    comps = fragment.split(' returns ');\n    var left = comps[0].match(regexParen);\n    if (!left) {\n        throw new Error('invalid signature');\n    }\n    abi.name = left[1].trim();\n    if (!abi.name.match(regexIdentifier)) {\n        throw new Error('invalid identifier: \"' + left[1] + '\"');\n    }\n    splitNesting(left[2]).forEach(function (param) {\n        abi.inputs.push(parseParam(param));\n    });\n    left[3].split(' ').forEach(function (modifier) {\n        switch (modifier) {\n            case 'constant':\n                abi.constant = true;\n                break;\n            case 'payable':\n                abi.payable = true;\n                abi.stateMutability = 'payable';\n                break;\n            case 'pure':\n                abi.constant = true;\n                abi.stateMutability = 'pure';\n                break;\n            case 'view':\n                abi.constant = true;\n                abi.stateMutability = 'view';\n                break;\n            case 'external':\n            case 'public':\n            case '':\n                break;\n            default:\n                errors.info('unknown modifier: ' + modifier);\n        }\n    });\n    // We have outputs\n    if (comps.length > 1) {\n        var right = comps[1].match(regexParen);\n        if (right[1].trim() != '' || right[3].trim() != '') {\n            throw new Error('unexpected tokens');\n        }\n        splitNesting(right[2]).forEach(function (param) {\n            abi.outputs.push(parseParam(param));\n        });\n    }\n    if (abi.name === 'constructor') {\n        abi.type = \"constructor\";\n        if (abi.outputs.length) {\n            throw new Error('constructor may not have outputs');\n        }\n        delete abi.name;\n        delete abi.outputs;\n    }\n    return abi;\n}\nfunction parseParamType(type) {\n    return parseParam(type, true);\n}\nexports.parseParamType = parseParamType;\n// @TODO: Allow a second boolean to expose names\nfunction formatParamType(paramType) {\n    return getParamCoder(exports.defaultCoerceFunc, paramType).type;\n}\nexports.formatParamType = formatParamType;\n// @TODO: Allow a second boolean to expose names and modifiers\nfunction formatSignature(fragment) {\n    return fragment.name + '(' + fragment.inputs.map(function (i) { return formatParamType(i); }).join(',') + ')';\n}\nexports.formatSignature = formatSignature;\nfunction parseSignature(fragment) {\n    if (typeof (fragment) === 'string') {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        fragment = fragment.replace(/\\s/g, ' ');\n        fragment = fragment.replace(/\\(/g, ' (').replace(/\\)/g, ') ').replace(/\\s+/g, ' ');\n        fragment = fragment.trim();\n        if (fragment.substring(0, 6) === 'event ') {\n            return parseSignatureEvent(fragment.substring(6).trim());\n        }\n        else {\n            if (fragment.substring(0, 9) === 'function ') {\n                fragment = fragment.substring(9);\n            }\n            return parseSignatureFunction(fragment.trim());\n        }\n    }\n    throw new Error('unknown signature');\n}\nexports.parseSignature = parseSignature;\nvar Coder = /** @class */ (function () {\n    function Coder(coerceFunc, name, type, localName, dynamic) {\n        this.coerceFunc = coerceFunc;\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    return Coder;\n}());\n// Clones the functionality of an existing Coder, but without a localName\nvar CoderAnonymous = /** @class */ (function (_super) {\n    __extends(CoderAnonymous, _super);\n    function CoderAnonymous(coder) {\n        var _this = _super.call(this, coder.coerceFunc, coder.name, coder.type, undefined, coder.dynamic) || this;\n        properties_1.defineReadOnly(_this, 'coder', coder);\n        return _this;\n    }\n    CoderAnonymous.prototype.encode = function (value) { return this.coder.encode(value); };\n    CoderAnonymous.prototype.decode = function (data, offset) { return this.coder.decode(data, offset); };\n    return CoderAnonymous;\n}(Coder));\nvar CoderNull = /** @class */ (function (_super) {\n    __extends(CoderNull, _super);\n    function CoderNull(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'null', '', localName, false) || this;\n    }\n    CoderNull.prototype.encode = function (value) {\n        return bytes_1.arrayify([]);\n    };\n    CoderNull.prototype.decode = function (data, offset) {\n        if (offset > data.length) {\n            throw new Error('invalid null');\n        }\n        return {\n            consumed: 0,\n            value: this.coerceFunc('null', undefined)\n        };\n    };\n    return CoderNull;\n}(Coder));\nvar CoderNumber = /** @class */ (function (_super) {\n    __extends(CoderNumber, _super);\n    function CoderNumber(coerceFunc, size, signed, localName) {\n        var _this = this;\n        var name = ((signed ? 'int' : 'uint') + (size * 8));\n        _this = _super.call(this, coerceFunc, name, name, localName, false) || this;\n        _this.size = size;\n        _this.signed = signed;\n        return _this;\n    }\n    CoderNumber.prototype.encode = function (value) {\n        try {\n            var v = bignumber_1.bigNumberify(value);\n            if (this.signed) {\n                var bounds = constants_1.MaxUint256.maskn(this.size * 8 - 1);\n                if (v.gt(bounds)) {\n                    throw new Error('out-of-bounds');\n                }\n                bounds = bounds.add(constants_1.One).mul(constants_1.NegativeOne);\n                if (v.lt(bounds)) {\n                    throw new Error('out-of-bounds');\n                }\n            }\n            else if (v.lt(constants_1.Zero) || v.gt(constants_1.MaxUint256.maskn(this.size * 8))) {\n                throw new Error('out-of-bounds');\n            }\n            v = v.toTwos(this.size * 8).maskn(this.size * 8);\n            if (this.signed) {\n                v = v.fromTwos(this.size * 8).toTwos(256);\n            }\n            return bytes_1.padZeros(bytes_1.arrayify(v), 32);\n        }\n        catch (error) {\n            errors.throwError('invalid number value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: value\n            });\n        }\n        return null;\n    };\n    CoderNumber.prototype.decode = function (data, offset) {\n        if (data.length < offset + 32) {\n            errors.throwError('insufficient data for ' + this.name + ' type', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: bytes_1.hexlify(data.slice(offset, offset + 32))\n            });\n        }\n        var junkLength = 32 - this.size;\n        var value = bignumber_1.bigNumberify(data.slice(offset + junkLength, offset + 32));\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        else {\n            value = value.maskn(this.size * 8);\n        }\n        return {\n            consumed: 32,\n            value: this.coerceFunc(this.name, value),\n        };\n    };\n    return CoderNumber;\n}(Coder));\nvar uint256Coder = new CoderNumber(function (type, value) { return value; }, 32, false, 'none');\nvar CoderBoolean = /** @class */ (function (_super) {\n    __extends(CoderBoolean, _super);\n    function CoderBoolean(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'bool', 'bool', localName, false) || this;\n    }\n    CoderBoolean.prototype.encode = function (value) {\n        return uint256Coder.encode(!!value ? 1 : 0);\n    };\n    CoderBoolean.prototype.decode = function (data, offset) {\n        try {\n            var result = uint256Coder.decode(data, offset);\n        }\n        catch (error) {\n            if (error.reason === 'insufficient data for uint256 type') {\n                errors.throwError('insufficient data for boolean type', errors.INVALID_ARGUMENT, {\n                    arg: this.localName,\n                    coderType: 'boolean',\n                    value: error.value\n                });\n            }\n            throw error;\n        }\n        return {\n            consumed: result.consumed,\n            value: this.coerceFunc('bool', !result.value.isZero())\n        };\n    };\n    return CoderBoolean;\n}(Coder));\nvar CoderFixedBytes = /** @class */ (function (_super) {\n    __extends(CoderFixedBytes, _super);\n    function CoderFixedBytes(coerceFunc, length, localName) {\n        var _this = this;\n        var name = ('bytes' + length);\n        _this = _super.call(this, coerceFunc, name, name, localName, false) || this;\n        _this.length = length;\n        return _this;\n    }\n    CoderFixedBytes.prototype.encode = function (value) {\n        var result = new Uint8Array(32);\n        try {\n            var data = bytes_1.arrayify(value);\n            if (data.length !== this.length) {\n                throw new Error('incorrect data length');\n            }\n            result.set(data);\n        }\n        catch (error) {\n            errors.throwError('invalid ' + this.name + ' value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: (error.value || value)\n            });\n        }\n        return result;\n    };\n    CoderFixedBytes.prototype.decode = function (data, offset) {\n        if (data.length < offset + 32) {\n            errors.throwError('insufficient data for ' + this.name + ' type', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: bytes_1.hexlify(data.slice(offset, offset + 32))\n            });\n        }\n        return {\n            consumed: 32,\n            value: this.coerceFunc(this.name, bytes_1.hexlify(data.slice(offset, offset + this.length)))\n        };\n    };\n    return CoderFixedBytes;\n}(Coder));\nvar CoderAddress = /** @class */ (function (_super) {\n    __extends(CoderAddress, _super);\n    function CoderAddress(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'address', 'address', localName, false) || this;\n    }\n    CoderAddress.prototype.encode = function (value) {\n        var result = new Uint8Array(32);\n        try {\n            result.set(bytes_1.arrayify(address_1.getAddress(value)), 12);\n        }\n        catch (error) {\n            errors.throwError('invalid address', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'address',\n                value: value\n            });\n        }\n        return result;\n    };\n    CoderAddress.prototype.decode = function (data, offset) {\n        if (data.length < offset + 32) {\n            errors.throwError('insufficient data for address type', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'address',\n                value: bytes_1.hexlify(data.slice(offset, offset + 32))\n            });\n        }\n        return {\n            consumed: 32,\n            value: this.coerceFunc('address', address_1.getAddress(bytes_1.hexlify(data.slice(offset + 12, offset + 32))))\n        };\n    };\n    return CoderAddress;\n}(Coder));\nfunction _encodeDynamicBytes(value) {\n    var dataLength = 32 * Math.ceil(value.length / 32);\n    var padding = new Uint8Array(dataLength - value.length);\n    return bytes_1.concat([\n        uint256Coder.encode(value.length),\n        value,\n        padding\n    ]);\n}\nfunction _decodeDynamicBytes(data, offset, localName) {\n    if (data.length < offset + 32) {\n        errors.throwError('insufficient data for dynamicBytes length', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: bytes_1.hexlify(data.slice(offset, offset + 32))\n        });\n    }\n    var length = uint256Coder.decode(data, offset).value;\n    try {\n        length = length.toNumber();\n    }\n    catch (error) {\n        errors.throwError('dynamic bytes count too large', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: length.toString()\n        });\n    }\n    if (data.length < offset + 32 + length) {\n        errors.throwError('insufficient data for dynamicBytes type', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: bytes_1.hexlify(data.slice(offset, offset + 32 + length))\n        });\n    }\n    return {\n        consumed: 32 + 32 * Math.ceil(length / 32),\n        value: data.slice(offset + 32, offset + 32 + length),\n    };\n}\nvar CoderDynamicBytes = /** @class */ (function (_super) {\n    __extends(CoderDynamicBytes, _super);\n    function CoderDynamicBytes(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'bytes', 'bytes', localName, true) || this;\n    }\n    CoderDynamicBytes.prototype.encode = function (value) {\n        try {\n            return _encodeDynamicBytes(bytes_1.arrayify(value));\n        }\n        catch (error) {\n            errors.throwError('invalid bytes value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'bytes',\n                value: error.value\n            });\n        }\n        return null;\n    };\n    CoderDynamicBytes.prototype.decode = function (data, offset) {\n        var result = _decodeDynamicBytes(data, offset, this.localName);\n        result.value = this.coerceFunc('bytes', bytes_1.hexlify(result.value));\n        return result;\n    };\n    return CoderDynamicBytes;\n}(Coder));\nvar CoderString = /** @class */ (function (_super) {\n    __extends(CoderString, _super);\n    function CoderString(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'string', 'string', localName, true) || this;\n    }\n    CoderString.prototype.encode = function (value) {\n        if (typeof (value) !== 'string') {\n            errors.throwError('invalid string value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'string',\n                value: value\n            });\n        }\n        return _encodeDynamicBytes(utf8_1.toUtf8Bytes(value));\n    };\n    CoderString.prototype.decode = function (data, offset) {\n        var result = _decodeDynamicBytes(data, offset, this.localName);\n        result.value = this.coerceFunc('string', utf8_1.toUtf8String(result.value));\n        return result;\n    };\n    return CoderString;\n}(Coder));\nfunction alignSize(size) {\n    return 32 * Math.ceil(size / 32);\n}\nfunction pack(coders, values) {\n    if (Array.isArray(values)) {\n        // do nothing\n    }\n    else if (values && typeof (values) === 'object') {\n        var arrayValues = [];\n        coders.forEach(function (coder) {\n            arrayValues.push(values[coder.localName]);\n        });\n        values = arrayValues;\n    }\n    else {\n        errors.throwError('invalid tuple value', errors.INVALID_ARGUMENT, {\n            coderType: 'tuple',\n            value: values\n        });\n    }\n    if (coders.length !== values.length) {\n        errors.throwError('types/value length mismatch', errors.INVALID_ARGUMENT, {\n            coderType: 'tuple',\n            value: values\n        });\n    }\n    var parts = [];\n    coders.forEach(function (coder, index) {\n        parts.push({ dynamic: coder.dynamic, value: coder.encode(values[index]) });\n    });\n    var staticSize = 0, dynamicSize = 0;\n    parts.forEach(function (part) {\n        if (part.dynamic) {\n            staticSize += 32;\n            dynamicSize += alignSize(part.value.length);\n        }\n        else {\n            staticSize += alignSize(part.value.length);\n        }\n    });\n    var offset = 0, dynamicOffset = staticSize;\n    var data = new Uint8Array(staticSize + dynamicSize);\n    parts.forEach(function (part) {\n        if (part.dynamic) {\n            //uint256Coder.encode(dynamicOffset).copy(data, offset);\n            data.set(uint256Coder.encode(dynamicOffset), offset);\n            offset += 32;\n            //part.value.copy(data, dynamicOffset);  @TODO\n            data.set(part.value, dynamicOffset);\n            dynamicOffset += alignSize(part.value.length);\n        }\n        else {\n            //part.value.copy(data, offset);  @TODO\n            data.set(part.value, offset);\n            offset += alignSize(part.value.length);\n        }\n    });\n    return data;\n}\nfunction unpack(coders, data, offset) {\n    var baseOffset = offset;\n    var consumed = 0;\n    var value = [];\n    coders.forEach(function (coder) {\n        if (coder.dynamic) {\n            var dynamicOffset = uint256Coder.decode(data, offset);\n            var result = coder.decode(data, baseOffset + dynamicOffset.value.toNumber());\n            // The dynamic part is leap-frogged somewhere else; doesn't count towards size\n            result.consumed = dynamicOffset.consumed;\n        }\n        else {\n            var result = coder.decode(data, offset);\n        }\n        if (result.value != undefined) {\n            value.push(result.value);\n        }\n        offset += result.consumed;\n        consumed += result.consumed;\n    });\n    coders.forEach(function (coder, index) {\n        var name = coder.localName;\n        if (!name) {\n            return;\n        }\n        if (name === 'length') {\n            name = '_length';\n        }\n        if (value[name] != null) {\n            return;\n        }\n        value[name] = value[index];\n    });\n    return {\n        value: value,\n        consumed: consumed\n    };\n}\nvar CoderArray = /** @class */ (function (_super) {\n    __extends(CoderArray, _super);\n    function CoderArray(coerceFunc, coder, length, localName) {\n        var _this = this;\n        var type = (coder.type + '[' + (length >= 0 ? length : '') + ']');\n        var dynamic = (length === -1 || coder.dynamic);\n        _this = _super.call(this, coerceFunc, 'array', type, localName, dynamic) || this;\n        _this.coder = coder;\n        _this.length = length;\n        return _this;\n    }\n    CoderArray.prototype.encode = function (value) {\n        if (!Array.isArray(value)) {\n            errors.throwError('expected array value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'array',\n                value: value\n            });\n        }\n        var count = this.length;\n        var result = new Uint8Array(0);\n        if (count === -1) {\n            count = value.length;\n            result = uint256Coder.encode(count);\n        }\n        errors.checkArgumentCount(count, value.length, ' in coder array' + (this.localName ? (\" \" + this.localName) : \"\"));\n        var coders = [];\n        for (var i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return bytes_1.concat([result, pack(coders, value)]);\n    };\n    CoderArray.prototype.decode = function (data, offset) {\n        // @TODO:\n        //if (data.length < offset + length * 32) { throw new Error('invalid array'); }\n        var consumed = 0;\n        var count = this.length;\n        if (count === -1) {\n            try {\n                var decodedLength = uint256Coder.decode(data, offset);\n            }\n            catch (error) {\n                errors.throwError('insufficient data for dynamic array length', errors.INVALID_ARGUMENT, {\n                    arg: this.localName,\n                    coderType: 'array',\n                    value: error.value\n                });\n            }\n            try {\n                count = decodedLength.value.toNumber();\n            }\n            catch (error) {\n                errors.throwError('array count too large', errors.INVALID_ARGUMENT, {\n                    arg: this.localName,\n                    coderType: 'array',\n                    value: decodedLength.value.toString()\n                });\n            }\n            consumed += decodedLength.consumed;\n            offset += decodedLength.consumed;\n        }\n        var coders = [];\n        for (var i = 0; i < count; i++) {\n            coders.push(new CoderAnonymous(this.coder));\n        }\n        var result = unpack(coders, data, offset);\n        result.consumed += consumed;\n        result.value = this.coerceFunc(this.type, result.value);\n        return result;\n    };\n    return CoderArray;\n}(Coder));\nvar CoderTuple = /** @class */ (function (_super) {\n    __extends(CoderTuple, _super);\n    function CoderTuple(coerceFunc, coders, localName) {\n        var _this = this;\n        var dynamic = false;\n        var types = [];\n        coders.forEach(function (coder) {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        var type = ('tuple(' + types.join(',') + ')');\n        _this = _super.call(this, coerceFunc, 'tuple', type, localName, dynamic) || this;\n        _this.coders = coders;\n        return _this;\n    }\n    CoderTuple.prototype.encode = function (value) {\n        return pack(this.coders, value);\n    };\n    CoderTuple.prototype.decode = function (data, offset) {\n        var result = unpack(this.coders, data, offset);\n        result.value = this.coerceFunc(this.type, result.value);\n        return result;\n    };\n    return CoderTuple;\n}(Coder));\n/*\nfunction getTypes(coders) {\n    var type = coderTuple(coders).type;\n    return type.substring(6, type.length - 1);\n}\n*/\nfunction splitNesting(value) {\n    value = value.trim();\n    var result = [];\n    var accum = '';\n    var depth = 0;\n    for (var offset = 0; offset < value.length; offset++) {\n        var c = value[offset];\n        if (c === ',' && depth === 0) {\n            result.push(accum);\n            accum = '';\n        }\n        else {\n            accum += c;\n            if (c === '(') {\n                depth++;\n            }\n            else if (c === ')') {\n                depth--;\n                if (depth === -1) {\n                    throw new Error('unbalanced parenthsis');\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n// @TODO: Is there a way to return \"class\"?\nvar paramTypeSimple = {\n    address: CoderAddress,\n    bool: CoderBoolean,\n    string: CoderString,\n    bytes: CoderDynamicBytes,\n};\nfunction getTupleParamCoder(coerceFunc, components, localName) {\n    if (!components) {\n        components = [];\n    }\n    var coders = [];\n    components.forEach(function (component) {\n        coders.push(getParamCoder(coerceFunc, component));\n    });\n    return new CoderTuple(coerceFunc, coders, localName);\n}\nfunction getParamCoder(coerceFunc, param) {\n    var coder = paramTypeSimple[param.type];\n    if (coder) {\n        return new coder(coerceFunc, param.name);\n    }\n    var match = param.type.match(paramTypeNumber);\n    if (match) {\n        var size = parseInt(match[2] || \"256\");\n        if (size === 0 || size > 256 || (size % 8) !== 0) {\n            errors.throwError('invalid ' + match[1] + ' bit length', errors.INVALID_ARGUMENT, {\n                arg: 'param',\n                value: param\n            });\n        }\n        return new CoderNumber(coerceFunc, size / 8, (match[1] === 'int'), param.name);\n    }\n    var match = param.type.match(paramTypeBytes);\n    if (match) {\n        var size = parseInt(match[1]);\n        if (size === 0 || size > 32) {\n            errors.throwError('invalid bytes length', errors.INVALID_ARGUMENT, {\n                arg: 'param',\n                value: param\n            });\n        }\n        return new CoderFixedBytes(coerceFunc, size, param.name);\n    }\n    var match = param.type.match(paramTypeArray);\n    if (match) {\n        var size = parseInt(match[2] || \"-1\");\n        param = properties_1.shallowCopy(param);\n        param.type = match[1];\n        param = properties_1.deepCopy(param);\n        return new CoderArray(coerceFunc, getParamCoder(coerceFunc, param), size, param.name);\n    }\n    if (param.type.substring(0, 5) === 'tuple') {\n        return getTupleParamCoder(coerceFunc, param.components, param.name);\n    }\n    if (param.type === '') {\n        return new CoderNull(coerceFunc, param.name);\n    }\n    errors.throwError('invalid type', errors.INVALID_ARGUMENT, {\n        arg: 'type',\n        value: param.type\n    });\n    return null;\n}\nvar AbiCoder = /** @class */ (function () {\n    function AbiCoder(coerceFunc) {\n        errors.checkNew(this, AbiCoder);\n        if (!coerceFunc) {\n            coerceFunc = exports.defaultCoerceFunc;\n        }\n        properties_1.defineReadOnly(this, 'coerceFunc', coerceFunc);\n    }\n    AbiCoder.prototype.encode = function (types, values) {\n        if (types.length !== values.length) {\n            errors.throwError('types/values length mismatch', errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        var coders = [];\n        types.forEach(function (type) {\n            // Convert types to type objects\n            //   - \"uint foo\" => { type: \"uint\", name: \"foo\" }\n            //   - \"tuple(uint, uint)\" => { type: \"tuple\", components: [ { type: \"uint\" }, { type: \"uint\" }, ] }\n            var typeObject = null;\n            if (typeof (type) === 'string') {\n                typeObject = parseParam(type);\n            }\n            else {\n                typeObject = type;\n            }\n            coders.push(getParamCoder(this.coerceFunc, typeObject));\n        }, this);\n        return bytes_1.hexlify(new CoderTuple(this.coerceFunc, coders, '_').encode(values));\n    };\n    AbiCoder.prototype.decode = function (types, data) {\n        var coders = [];\n        types.forEach(function (type) {\n            // See encode for details\n            var typeObject = null;\n            if (typeof (type) === 'string') {\n                typeObject = parseParam(type);\n            }\n            else {\n                typeObject = properties_1.deepCopy(type);\n            }\n            coders.push(getParamCoder(this.coerceFunc, typeObject));\n        }, this);\n        return new CoderTuple(this.coerceFunc, coders, '_').decode(bytes_1.arrayify(data), 0).value;\n    };\n    return AbiCoder;\n}());\nexports.AbiCoder = AbiCoder;\nexports.defaultAbiCoder = new AbiCoder();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/abi-coder.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/address.js":
/*!**********************************************!*\
  !*** ./node_modules/ethers/utils/address.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// We use this for base 36 maths\nvar bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/ethers/node_modules/bn.js/lib/bn.js\"));\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar keccak256_1 = __webpack_require__(/*! ./keccak256 */ \"./node_modules/ethers/utils/keccak256.js\");\nvar rlp_1 = __webpack_require__(/*! ./rlp */ \"./node_modules/ethers/utils/rlp.js\");\nvar errors = __webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\");\n///////////////////////////////\nfunction getChecksumAddress(address) {\n    if (typeof (address) !== 'string' || !address.match(/^0x[0-9A-Fa-f]{40}$/)) {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    address = address.toLowerCase();\n    var chars = address.substring(2).split('');\n    var hashed = new Uint8Array(40);\n    for (var i_1 = 0; i_1 < 40; i_1++) {\n        hashed[i_1] = chars[i_1].charCodeAt(0);\n    }\n    hashed = bytes_1.arrayify(keccak256_1.keccak256(hashed));\n    for (var i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return '0x' + chars.join('');\n}\n// Shims for environments that are missing some required constants and functions\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nvar ibanLookup = {};\nfor (var i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (var i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nvar safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + '00';\n    var expanded = '';\n    address.split('').forEach(function (c) {\n        expanded += ibanLookup[c];\n    });\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        var block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    var checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = '0' + checksum;\n    }\n    return checksum;\n}\n;\nfunction getAddress(address) {\n    var result = null;\n    if (typeof (address) !== 'string') {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== '0x') {\n            address = '0x' + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            errors.throwError('bad address checksum', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            errors.throwError('bad icap checksum', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n        }\n        result = (new bn_js_1.default.BN(address.substring(4), 36)).toString(16);\n        while (result.length < 40) {\n            result = '0' + result;\n        }\n        result = getChecksumAddress('0x' + result);\n    }\n    else {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    return result;\n}\nexports.getAddress = getAddress;\nfunction getIcapAddress(address) {\n    var base36 = (new bn_js_1.default.BN(getAddress(address).substring(2), 16)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = '0' + base36;\n    }\n    return 'XE' + ibanChecksum('XE00' + base36) + base36;\n}\nexports.getIcapAddress = getIcapAddress;\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nfunction getContractAddress(transaction) {\n    if (!transaction.from) {\n        throw new Error('missing from address');\n    }\n    var nonce = transaction.nonce;\n    return getAddress('0x' + keccak256_1.keccak256(rlp_1.encode([\n        getAddress(transaction.from),\n        bytes_1.stripZeros(bytes_1.hexlify(nonce))\n    ])).substring(26));\n}\nexports.getContractAddress = getContractAddress;\n// See: https://eips.ethereum.org/EIPS/eip-1014\nfunction getCreate2Address(options) {\n    var initCodeHash = options.initCodeHash;\n    if (options.initCode) {\n        if (initCodeHash) {\n            if (keccak256_1.keccak256(options.initCode) !== initCodeHash) {\n                errors.throwError(\"initCode/initCodeHash mismatch\", errors.INVALID_ARGUMENT, {\n                    arg: \"options\", value: options\n                });\n            }\n        }\n        else {\n            initCodeHash = keccak256_1.keccak256(options.initCode);\n        }\n    }\n    if (!initCodeHash) {\n        errors.throwError(\"missing initCode or initCodeHash\", errors.INVALID_ARGUMENT, {\n            arg: \"options\", value: options\n        });\n    }\n    var from = getAddress(options.from);\n    var salt = bytes_1.arrayify(options.salt);\n    if (salt.length !== 32) {\n        errors.throwError(\"invalid salt\", errors.INVALID_ARGUMENT, {\n            arg: \"options\", value: options\n        });\n    }\n    return getAddress(\"0x\" + keccak256_1.keccak256(bytes_1.concat([\n        \"0xff\",\n        from,\n        salt,\n        initCodeHash\n    ])).substring(26));\n}\nexports.getCreate2Address = getCreate2Address;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/address.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/base64.js":
/*!*********************************************!*\
  !*** ./node_modules/ethers/utils/base64.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\n///////////////////////////////\n/*\ndeclare class Buffer implements ArrayLike<number> {\n    constructor(data: any, encoding?: string);\n    toString(encoding?: string): any;\n    [key: number]: number;\n    length: number;\n}\n*/\nfunction decode(textData) {\n    return bytes_1.arrayify(new Uint8Array(Buffer.from(textData, 'base64')));\n}\nexports.decode = decode;\n;\nfunction encode(data) {\n    return Buffer.from(bytes_1.arrayify(data)).toString('base64');\n}\nexports.encode = encode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL2Jhc2U2NC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLG1CQUFPLENBQUMscURBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy9ldGhlcnMvdXRpbHMvYmFzZTY0LmpzPzkzNjUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8qXG5kZWNsYXJlIGNsYXNzIEJ1ZmZlciBpbXBsZW1lbnRzIEFycmF5TGlrZTxudW1iZXI+IHtcbiAgICBjb25zdHJ1Y3RvcihkYXRhOiBhbnksIGVuY29kaW5nPzogc3RyaW5nKTtcbiAgICB0b1N0cmluZyhlbmNvZGluZz86IHN0cmluZyk6IGFueTtcbiAgICBba2V5OiBudW1iZXJdOiBudW1iZXI7XG4gICAgbGVuZ3RoOiBudW1iZXI7XG59XG4qL1xuZnVuY3Rpb24gZGVjb2RlKHRleHREYXRhKSB7XG4gICAgcmV0dXJuIGJ5dGVzXzEuYXJyYXlpZnkobmV3IFVpbnQ4QXJyYXkoQnVmZmVyLmZyb20odGV4dERhdGEsICdiYXNlNjQnKSkpO1xufVxuZXhwb3J0cy5kZWNvZGUgPSBkZWNvZGU7XG47XG5mdW5jdGlvbiBlbmNvZGUoZGF0YSkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShieXRlc18xLmFycmF5aWZ5KGRhdGEpKS50b1N0cmluZygnYmFzZTY0Jyk7XG59XG5leHBvcnRzLmVuY29kZSA9IGVuY29kZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/base64.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/basex.js":
/*!********************************************!*\
  !*** ./node_modules/ethers/utils/basex.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n/**\n * var basex = require('base-x');\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar properties_1 = __webpack_require__(/*! ./properties */ \"./node_modules/ethers/utils/properties.js\");\nvar BaseX = /** @class */ (function () {\n    function BaseX(alphabet) {\n        properties_1.defineReadOnly(this, \"alphabet\", alphabet);\n        properties_1.defineReadOnly(this, \"base\", alphabet.length);\n        properties_1.defineReadOnly(this, \"_alphabetMap\", {});\n        properties_1.defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (var i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    BaseX.prototype.encode = function (value) {\n        var source = bytes_1.arrayify(value);\n        if (source.length === 0) {\n            return '';\n        }\n        var digits = [0];\n        for (var i = 0; i < source.length; ++i) {\n            var carry = source[i];\n            for (var j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        var string = '';\n        // deal with leading zeros\n        for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (var q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    };\n    BaseX.prototype.decode = function (value) {\n        if (typeof (value) !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        var bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (var i = 0; i < value.length; i++) {\n            var byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error('Non-base' + this.base + ' character');\n            }\n            var carry = byte;\n            for (var j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (var k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return bytes_1.arrayify(new Uint8Array(bytes.reverse()));\n    };\n    return BaseX;\n}());\nexports.BaseX = BaseX;\nvar Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nexports.Base32 = Base32;\nvar Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nexports.Base58 = Base58;\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL2Jhc2V4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYyxtQkFBTyxDQUFDLHFEQUFTO0FBQy9CLG1CQUFtQixtQkFBTyxDQUFDLCtEQUFjO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTREO0FBQzVEO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtQkFBbUI7QUFDM0M7QUFDQSw0QkFBNEIsbUJBQW1CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMENBQTBDO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxRQUFRO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtCQUFrQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGtCQUFrQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtREFBbUQ7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxhQUFhO0FBQ2I7QUFDQSxjQUFjO0FBQ2Q7QUFDQSxjQUFjO0FBQ2Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy9ldGhlcnMvdXRpbHMvYmFzZXguanM/ZTYwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogdmFyIGJhc2V4ID0gcmVxdWlyZSgnYmFzZS14Jyk7XG4gKlxuICogVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBoZWF2aWx5IGJhc2VkIG9uIGJhc2UteC4gVGhlIG1haW4gcmVhc29uIHRvXG4gKiBkZXZpYXRlIHdhcyB0byBwcmV2ZW50IHRoZSBkZXBlbmRlbmN5IG9mIEJ1ZmZlci5cbiAqXG4gKiBDb250cmlidXRvcnM6XG4gKlxuICogYmFzZS14IGVuY29kaW5nXG4gKiBGb3JrZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vY3J5cHRvY29pbmpzL2JzNThcbiAqIE9yaWdpbmFsbHkgd3JpdHRlbiBieSBNaWtlIEhlYXJuIGZvciBCaXRjb2luSlxuICogQ29weXJpZ2h0IChjKSAyMDExIEdvb2dsZSBJbmNcbiAqIFBvcnRlZCB0byBKYXZhU2NyaXB0IGJ5IFN0ZWZhbiBUaG9tYXNcbiAqIE1lcmdlZCBCdWZmZXIgcmVmYWN0b3JpbmdzIGZyb20gYmFzZTU4LW5hdGl2ZSBieSBTdGVwaGVuIFBhaXJcbiAqIENvcHlyaWdodCAoYykgMjAxMyBCaXRQYXkgSW5jXG4gKlxuICogVGhlIE1JVCBMaWNlbnNlIChNSVQpXG4gKlxuICogQ29weXJpZ2h0IGJhc2UteCBjb250cmlidXRvcnMgKGMpIDIwMTZcbiAqXG4gKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuICogY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLFxuICogdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvblxuICogdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsXG4gKiBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGVcbiAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4gKlxuICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbiAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4gKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbiAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuICogQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkdcbiAqIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1NcbiAqIElOIFRIRSBTT0ZUV0FSRS5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBieXRlc18xID0gcmVxdWlyZShcIi4vYnl0ZXNcIik7XG52YXIgcHJvcGVydGllc18xID0gcmVxdWlyZShcIi4vcHJvcGVydGllc1wiKTtcbnZhciBCYXNlWCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBCYXNlWChhbHBoYWJldCkge1xuICAgICAgICBwcm9wZXJ0aWVzXzEuZGVmaW5lUmVhZE9ubHkodGhpcywgXCJhbHBoYWJldFwiLCBhbHBoYWJldCk7XG4gICAgICAgIHByb3BlcnRpZXNfMS5kZWZpbmVSZWFkT25seSh0aGlzLCBcImJhc2VcIiwgYWxwaGFiZXQubGVuZ3RoKTtcbiAgICAgICAgcHJvcGVydGllc18xLmRlZmluZVJlYWRPbmx5KHRoaXMsIFwiX2FscGhhYmV0TWFwXCIsIHt9KTtcbiAgICAgICAgcHJvcGVydGllc18xLmRlZmluZVJlYWRPbmx5KHRoaXMsIFwiX2xlYWRlclwiLCBhbHBoYWJldC5jaGFyQXQoMCkpO1xuICAgICAgICAvLyBwcmUtY29tcHV0ZSBsb29rdXAgdGFibGVcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbHBoYWJldC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5fYWxwaGFiZXRNYXBbYWxwaGFiZXQuY2hhckF0KGkpXSA9IGk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgQmFzZVgucHJvdG90eXBlLmVuY29kZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICB2YXIgc291cmNlID0gYnl0ZXNfMS5hcnJheWlmeSh2YWx1ZSk7XG4gICAgICAgIGlmIChzb3VyY2UubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRpZ2l0cyA9IFswXTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzb3VyY2UubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIHZhciBjYXJyeSA9IHNvdXJjZVtpXTtcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZGlnaXRzLmxlbmd0aDsgKytqKSB7XG4gICAgICAgICAgICAgICAgY2FycnkgKz0gZGlnaXRzW2pdIDw8IDg7XG4gICAgICAgICAgICAgICAgZGlnaXRzW2pdID0gY2FycnkgJSB0aGlzLmJhc2U7XG4gICAgICAgICAgICAgICAgY2FycnkgPSAoY2FycnkgLyB0aGlzLmJhc2UpIHwgMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdoaWxlIChjYXJyeSA+IDApIHtcbiAgICAgICAgICAgICAgICBkaWdpdHMucHVzaChjYXJyeSAlIHRoaXMuYmFzZSk7XG4gICAgICAgICAgICAgICAgY2FycnkgPSAoY2FycnkgLyB0aGlzLmJhc2UpIHwgMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgc3RyaW5nID0gJyc7XG4gICAgICAgIC8vIGRlYWwgd2l0aCBsZWFkaW5nIHplcm9zXG4gICAgICAgIGZvciAodmFyIGsgPSAwOyBzb3VyY2Vba10gPT09IDAgJiYgayA8IHNvdXJjZS5sZW5ndGggLSAxOyArK2spIHtcbiAgICAgICAgICAgIHN0cmluZyArPSB0aGlzLl9sZWFkZXI7XG4gICAgICAgIH1cbiAgICAgICAgLy8gY29udmVydCBkaWdpdHMgdG8gYSBzdHJpbmdcbiAgICAgICAgZm9yICh2YXIgcSA9IGRpZ2l0cy5sZW5ndGggLSAxOyBxID49IDA7IC0tcSkge1xuICAgICAgICAgICAgc3RyaW5nICs9IHRoaXMuYWxwaGFiZXRbZGlnaXRzW3FdXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3RyaW5nO1xuICAgIH07XG4gICAgQmFzZVgucHJvdG90eXBlLmRlY29kZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICBpZiAodHlwZW9mICh2YWx1ZSkgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBTdHJpbmcnKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYnl0ZXMgPSBbXTtcbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ5dGVzKTtcbiAgICAgICAgfVxuICAgICAgICBieXRlcy5wdXNoKDApO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZhbHVlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgYnl0ZSA9IHRoaXMuX2FscGhhYmV0TWFwW3ZhbHVlW2ldXTtcbiAgICAgICAgICAgIGlmIChieXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vbi1iYXNlJyArIHRoaXMuYmFzZSArICcgY2hhcmFjdGVyJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgY2FycnkgPSBieXRlO1xuICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBieXRlcy5sZW5ndGg7ICsraikge1xuICAgICAgICAgICAgICAgIGNhcnJ5ICs9IGJ5dGVzW2pdICogdGhpcy5iYXNlO1xuICAgICAgICAgICAgICAgIGJ5dGVzW2pdID0gY2FycnkgJiAweGZmO1xuICAgICAgICAgICAgICAgIGNhcnJ5ID4+PSA4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgd2hpbGUgKGNhcnJ5ID4gMCkge1xuICAgICAgICAgICAgICAgIGJ5dGVzLnB1c2goY2FycnkgJiAweGZmKTtcbiAgICAgICAgICAgICAgICBjYXJyeSA+Pj0gODtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBkZWFsIHdpdGggbGVhZGluZyB6ZXJvc1xuICAgICAgICBmb3IgKHZhciBrID0gMDsgdmFsdWVba10gPT09IHRoaXMuX2xlYWRlciAmJiBrIDwgdmFsdWUubGVuZ3RoIC0gMTsgKytrKSB7XG4gICAgICAgICAgICBieXRlcy5wdXNoKDApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBieXRlc18xLmFycmF5aWZ5KG5ldyBVaW50OEFycmF5KGJ5dGVzLnJldmVyc2UoKSkpO1xuICAgIH07XG4gICAgcmV0dXJuIEJhc2VYO1xufSgpKTtcbmV4cG9ydHMuQmFzZVggPSBCYXNlWDtcbnZhciBCYXNlMzIgPSBuZXcgQmFzZVgoXCJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2N1wiKTtcbmV4cG9ydHMuQmFzZTMyID0gQmFzZTMyO1xudmFyIEJhc2U1OCA9IG5ldyBCYXNlWChcIjEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXpcIik7XG5leHBvcnRzLkJhc2U1OCA9IEJhc2U1ODtcbi8vY29uc29sZS5sb2coQmFzZTU4LmRlY29kZShcIlFtZDJWNzc3bzVYdkpiWU1lTWI4azJuVTVmOGQzY2lVUTVZcFl1V2h6djhpRGpcIikpXG4vL2NvbnNvbGUubG9nKEJhc2U1OC5lbmNvZGUoQmFzZTU4LmRlY29kZShcIlFtZDJWNzc3bzVYdkpiWU1lTWI4azJuVTVmOGQzY2lVUTVZcFl1V2h6djhpRGpcIikpKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/basex.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/bignumber.js":
/*!************************************************!*\
  !*** ./node_modules/ethers/utils/bignumber.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardles.\n *\n */\nvar bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/ethers/node_modules/bn.js/lib/bn.js\"));\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar properties_1 = __webpack_require__(/*! ./properties */ \"./node_modules/ethers/utils/properties.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nvar BN_1 = new bn_js_1.default.BN(-1);\nfunction toHex(bn) {\n    var value = bn.toString(16);\n    if (value[0] === '-') {\n        if ((value.length % 2) === 0) {\n            return '-0x0' + value.substring(1);\n        }\n        return \"-0x\" + value.substring(1);\n    }\n    if ((value.length % 2) === 1) {\n        return '0x0' + value;\n    }\n    return '0x' + value;\n}\nfunction toBN(value) {\n    return _bnify(bigNumberify(value));\n}\nfunction toBigNumber(bn) {\n    return new BigNumber(toHex(bn));\n}\nfunction _bnify(value) {\n    var hex = value._hex;\n    if (hex[0] === '-') {\n        return (new bn_js_1.default.BN(hex.substring(3), 16)).mul(BN_1);\n    }\n    return new bn_js_1.default.BN(hex.substring(2), 16);\n}\nvar BigNumber = /** @class */ (function () {\n    function BigNumber(value) {\n        errors.checkNew(this, BigNumber);\n        properties_1.setType(this, 'BigNumber');\n        if (typeof (value) === 'string') {\n            if (bytes_1.isHexString(value)) {\n                if (value == '0x') {\n                    value = '0x0';\n                }\n                properties_1.defineReadOnly(this, '_hex', value);\n            }\n            else if (value[0] === '-' && bytes_1.isHexString(value.substring(1))) {\n                properties_1.defineReadOnly(this, '_hex', value);\n            }\n            else if (value.match(/^-?[0-9]*$/)) {\n                if (value == '') {\n                    value = '0';\n                }\n                properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(value)));\n            }\n            else {\n                errors.throwError('invalid BigNumber string value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n            }\n        }\n        else if (typeof (value) === 'number') {\n            if (parseInt(String(value)) !== value) {\n                errors.throwError('underflow', errors.NUMERIC_FAULT, { operation: 'setValue', fault: 'underflow', value: value, outputValue: parseInt(String(value)) });\n            }\n            try {\n                properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(value)));\n            }\n            catch (error) {\n                errors.throwError('overflow', errors.NUMERIC_FAULT, { operation: 'setValue', fault: 'overflow', details: error.message });\n            }\n        }\n        else if (value instanceof BigNumber) {\n            properties_1.defineReadOnly(this, '_hex', value._hex);\n        }\n        else if (value.toHexString) {\n            properties_1.defineReadOnly(this, '_hex', toHex(toBN(value.toHexString())));\n        }\n        else if (value._hex && bytes_1.isHexString(value._hex)) {\n            properties_1.defineReadOnly(this, '_hex', value._hex);\n        }\n        else if (bytes_1.isArrayish(value)) {\n            properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(bytes_1.hexlify(value).substring(2), 16)));\n        }\n        else {\n            errors.throwError('invalid BigNumber value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n    }\n    BigNumber.prototype.fromTwos = function (value) {\n        return toBigNumber(_bnify(this).fromTwos(value));\n    };\n    BigNumber.prototype.toTwos = function (value) {\n        return toBigNumber(_bnify(this).toTwos(value));\n    };\n    BigNumber.prototype.abs = function () {\n        if (this._hex[0] === '-') {\n            return toBigNumber(_bnify(this).mul(BN_1));\n        }\n        return this;\n    };\n    BigNumber.prototype.add = function (other) {\n        return toBigNumber(_bnify(this).add(toBN(other)));\n    };\n    BigNumber.prototype.sub = function (other) {\n        return toBigNumber(_bnify(this).sub(toBN(other)));\n    };\n    BigNumber.prototype.div = function (other) {\n        var o = bigNumberify(other);\n        if (o.isZero()) {\n            errors.throwError('division by zero', errors.NUMERIC_FAULT, { operation: 'divide', fault: 'division by zero' });\n        }\n        return toBigNumber(_bnify(this).div(toBN(other)));\n    };\n    BigNumber.prototype.mul = function (other) {\n        return toBigNumber(_bnify(this).mul(toBN(other)));\n    };\n    BigNumber.prototype.mod = function (other) {\n        return toBigNumber(_bnify(this).mod(toBN(other)));\n    };\n    BigNumber.prototype.pow = function (other) {\n        return toBigNumber(_bnify(this).pow(toBN(other)));\n    };\n    BigNumber.prototype.maskn = function (value) {\n        return toBigNumber(_bnify(this).maskn(value));\n    };\n    BigNumber.prototype.eq = function (other) {\n        return _bnify(this).eq(toBN(other));\n    };\n    BigNumber.prototype.lt = function (other) {\n        return _bnify(this).lt(toBN(other));\n    };\n    BigNumber.prototype.lte = function (other) {\n        return _bnify(this).lte(toBN(other));\n    };\n    BigNumber.prototype.gt = function (other) {\n        return _bnify(this).gt(toBN(other));\n    };\n    BigNumber.prototype.gte = function (other) {\n        return _bnify(this).gte(toBN(other));\n    };\n    BigNumber.prototype.isZero = function () {\n        return _bnify(this).isZero();\n    };\n    BigNumber.prototype.toNumber = function () {\n        try {\n            return _bnify(this).toNumber();\n        }\n        catch (error) {\n            errors.throwError('overflow', errors.NUMERIC_FAULT, { operation: 'setValue', fault: 'overflow', details: error.message });\n        }\n        return null;\n    };\n    BigNumber.prototype.toString = function () {\n        return _bnify(this).toString(10);\n    };\n    BigNumber.prototype.toHexString = function () {\n        return this._hex;\n    };\n    BigNumber.isBigNumber = function (value) {\n        return properties_1.isType(value, 'BigNumber');\n    };\n    return BigNumber;\n}());\nexports.BigNumber = BigNumber;\nfunction bigNumberify(value) {\n    if (BigNumber.isBigNumber(value)) {\n        return value;\n    }\n    return new BigNumber(value);\n}\nexports.bigNumberify = bigNumberify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/bignumber.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/bytes.js":
/*!********************************************!*\
  !*** ./node_modules/ethers/utils/bytes.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n *  Conversion Utilities\n *\n */\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nexports.isHexable = isHexable;\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        var args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nfunction isArrayish(value) {\n    if (!value || parseInt(String(value.length)) != value.length || typeof (value) === 'string') {\n        return false;\n    }\n    for (var i = 0; i < value.length; i++) {\n        var v = value[i];\n        if (v < 0 || v >= 256 || parseInt(String(v)) != v) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isArrayish = isArrayish;\nfunction arrayify(value) {\n    if (value == null) {\n        errors.throwError('cannot convert null value to array', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (typeof (value) === 'string') {\n        var match = value.match(/^(0x)?[0-9a-fA-F]*$/);\n        if (!match) {\n            errors.throwError('invalid hexidecimal string', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n        if (match[1] !== '0x') {\n            errors.throwError('hex string must have 0x prefix', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n        value = value.substring(2);\n        if (value.length % 2) {\n            value = '0' + value;\n        }\n        var result = [];\n        for (var i = 0; i < value.length; i += 2) {\n            result.push(parseInt(value.substr(i, 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isArrayish(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    errors.throwError('invalid arrayify value', null, { arg: 'value', value: value, type: typeof (value) });\n    return null;\n}\nexports.arrayify = arrayify;\nfunction concat(objects) {\n    var arrays = [];\n    var length = 0;\n    for (var i = 0; i < objects.length; i++) {\n        var object = arrayify(objects[i]);\n        arrays.push(object);\n        length += object.length;\n    }\n    var result = new Uint8Array(length);\n    var offset = 0;\n    for (var i = 0; i < arrays.length; i++) {\n        result.set(arrays[i], offset);\n        offset += arrays[i].length;\n    }\n    return addSlice(result);\n}\nexports.concat = concat;\nfunction stripZeros(value) {\n    var result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    var start = 0;\n    while (result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexports.stripZeros = stripZeros;\nfunction padZeros(value, length) {\n    value = arrayify(value);\n    if (length < value.length) {\n        throw new Error('cannot pad');\n    }\n    var result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexports.padZeros = padZeros;\nfunction isHexString(value, length) {\n    if (typeof (value) !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nexports.isHexString = isHexString;\nvar HexCharacters = '0123456789abcdef';\nfunction hexlify(value) {\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (typeof (value) === 'number') {\n        if (value < 0) {\n            errors.throwError('cannot hexlify negative value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n        // @TODO: Roll this into the above error as a numeric fault (overflow); next version, not backward compatible\n        // We can about (value == MAX_INT) to as well, since that may indicate we underflowed already\n        if (value >= 9007199254740991) {\n            errors.throwError(\"out-of-range\", errors.NUMERIC_FAULT, {\n                operartion: \"hexlify\",\n                fault: \"out-of-safe-range\"\n            });\n        }\n        var hex = '';\n        while (value) {\n            hex = HexCharacters[value & 0x0f] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = '0' + hex;\n            }\n            return '0x' + hex;\n        }\n        return '0x00';\n    }\n    if (typeof (value) === 'string') {\n        var match = value.match(/^(0x)?[0-9a-fA-F]*$/);\n        if (!match) {\n            errors.throwError('invalid hexidecimal string', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n        if (match[1] !== '0x') {\n            errors.throwError('hex string must have 0x prefix', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n        if (value.length % 2) {\n            value = '0x0' + value.substring(2);\n        }\n        return value;\n    }\n    if (isArrayish(value)) {\n        var result = [];\n        for (var i = 0; i < value.length; i++) {\n            var v = value[i];\n            result.push(HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f]);\n        }\n        return '0x' + result.join('');\n    }\n    errors.throwError('invalid hexlify value', null, { arg: 'value', value: value });\n    return 'never';\n}\nexports.hexlify = hexlify;\nfunction hexDataLength(data) {\n    if (!isHexString(data) || (data.length % 2) !== 0) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexports.hexDataLength = hexDataLength;\nfunction hexDataSlice(data, offset, endOffset) {\n    if (!isHexString(data)) {\n        errors.throwError('invalid hex data', errors.INVALID_ARGUMENT, { arg: 'value', value: data });\n    }\n    if ((data.length % 2) !== 0) {\n        errors.throwError('hex data length must be even', errors.INVALID_ARGUMENT, { arg: 'value', value: data });\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return '0x' + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return '0x' + data.substring(offset);\n}\nexports.hexDataSlice = hexDataSlice;\nfunction hexStripZeros(value) {\n    if (!isHexString(value)) {\n        errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    while (value.length > 3 && value.substring(0, 3) === '0x0') {\n        value = '0x' + value.substring(3);\n    }\n    return value;\n}\nexports.hexStripZeros = hexStripZeros;\nfunction hexZeroPad(value, length) {\n    if (!isHexString(value)) {\n        errors.throwError('invalid hex string', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    while (value.length < 2 * length + 2) {\n        value = '0x0' + value.substring(2);\n    }\n    return value;\n}\nexports.hexZeroPad = hexZeroPad;\nfunction isSignature(value) {\n    return (value && value.r != null && value.s != null);\n}\nfunction splitSignature(signature) {\n    var v = 0;\n    var r = '0x', s = '0x';\n    if (isSignature(signature)) {\n        if (signature.v == null && signature.recoveryParam == null) {\n            errors.throwError('at least on of recoveryParam or v must be specified', errors.INVALID_ARGUMENT, { argument: 'signature', value: signature });\n        }\n        r = hexZeroPad(signature.r, 32);\n        s = hexZeroPad(signature.s, 32);\n        v = signature.v;\n        if (typeof (v) === 'string') {\n            v = parseInt(v, 16);\n        }\n        var recoveryParam = signature.recoveryParam;\n        if (recoveryParam == null && signature.v != null) {\n            recoveryParam = 1 - (v % 2);\n        }\n        v = 27 + recoveryParam;\n    }\n    else {\n        var bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            throw new Error('invalid signature');\n        }\n        r = hexlify(bytes.slice(0, 32));\n        s = hexlify(bytes.slice(32, 64));\n        v = bytes[64];\n        if (v !== 27 && v !== 28) {\n            v = 27 + (v % 2);\n        }\n    }\n    return {\n        r: r,\n        s: s,\n        recoveryParam: (v - 27),\n        v: v\n    };\n}\nexports.splitSignature = splitSignature;\nfunction joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? '0x1c' : '0x1b')\n    ]));\n}\nexports.joinSignature = joinSignature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/bytes.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/hash.js":
/*!*******************************************!*\
  !*** ./node_modules/ethers/utils/hash.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar utf8_1 = __webpack_require__(/*! ./utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar keccak256_1 = __webpack_require__(/*! ./keccak256 */ \"./node_modules/ethers/utils/keccak256.js\");\n///////////////////////////////\nvar Zeros = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nvar Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nvar UseSTD3ASCIIRules = new RegExp(\"^[a-z0-9.-]*$\");\nfunction namehash(name) {\n    if (typeof (name) !== 'string') {\n        errors.throwError('invalid address - ' + String(name), errors.INVALID_ARGUMENT, {\n            argument: 'name',\n            value: name\n        });\n    }\n    name = name.toLowerCase();\n    // Supporting the full UTF-8 space requires additional (and large)\n    // libraries, so for now we simply do not support them.\n    // It should be fairly easy in the future to support systems with\n    // String.normalize, but that is future work.\n    if (!name.match(UseSTD3ASCIIRules)) {\n        errors.throwError('contains invalid UseSTD3ASCIIRules characters', errors.INVALID_ARGUMENT, {\n            argument: 'name',\n            value: name\n        });\n    }\n    var result = Zeros;\n    while (name.length) {\n        var partition = name.match(Partition);\n        var label = utf8_1.toUtf8Bytes(partition[3]);\n        result = keccak256_1.keccak256(bytes_1.concat([result, keccak256_1.keccak256(label)]));\n        name = partition[2] || '';\n    }\n    return bytes_1.hexlify(result);\n}\nexports.namehash = namehash;\nfunction id(text) {\n    return keccak256_1.keccak256(utf8_1.toUtf8Bytes(text));\n}\nexports.id = id;\nfunction hashMessage(message) {\n    return keccak256_1.keccak256(bytes_1.concat([\n        utf8_1.toUtf8Bytes('\\x19Ethereum Signed Message:\\n'),\n        utf8_1.toUtf8Bytes(String(message.length)),\n        ((typeof (message) === 'string') ? utf8_1.toUtf8Bytes(message) : message)\n    ]));\n}\nexports.hashMessage = hashMessage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL2hhc2guanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsbUJBQU8sQ0FBQyxrREFBVztBQUM3QyxjQUFjLG1CQUFPLENBQUMscURBQVM7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLG1EQUFRO0FBQzdCLGtCQUFrQixtQkFBTyxDQUFDLDZEQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL2hhc2guanM/YzdmMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgcmVzdWx0W2tdID0gbW9kW2tdO1xuICAgIHJlc3VsdFtcImRlZmF1bHRcIl0gPSBtb2Q7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZXJyb3JzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuLi9lcnJvcnNcIikpO1xudmFyIGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbnZhciB1dGY4XzEgPSByZXF1aXJlKFwiLi91dGY4XCIpO1xudmFyIGtlY2NhazI1Nl8xID0gcmVxdWlyZShcIi4va2VjY2FrMjU2XCIpO1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xudmFyIFplcm9zID0gbmV3IFVpbnQ4QXJyYXkoWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdKTtcbnZhciBQYXJ0aXRpb24gPSBuZXcgUmVnRXhwKFwiXigoLiopXFxcXC4pPyhbXi5dKykkXCIpO1xudmFyIFVzZVNURDNBU0NJSVJ1bGVzID0gbmV3IFJlZ0V4cChcIl5bYS16MC05Li1dKiRcIik7XG5mdW5jdGlvbiBuYW1laGFzaChuYW1lKSB7XG4gICAgaWYgKHR5cGVvZiAobmFtZSkgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGVycm9ycy50aHJvd0Vycm9yKCdpbnZhbGlkIGFkZHJlc3MgLSAnICsgU3RyaW5nKG5hbWUpLCBlcnJvcnMuSU5WQUxJRF9BUkdVTUVOVCwge1xuICAgICAgICAgICAgYXJndW1lbnQ6ICduYW1lJyxcbiAgICAgICAgICAgIHZhbHVlOiBuYW1lXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBuYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIC8vIFN1cHBvcnRpbmcgdGhlIGZ1bGwgVVRGLTggc3BhY2UgcmVxdWlyZXMgYWRkaXRpb25hbCAoYW5kIGxhcmdlKVxuICAgIC8vIGxpYnJhcmllcywgc28gZm9yIG5vdyB3ZSBzaW1wbHkgZG8gbm90IHN1cHBvcnQgdGhlbS5cbiAgICAvLyBJdCBzaG91bGQgYmUgZmFpcmx5IGVhc3kgaW4gdGhlIGZ1dHVyZSB0byBzdXBwb3J0IHN5c3RlbXMgd2l0aFxuICAgIC8vIFN0cmluZy5ub3JtYWxpemUsIGJ1dCB0aGF0IGlzIGZ1dHVyZSB3b3JrLlxuICAgIGlmICghbmFtZS5tYXRjaChVc2VTVEQzQVNDSUlSdWxlcykpIHtcbiAgICAgICAgZXJyb3JzLnRocm93RXJyb3IoJ2NvbnRhaW5zIGludmFsaWQgVXNlU1REM0FTQ0lJUnVsZXMgY2hhcmFjdGVycycsIGVycm9ycy5JTlZBTElEX0FSR1VNRU5ULCB7XG4gICAgICAgICAgICBhcmd1bWVudDogJ25hbWUnLFxuICAgICAgICAgICAgdmFsdWU6IG5hbWVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHZhciByZXN1bHQgPSBaZXJvcztcbiAgICB3aGlsZSAobmFtZS5sZW5ndGgpIHtcbiAgICAgICAgdmFyIHBhcnRpdGlvbiA9IG5hbWUubWF0Y2goUGFydGl0aW9uKTtcbiAgICAgICAgdmFyIGxhYmVsID0gdXRmOF8xLnRvVXRmOEJ5dGVzKHBhcnRpdGlvblszXSk7XG4gICAgICAgIHJlc3VsdCA9IGtlY2NhazI1Nl8xLmtlY2NhazI1NihieXRlc18xLmNvbmNhdChbcmVzdWx0LCBrZWNjYWsyNTZfMS5rZWNjYWsyNTYobGFiZWwpXSkpO1xuICAgICAgICBuYW1lID0gcGFydGl0aW9uWzJdIHx8ICcnO1xuICAgIH1cbiAgICByZXR1cm4gYnl0ZXNfMS5oZXhsaWZ5KHJlc3VsdCk7XG59XG5leHBvcnRzLm5hbWVoYXNoID0gbmFtZWhhc2g7XG5mdW5jdGlvbiBpZCh0ZXh0KSB7XG4gICAgcmV0dXJuIGtlY2NhazI1Nl8xLmtlY2NhazI1Nih1dGY4XzEudG9VdGY4Qnl0ZXModGV4dCkpO1xufVxuZXhwb3J0cy5pZCA9IGlkO1xuZnVuY3Rpb24gaGFzaE1lc3NhZ2UobWVzc2FnZSkge1xuICAgIHJldHVybiBrZWNjYWsyNTZfMS5rZWNjYWsyNTYoYnl0ZXNfMS5jb25jYXQoW1xuICAgICAgICB1dGY4XzEudG9VdGY4Qnl0ZXMoJ1xceDE5RXRoZXJldW0gU2lnbmVkIE1lc3NhZ2U6XFxuJyksXG4gICAgICAgIHV0ZjhfMS50b1V0ZjhCeXRlcyhTdHJpbmcobWVzc2FnZS5sZW5ndGgpKSxcbiAgICAgICAgKCh0eXBlb2YgKG1lc3NhZ2UpID09PSAnc3RyaW5nJykgPyB1dGY4XzEudG9VdGY4Qnl0ZXMobWVzc2FnZSkgOiBtZXNzYWdlKVxuICAgIF0pKTtcbn1cbmV4cG9ydHMuaGFzaE1lc3NhZ2UgPSBoYXNoTWVzc2FnZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/hash.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/hdnode.js":
/*!*********************************************!*\
  !*** ./node_modules/ethers/utils/hdnode.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\n// The English language word list.\n// For additional word lists, please see /src.tc/wordlists/\nvar lang_en_1 = __webpack_require__(/*! ../wordlists/lang-en */ \"./node_modules/ethers/wordlists/lang-en.js\");\n// Automatically register English?\n//import { register } from '../wordlists/wordlist';\n//register(langEn);\nvar basex_1 = __webpack_require__(/*! ./basex */ \"./node_modules/ethers/utils/basex.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar bignumber_1 = __webpack_require__(/*! ./bignumber */ \"./node_modules/ethers/utils/bignumber.js\");\nvar utf8_1 = __webpack_require__(/*! ./utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar pbkdf2_1 = __webpack_require__(/*! ./pbkdf2 */ \"./node_modules/ethers/utils/pbkdf2.js\");\nvar hmac_1 = __webpack_require__(/*! ./hmac */ \"./node_modules/ethers/utils/hmac.js\");\nvar properties_1 = __webpack_require__(/*! ./properties */ \"./node_modules/ethers/utils/properties.js\");\nvar secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"./node_modules/ethers/utils/secp256k1.js\");\nvar sha2_1 = __webpack_require__(/*! ./sha2 */ \"./node_modules/ethers/utils/sha2.js\");\nvar N = bignumber_1.bigNumberify(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nvar MasterSecret = utf8_1.toUtf8Bytes('Bitcoin seed');\nvar HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return bytes_1.hexZeroPad(bytes_1.hexlify(value), 32);\n}\nfunction base58check(data) {\n    var checksum = bytes_1.hexDataSlice(sha2_1.sha256(sha2_1.sha256(data)), 0, 4);\n    return basex_1.Base58.encode(bytes_1.concat([data, checksum]));\n}\nvar _constructorGuard = {};\nexports.defaultPath = \"m/44'/60'/0'/0/0\";\nvar HDNode = /** @class */ (function () {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    function HDNode(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonic, path) {\n        errors.checkNew(this, HDNode);\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error('HDNode constructor cannot be called directly');\n        }\n        if (privateKey) {\n            var keyPair = new secp256k1_1.KeyPair(privateKey);\n            properties_1.defineReadOnly(this, 'privateKey', keyPair.privateKey);\n            properties_1.defineReadOnly(this, 'publicKey', keyPair.compressedPublicKey);\n        }\n        else {\n            properties_1.defineReadOnly(this, 'privateKey', null);\n            properties_1.defineReadOnly(this, 'publicKey', bytes_1.hexlify(publicKey));\n        }\n        properties_1.defineReadOnly(this, 'parentFingerprint', parentFingerprint);\n        properties_1.defineReadOnly(this, 'fingerprint', bytes_1.hexDataSlice(sha2_1.ripemd160(sha2_1.sha256(this.publicKey)), 0, 4));\n        properties_1.defineReadOnly(this, 'address', secp256k1_1.computeAddress(this.publicKey));\n        properties_1.defineReadOnly(this, 'chainCode', chainCode);\n        properties_1.defineReadOnly(this, 'index', index);\n        properties_1.defineReadOnly(this, 'depth', depth);\n        properties_1.defineReadOnly(this, 'mnemonic', mnemonic);\n        properties_1.defineReadOnly(this, 'path', path);\n        properties_1.setType(this, 'HDNode');\n    }\n    Object.defineProperty(HDNode.prototype, \"extendedKey\", {\n        get: function () {\n            // We only support the mainnet values for now, but if anyone needs\n            // testnet values, let me know. I believe current senitment is that\n            // we should always use mainnet, and use BIP-44 to derive the network\n            //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n            //   - Testnet: public=0x043587CF, private=0x04358394\n            if (this.depth >= 256) {\n                throw new Error(\"Depth too large!\");\n            }\n            return base58check(bytes_1.concat([\n                ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n                bytes_1.hexlify(this.depth),\n                this.parentFingerprint,\n                bytes_1.hexZeroPad(bytes_1.hexlify(this.index), 4),\n                this.chainCode,\n                ((this.privateKey != null) ? bytes_1.concat([\"0x00\", this.privateKey]) : this.publicKey),\n            ]));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HDNode.prototype.neuter = function () {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, null, this.path);\n    };\n    HDNode.prototype._derive = function (index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        var path = this.path;\n        if (path) {\n            path += '/' + (index & ~HardenedBit);\n        }\n        var data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error('cannot derive child of neutered node');\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(bytes_1.arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(bytes_1.arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (var i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        var I = hmac_1.computeHmac(hmac_1.SupportedAlgorithms.sha512, this.chainCode, data);\n        var IL = I.slice(0, 32);\n        var IR = I.slice(32);\n        // The private key\n        var ki = null;\n        // The public key\n        var Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(bignumber_1.bigNumberify(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            var ek = new secp256k1_1.KeyPair(bytes_1.hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, this.mnemonic, path);\n    };\n    HDNode.prototype.derivePath = function (path) {\n        var components = path.split('/');\n        if (components.length === 0 || (components[0] === 'm' && this.depth !== 0)) {\n            throw new Error('invalid path - ' + path);\n        }\n        if (components[0] === 'm') {\n            components.shift();\n        }\n        var result = this;\n        for (var i = 0; i < components.length; i++) {\n            var component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                var index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error('invalid path index - ' + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                var index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error('invalid path index - ' + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error('invalid path component - ' + component);\n            }\n        }\n        return result;\n    };\n    HDNode.isHDNode = function (value) {\n        return properties_1.isType(value, 'HDNode');\n    };\n    return HDNode;\n}());\nexports.HDNode = HDNode;\nfunction fromExtendedKey(extendedKey) {\n    var bytes = basex_1.Base58.decode(extendedKey);\n    if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n        errors.throwError(\"invalid extended key\", errors.INVALID_ARGUMENT, {\n            argument: \"extendedKey\",\n            value: \"[REDACTED]\"\n        });\n    }\n    var depth = bytes[4];\n    var parentFingerprint = bytes_1.hexlify(bytes.slice(5, 9));\n    var index = parseInt(bytes_1.hexlify(bytes.slice(9, 13)).substring(2), 16);\n    var chainCode = bytes_1.hexlify(bytes.slice(13, 45));\n    var key = bytes.slice(45, 78);\n    switch (bytes_1.hexlify(bytes.slice(0, 4))) {\n        // Public Key\n        case \"0x0488b21e\":\n        case \"0x043587cf\":\n            return new HDNode(_constructorGuard, null, bytes_1.hexlify(key), parentFingerprint, chainCode, index, depth, null, null);\n        // Private Key\n        case \"0x0488ade4\":\n        case \"0x04358394\":\n            if (key[0] !== 0) {\n                break;\n            }\n            return new HDNode(_constructorGuard, bytes_1.hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null, null);\n    }\n    return errors.throwError(\"invalid extended key\", errors.INVALID_ARGUMENT, {\n        argument: \"extendedKey\",\n        value: \"[REDACTED]\"\n    });\n}\nexports.fromExtendedKey = fromExtendedKey;\nfunction _fromSeed(seed, mnemonic) {\n    var seedArray = bytes_1.arrayify(seed);\n    if (seedArray.length < 16 || seedArray.length > 64) {\n        throw new Error('invalid seed');\n    }\n    var I = bytes_1.arrayify(hmac_1.computeHmac(hmac_1.SupportedAlgorithms.sha512, MasterSecret, seedArray));\n    return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic, 'm');\n}\nfunction fromMnemonic(mnemonic, wordlist, password) {\n    // Normalize the mnemonic (also throws if the checksum is invalid)\n    mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n    return _fromSeed(mnemonicToSeed(mnemonic, password), mnemonic);\n}\nexports.fromMnemonic = fromMnemonic;\nfunction fromSeed(seed) {\n    return _fromSeed(seed, null);\n}\nexports.fromSeed = fromSeed;\nfunction mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = '';\n    }\n    var salt = utf8_1.toUtf8Bytes('mnemonic' + password, utf8_1.UnicodeNormalizationForm.NFKD);\n    return bytes_1.hexlify(pbkdf2_1.pbkdf2(utf8_1.toUtf8Bytes(mnemonic, utf8_1.UnicodeNormalizationForm.NFKD), salt, 2048, 64, 'sha512'));\n}\nexports.mnemonicToSeed = mnemonicToSeed;\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    if (!wordlist) {\n        wordlist = lang_en_1.langEn;\n    }\n    errors.checkNormalize();\n    var words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error('invalid mnemonic');\n    }\n    var entropy = bytes_1.arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    var offset = 0;\n    for (var i = 0; i < words.length; i++) {\n        var index = wordlist.getWordIndex(words[i].normalize('NFKD'));\n        if (index === -1) {\n            throw new Error('invalid mnemonic');\n        }\n        for (var bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    var entropyBits = 32 * words.length / 3;\n    var checksumBits = words.length / 3;\n    var checksumMask = getUpperMask(checksumBits);\n    var checksum = bytes_1.arrayify(sha2_1.sha256(entropy.slice(0, entropyBits / 8)))[0];\n    checksum &= checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error('invalid checksum');\n    }\n    return bytes_1.hexlify(entropy.slice(0, entropyBits / 8));\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nfunction entropyToMnemonic(entropy, wordlist) {\n    entropy = bytes_1.arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error('invalid entropy');\n    }\n    var indices = [0];\n    var remainingBits = 11;\n    for (var i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    var checksum = bytes_1.arrayify(sha2_1.sha256(entropy))[0];\n    var checksumBits = entropy.length / 4;\n    checksum &= getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    if (!wordlist) {\n        wordlist = lang_en_1.langEn;\n    }\n    return wordlist.join(indices.map(function (index) { return wordlist.getWord(index); }));\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nfunction isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexports.isValidMnemonic = isValidMnemonic;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/hdnode.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/hmac.js":
/*!*******************************************!*\
  !*** ./node_modules/ethers/utils/hmac.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nvar SupportedAlgorithms;\n(function (SupportedAlgorithms) {\n    SupportedAlgorithms[\"sha256\"] = \"sha256\";\n    SupportedAlgorithms[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithms = exports.SupportedAlgorithms || (exports.SupportedAlgorithms = {}));\n;\nfunction computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithms[algorithm]) {\n        errors.throwError('unsupported algorithm ' + algorithm, errors.UNSUPPORTED_OPERATION, { operation: 'hmac', algorithm: algorithm });\n    }\n    return bytes_1.arrayify(crypto_1.createHmac(algorithm, Buffer.from(bytes_1.arrayify(key))).update(Buffer.from(bytes_1.arrayify(data))).digest());\n}\nexports.computeHmac = computeHmac;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL2htYWMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLG1CQUFPLENBQUMsc0JBQVE7QUFDL0IsY0FBYyxtQkFBTyxDQUFDLHFEQUFTO0FBQy9CLDBCQUEwQixtQkFBTyxDQUFDLGtEQUFXO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3REFBd0QsMkJBQTJCLEtBQUs7QUFDekY7QUFDQTtBQUNBO0FBQ0EsZ0dBQWdHLHlDQUF5QztBQUN6STtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL2htYWMuanM/OGUzZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgcmVzdWx0W2tdID0gbW9kW2tdO1xuICAgIHJlc3VsdFtcImRlZmF1bHRcIl0gPSBtb2Q7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xudmFyIGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbnZhciBlcnJvcnMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4uL2Vycm9yc1wiKSk7XG52YXIgU3VwcG9ydGVkQWxnb3JpdGhtcztcbihmdW5jdGlvbiAoU3VwcG9ydGVkQWxnb3JpdGhtcykge1xuICAgIFN1cHBvcnRlZEFsZ29yaXRobXNbXCJzaGEyNTZcIl0gPSBcInNoYTI1NlwiO1xuICAgIFN1cHBvcnRlZEFsZ29yaXRobXNbXCJzaGE1MTJcIl0gPSBcInNoYTUxMlwiO1xufSkoU3VwcG9ydGVkQWxnb3JpdGhtcyA9IGV4cG9ydHMuU3VwcG9ydGVkQWxnb3JpdGhtcyB8fCAoZXhwb3J0cy5TdXBwb3J0ZWRBbGdvcml0aG1zID0ge30pKTtcbjtcbmZ1bmN0aW9uIGNvbXB1dGVIbWFjKGFsZ29yaXRobSwga2V5LCBkYXRhKSB7XG4gICAgaWYgKCFTdXBwb3J0ZWRBbGdvcml0aG1zW2FsZ29yaXRobV0pIHtcbiAgICAgICAgZXJyb3JzLnRocm93RXJyb3IoJ3Vuc3VwcG9ydGVkIGFsZ29yaXRobSAnICsgYWxnb3JpdGhtLCBlcnJvcnMuVU5TVVBQT1JURURfT1BFUkFUSU9OLCB7IG9wZXJhdGlvbjogJ2htYWMnLCBhbGdvcml0aG06IGFsZ29yaXRobSB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGJ5dGVzXzEuYXJyYXlpZnkoY3J5cHRvXzEuY3JlYXRlSG1hYyhhbGdvcml0aG0sIEJ1ZmZlci5mcm9tKGJ5dGVzXzEuYXJyYXlpZnkoa2V5KSkpLnVwZGF0ZShCdWZmZXIuZnJvbShieXRlc18xLmFycmF5aWZ5KGRhdGEpKSkuZGlnZXN0KCkpO1xufVxuZXhwb3J0cy5jb21wdXRlSG1hYyA9IGNvbXB1dGVIbWFjO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/hmac.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/index.js":
/*!********************************************!*\
  !*** ./node_modules/ethers/utils/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar abi_coder_1 = __webpack_require__(/*! ./abi-coder */ \"./node_modules/ethers/utils/abi-coder.js\");\nexports.AbiCoder = abi_coder_1.AbiCoder;\nexports.defaultAbiCoder = abi_coder_1.defaultAbiCoder;\nexports.formatSignature = abi_coder_1.formatSignature;\nexports.formatParamType = abi_coder_1.formatParamType;\nexports.parseSignature = abi_coder_1.parseSignature;\nexports.parseParamType = abi_coder_1.parseParamType;\nvar address_1 = __webpack_require__(/*! ./address */ \"./node_modules/ethers/utils/address.js\");\nexports.getAddress = address_1.getAddress;\nexports.getContractAddress = address_1.getContractAddress;\nexports.getCreate2Address = address_1.getCreate2Address;\nexports.getIcapAddress = address_1.getIcapAddress;\nvar base64 = __importStar(__webpack_require__(/*! ./base64 */ \"./node_modules/ethers/utils/base64.js\"));\nexports.base64 = base64;\nvar bignumber_1 = __webpack_require__(/*! ./bignumber */ \"./node_modules/ethers/utils/bignumber.js\");\nexports.BigNumber = bignumber_1.BigNumber;\nexports.bigNumberify = bignumber_1.bigNumberify;\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nexports.arrayify = bytes_1.arrayify;\nexports.concat = bytes_1.concat;\nexports.hexDataSlice = bytes_1.hexDataSlice;\nexports.hexDataLength = bytes_1.hexDataLength;\nexports.hexlify = bytes_1.hexlify;\nexports.hexStripZeros = bytes_1.hexStripZeros;\nexports.hexZeroPad = bytes_1.hexZeroPad;\nexports.isHexString = bytes_1.isHexString;\nexports.joinSignature = bytes_1.joinSignature;\nexports.padZeros = bytes_1.padZeros;\nexports.splitSignature = bytes_1.splitSignature;\nexports.stripZeros = bytes_1.stripZeros;\nvar hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/ethers/utils/hash.js\");\nexports.hashMessage = hash_1.hashMessage;\nexports.id = hash_1.id;\nexports.namehash = hash_1.namehash;\nvar HDNode = __importStar(__webpack_require__(/*! ./hdnode */ \"./node_modules/ethers/utils/hdnode.js\"));\nexports.HDNode = HDNode;\nvar interface_1 = __webpack_require__(/*! ./interface */ \"./node_modules/ethers/utils/interface.js\");\nexports.Interface = interface_1.Interface;\nvar json_wallet_1 = __webpack_require__(/*! ./json-wallet */ \"./node_modules/ethers/utils/json-wallet.js\");\nexports.getJsonWalletAddress = json_wallet_1.getJsonWalletAddress;\nvar keccak256_1 = __webpack_require__(/*! ./keccak256 */ \"./node_modules/ethers/utils/keccak256.js\");\nexports.keccak256 = keccak256_1.keccak256;\nvar sha2_1 = __webpack_require__(/*! ./sha2 */ \"./node_modules/ethers/utils/sha2.js\");\nexports.sha256 = sha2_1.sha256;\nvar solidity_1 = __webpack_require__(/*! ./solidity */ \"./node_modules/ethers/utils/solidity.js\");\nexports.solidityKeccak256 = solidity_1.keccak256;\nexports.solidityPack = solidity_1.pack;\nexports.soliditySha256 = solidity_1.sha256;\nvar random_bytes_1 = __webpack_require__(/*! ./random-bytes */ \"./node_modules/ethers/utils/random-bytes.js\");\nexports.randomBytes = random_bytes_1.randomBytes;\nvar networks_1 = __webpack_require__(/*! ./networks */ \"./node_modules/ethers/utils/networks.js\");\nexports.getNetwork = networks_1.getNetwork;\nvar properties_1 = __webpack_require__(/*! ./properties */ \"./node_modules/ethers/utils/properties.js\");\nexports.checkProperties = properties_1.checkProperties;\nexports.deepCopy = properties_1.deepCopy;\nexports.defineReadOnly = properties_1.defineReadOnly;\nexports.resolveProperties = properties_1.resolveProperties;\nexports.shallowCopy = properties_1.shallowCopy;\nvar RLP = __importStar(__webpack_require__(/*! ./rlp */ \"./node_modules/ethers/utils/rlp.js\"));\nexports.RLP = RLP;\nvar secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"./node_modules/ethers/utils/secp256k1.js\");\nexports.computeAddress = secp256k1_1.computeAddress;\nexports.computePublicKey = secp256k1_1.computePublicKey;\nexports.recoverAddress = secp256k1_1.recoverAddress;\nexports.recoverPublicKey = secp256k1_1.recoverPublicKey;\nexports.verifyMessage = secp256k1_1.verifyMessage;\nvar signing_key_1 = __webpack_require__(/*! ./signing-key */ \"./node_modules/ethers/utils/signing-key.js\");\nexports.SigningKey = signing_key_1.SigningKey;\nvar transaction_1 = __webpack_require__(/*! ./transaction */ \"./node_modules/ethers/utils/transaction.js\");\nexports.populateTransaction = transaction_1.populateTransaction;\nvar transaction_2 = __webpack_require__(/*! ./transaction */ \"./node_modules/ethers/utils/transaction.js\");\nexports.parseTransaction = transaction_2.parse;\nexports.serializeTransaction = transaction_2.serialize;\nvar utf8_1 = __webpack_require__(/*! ./utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nexports.formatBytes32String = utf8_1.formatBytes32String;\nexports.parseBytes32String = utf8_1.parseBytes32String;\nexports.toUtf8Bytes = utf8_1.toUtf8Bytes;\nexports.toUtf8String = utf8_1.toUtf8String;\nvar units_1 = __webpack_require__(/*! ./units */ \"./node_modules/ethers/utils/units.js\");\nexports.commify = units_1.commify;\nexports.formatEther = units_1.formatEther;\nexports.parseEther = units_1.parseEther;\nexports.formatUnits = units_1.formatUnits;\nexports.parseUnits = units_1.parseUnits;\nvar web_1 = __webpack_require__(/*! ./web */ \"./node_modules/ethers/utils/web.js\");\nexports.fetchJson = web_1.fetchJson;\nexports.poll = web_1.poll;\n////////////////////////\n// Enums\nvar hmac_1 = __webpack_require__(/*! ./hmac */ \"./node_modules/ethers/utils/hmac.js\");\nexports.SupportedAlgorithms = hmac_1.SupportedAlgorithms;\nvar utf8_2 = __webpack_require__(/*! ./utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nexports.UnicodeNormalizationForm = utf8_2.UnicodeNormalizationForm;\nvar wordlist_1 = __webpack_require__(/*! ./wordlist */ \"./node_modules/ethers/utils/wordlist.js\");\nexports.Wordlist = wordlist_1.Wordlist;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLG1CQUFPLENBQUMsNkRBQWE7QUFDdkMsZ0JBQWdCO0FBQ2hCLHVCQUF1QjtBQUN2Qix1QkFBdUI7QUFDdkIsdUJBQXVCO0FBQ3ZCLHNCQUFzQjtBQUN0QixzQkFBc0I7QUFDdEIsZ0JBQWdCLG1CQUFPLENBQUMseURBQVc7QUFDbkMsa0JBQWtCO0FBQ2xCLDBCQUEwQjtBQUMxQix5QkFBeUI7QUFDekIsc0JBQXNCO0FBQ3RCLDBCQUEwQixtQkFBTyxDQUFDLHVEQUFVO0FBQzVDLGNBQWM7QUFDZCxrQkFBa0IsbUJBQU8sQ0FBQyw2REFBYTtBQUN2QyxpQkFBaUI7QUFDakIsb0JBQW9CO0FBQ3BCLGNBQWMsbUJBQU8sQ0FBQyxxREFBUztBQUMvQixnQkFBZ0I7QUFDaEIsY0FBYztBQUNkLG9CQUFvQjtBQUNwQixxQkFBcUI7QUFDckIsZUFBZTtBQUNmLHFCQUFxQjtBQUNyQixrQkFBa0I7QUFDbEIsbUJBQW1CO0FBQ25CLHFCQUFxQjtBQUNyQixnQkFBZ0I7QUFDaEIsc0JBQXNCO0FBQ3RCLGtCQUFrQjtBQUNsQixhQUFhLG1CQUFPLENBQUMsbURBQVE7QUFDN0IsbUJBQW1CO0FBQ25CLFVBQVU7QUFDVixnQkFBZ0I7QUFDaEIsMEJBQTBCLG1CQUFPLENBQUMsdURBQVU7QUFDNUMsY0FBYztBQUNkLGtCQUFrQixtQkFBTyxDQUFDLDZEQUFhO0FBQ3ZDLGlCQUFpQjtBQUNqQixvQkFBb0IsbUJBQU8sQ0FBQyxpRUFBZTtBQUMzQyw0QkFBNEI7QUFDNUIsa0JBQWtCLG1CQUFPLENBQUMsNkRBQWE7QUFDdkMsaUJBQWlCO0FBQ2pCLGFBQWEsbUJBQU8sQ0FBQyxtREFBUTtBQUM3QixjQUFjO0FBQ2QsaUJBQWlCLG1CQUFPLENBQUMsMkRBQVk7QUFDckMseUJBQXlCO0FBQ3pCLG9CQUFvQjtBQUNwQixzQkFBc0I7QUFDdEIscUJBQXFCLG1CQUFPLENBQUMsbUVBQWdCO0FBQzdDLG1CQUFtQjtBQUNuQixpQkFBaUIsbUJBQU8sQ0FBQywyREFBWTtBQUNyQyxrQkFBa0I7QUFDbEIsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWM7QUFDekMsdUJBQXVCO0FBQ3ZCLGdCQUFnQjtBQUNoQixzQkFBc0I7QUFDdEIseUJBQXlCO0FBQ3pCLG1CQUFtQjtBQUNuQix1QkFBdUIsbUJBQU8sQ0FBQyxpREFBTztBQUN0QyxXQUFXO0FBQ1gsa0JBQWtCLG1CQUFPLENBQUMsNkRBQWE7QUFDdkMsc0JBQXNCO0FBQ3RCLHdCQUF3QjtBQUN4QixzQkFBc0I7QUFDdEIsd0JBQXdCO0FBQ3hCLHFCQUFxQjtBQUNyQixvQkFBb0IsbUJBQU8sQ0FBQyxpRUFBZTtBQUMzQyxrQkFBa0I7QUFDbEIsb0JBQW9CLG1CQUFPLENBQUMsaUVBQWU7QUFDM0MsMkJBQTJCO0FBQzNCLG9CQUFvQixtQkFBTyxDQUFDLGlFQUFlO0FBQzNDLHdCQUF3QjtBQUN4Qiw0QkFBNEI7QUFDNUIsYUFBYSxtQkFBTyxDQUFDLG1EQUFRO0FBQzdCLDJCQUEyQjtBQUMzQiwwQkFBMEI7QUFDMUIsbUJBQW1CO0FBQ25CLG9CQUFvQjtBQUNwQixjQUFjLG1CQUFPLENBQUMscURBQVM7QUFDL0IsZUFBZTtBQUNmLG1CQUFtQjtBQUNuQixrQkFBa0I7QUFDbEIsbUJBQW1CO0FBQ25CLGtCQUFrQjtBQUNsQixZQUFZLG1CQUFPLENBQUMsaURBQU87QUFDM0IsaUJBQWlCO0FBQ2pCLFlBQVk7QUFDWjtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLG1EQUFRO0FBQzdCLDJCQUEyQjtBQUMzQixhQUFhLG1CQUFPLENBQUMsbURBQVE7QUFDN0IsZ0NBQWdDO0FBQ2hDLGlCQUFpQixtQkFBTyxDQUFDLDJEQUFZO0FBQ3JDLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy9ldGhlcnMvdXRpbHMvaW5kZXguanM/YTU2MyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgcmVzdWx0W2tdID0gbW9kW2tdO1xuICAgIHJlc3VsdFtcImRlZmF1bHRcIl0gPSBtb2Q7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYWJpX2NvZGVyXzEgPSByZXF1aXJlKFwiLi9hYmktY29kZXJcIik7XG5leHBvcnRzLkFiaUNvZGVyID0gYWJpX2NvZGVyXzEuQWJpQ29kZXI7XG5leHBvcnRzLmRlZmF1bHRBYmlDb2RlciA9IGFiaV9jb2Rlcl8xLmRlZmF1bHRBYmlDb2RlcjtcbmV4cG9ydHMuZm9ybWF0U2lnbmF0dXJlID0gYWJpX2NvZGVyXzEuZm9ybWF0U2lnbmF0dXJlO1xuZXhwb3J0cy5mb3JtYXRQYXJhbVR5cGUgPSBhYmlfY29kZXJfMS5mb3JtYXRQYXJhbVR5cGU7XG5leHBvcnRzLnBhcnNlU2lnbmF0dXJlID0gYWJpX2NvZGVyXzEucGFyc2VTaWduYXR1cmU7XG5leHBvcnRzLnBhcnNlUGFyYW1UeXBlID0gYWJpX2NvZGVyXzEucGFyc2VQYXJhbVR5cGU7XG52YXIgYWRkcmVzc18xID0gcmVxdWlyZShcIi4vYWRkcmVzc1wiKTtcbmV4cG9ydHMuZ2V0QWRkcmVzcyA9IGFkZHJlc3NfMS5nZXRBZGRyZXNzO1xuZXhwb3J0cy5nZXRDb250cmFjdEFkZHJlc3MgPSBhZGRyZXNzXzEuZ2V0Q29udHJhY3RBZGRyZXNzO1xuZXhwb3J0cy5nZXRDcmVhdGUyQWRkcmVzcyA9IGFkZHJlc3NfMS5nZXRDcmVhdGUyQWRkcmVzcztcbmV4cG9ydHMuZ2V0SWNhcEFkZHJlc3MgPSBhZGRyZXNzXzEuZ2V0SWNhcEFkZHJlc3M7XG52YXIgYmFzZTY0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2Jhc2U2NFwiKSk7XG5leHBvcnRzLmJhc2U2NCA9IGJhc2U2NDtcbnZhciBiaWdudW1iZXJfMSA9IHJlcXVpcmUoXCIuL2JpZ251bWJlclwiKTtcbmV4cG9ydHMuQmlnTnVtYmVyID0gYmlnbnVtYmVyXzEuQmlnTnVtYmVyO1xuZXhwb3J0cy5iaWdOdW1iZXJpZnkgPSBiaWdudW1iZXJfMS5iaWdOdW1iZXJpZnk7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xuZXhwb3J0cy5hcnJheWlmeSA9IGJ5dGVzXzEuYXJyYXlpZnk7XG5leHBvcnRzLmNvbmNhdCA9IGJ5dGVzXzEuY29uY2F0O1xuZXhwb3J0cy5oZXhEYXRhU2xpY2UgPSBieXRlc18xLmhleERhdGFTbGljZTtcbmV4cG9ydHMuaGV4RGF0YUxlbmd0aCA9IGJ5dGVzXzEuaGV4RGF0YUxlbmd0aDtcbmV4cG9ydHMuaGV4bGlmeSA9IGJ5dGVzXzEuaGV4bGlmeTtcbmV4cG9ydHMuaGV4U3RyaXBaZXJvcyA9IGJ5dGVzXzEuaGV4U3RyaXBaZXJvcztcbmV4cG9ydHMuaGV4WmVyb1BhZCA9IGJ5dGVzXzEuaGV4WmVyb1BhZDtcbmV4cG9ydHMuaXNIZXhTdHJpbmcgPSBieXRlc18xLmlzSGV4U3RyaW5nO1xuZXhwb3J0cy5qb2luU2lnbmF0dXJlID0gYnl0ZXNfMS5qb2luU2lnbmF0dXJlO1xuZXhwb3J0cy5wYWRaZXJvcyA9IGJ5dGVzXzEucGFkWmVyb3M7XG5leHBvcnRzLnNwbGl0U2lnbmF0dXJlID0gYnl0ZXNfMS5zcGxpdFNpZ25hdHVyZTtcbmV4cG9ydHMuc3RyaXBaZXJvcyA9IGJ5dGVzXzEuc3RyaXBaZXJvcztcbnZhciBoYXNoXzEgPSByZXF1aXJlKFwiLi9oYXNoXCIpO1xuZXhwb3J0cy5oYXNoTWVzc2FnZSA9IGhhc2hfMS5oYXNoTWVzc2FnZTtcbmV4cG9ydHMuaWQgPSBoYXNoXzEuaWQ7XG5leHBvcnRzLm5hbWVoYXNoID0gaGFzaF8xLm5hbWVoYXNoO1xudmFyIEhETm9kZSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9oZG5vZGVcIikpO1xuZXhwb3J0cy5IRE5vZGUgPSBIRE5vZGU7XG52YXIgaW50ZXJmYWNlXzEgPSByZXF1aXJlKFwiLi9pbnRlcmZhY2VcIik7XG5leHBvcnRzLkludGVyZmFjZSA9IGludGVyZmFjZV8xLkludGVyZmFjZTtcbnZhciBqc29uX3dhbGxldF8xID0gcmVxdWlyZShcIi4vanNvbi13YWxsZXRcIik7XG5leHBvcnRzLmdldEpzb25XYWxsZXRBZGRyZXNzID0ganNvbl93YWxsZXRfMS5nZXRKc29uV2FsbGV0QWRkcmVzcztcbnZhciBrZWNjYWsyNTZfMSA9IHJlcXVpcmUoXCIuL2tlY2NhazI1NlwiKTtcbmV4cG9ydHMua2VjY2FrMjU2ID0ga2VjY2FrMjU2XzEua2VjY2FrMjU2O1xudmFyIHNoYTJfMSA9IHJlcXVpcmUoXCIuL3NoYTJcIik7XG5leHBvcnRzLnNoYTI1NiA9IHNoYTJfMS5zaGEyNTY7XG52YXIgc29saWRpdHlfMSA9IHJlcXVpcmUoXCIuL3NvbGlkaXR5XCIpO1xuZXhwb3J0cy5zb2xpZGl0eUtlY2NhazI1NiA9IHNvbGlkaXR5XzEua2VjY2FrMjU2O1xuZXhwb3J0cy5zb2xpZGl0eVBhY2sgPSBzb2xpZGl0eV8xLnBhY2s7XG5leHBvcnRzLnNvbGlkaXR5U2hhMjU2ID0gc29saWRpdHlfMS5zaGEyNTY7XG52YXIgcmFuZG9tX2J5dGVzXzEgPSByZXF1aXJlKFwiLi9yYW5kb20tYnl0ZXNcIik7XG5leHBvcnRzLnJhbmRvbUJ5dGVzID0gcmFuZG9tX2J5dGVzXzEucmFuZG9tQnl0ZXM7XG52YXIgbmV0d29ya3NfMSA9IHJlcXVpcmUoXCIuL25ldHdvcmtzXCIpO1xuZXhwb3J0cy5nZXROZXR3b3JrID0gbmV0d29ya3NfMS5nZXROZXR3b3JrO1xudmFyIHByb3BlcnRpZXNfMSA9IHJlcXVpcmUoXCIuL3Byb3BlcnRpZXNcIik7XG5leHBvcnRzLmNoZWNrUHJvcGVydGllcyA9IHByb3BlcnRpZXNfMS5jaGVja1Byb3BlcnRpZXM7XG5leHBvcnRzLmRlZXBDb3B5ID0gcHJvcGVydGllc18xLmRlZXBDb3B5O1xuZXhwb3J0cy5kZWZpbmVSZWFkT25seSA9IHByb3BlcnRpZXNfMS5kZWZpbmVSZWFkT25seTtcbmV4cG9ydHMucmVzb2x2ZVByb3BlcnRpZXMgPSBwcm9wZXJ0aWVzXzEucmVzb2x2ZVByb3BlcnRpZXM7XG5leHBvcnRzLnNoYWxsb3dDb3B5ID0gcHJvcGVydGllc18xLnNoYWxsb3dDb3B5O1xudmFyIFJMUCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9ybHBcIikpO1xuZXhwb3J0cy5STFAgPSBSTFA7XG52YXIgc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9zZWNwMjU2azFcIik7XG5leHBvcnRzLmNvbXB1dGVBZGRyZXNzID0gc2VjcDI1NmsxXzEuY29tcHV0ZUFkZHJlc3M7XG5leHBvcnRzLmNvbXB1dGVQdWJsaWNLZXkgPSBzZWNwMjU2azFfMS5jb21wdXRlUHVibGljS2V5O1xuZXhwb3J0cy5yZWNvdmVyQWRkcmVzcyA9IHNlY3AyNTZrMV8xLnJlY292ZXJBZGRyZXNzO1xuZXhwb3J0cy5yZWNvdmVyUHVibGljS2V5ID0gc2VjcDI1NmsxXzEucmVjb3ZlclB1YmxpY0tleTtcbmV4cG9ydHMudmVyaWZ5TWVzc2FnZSA9IHNlY3AyNTZrMV8xLnZlcmlmeU1lc3NhZ2U7XG52YXIgc2lnbmluZ19rZXlfMSA9IHJlcXVpcmUoXCIuL3NpZ25pbmcta2V5XCIpO1xuZXhwb3J0cy5TaWduaW5nS2V5ID0gc2lnbmluZ19rZXlfMS5TaWduaW5nS2V5O1xudmFyIHRyYW5zYWN0aW9uXzEgPSByZXF1aXJlKFwiLi90cmFuc2FjdGlvblwiKTtcbmV4cG9ydHMucG9wdWxhdGVUcmFuc2FjdGlvbiA9IHRyYW5zYWN0aW9uXzEucG9wdWxhdGVUcmFuc2FjdGlvbjtcbnZhciB0cmFuc2FjdGlvbl8yID0gcmVxdWlyZShcIi4vdHJhbnNhY3Rpb25cIik7XG5leHBvcnRzLnBhcnNlVHJhbnNhY3Rpb24gPSB0cmFuc2FjdGlvbl8yLnBhcnNlO1xuZXhwb3J0cy5zZXJpYWxpemVUcmFuc2FjdGlvbiA9IHRyYW5zYWN0aW9uXzIuc2VyaWFsaXplO1xudmFyIHV0ZjhfMSA9IHJlcXVpcmUoXCIuL3V0ZjhcIik7XG5leHBvcnRzLmZvcm1hdEJ5dGVzMzJTdHJpbmcgPSB1dGY4XzEuZm9ybWF0Qnl0ZXMzMlN0cmluZztcbmV4cG9ydHMucGFyc2VCeXRlczMyU3RyaW5nID0gdXRmOF8xLnBhcnNlQnl0ZXMzMlN0cmluZztcbmV4cG9ydHMudG9VdGY4Qnl0ZXMgPSB1dGY4XzEudG9VdGY4Qnl0ZXM7XG5leHBvcnRzLnRvVXRmOFN0cmluZyA9IHV0ZjhfMS50b1V0ZjhTdHJpbmc7XG52YXIgdW5pdHNfMSA9IHJlcXVpcmUoXCIuL3VuaXRzXCIpO1xuZXhwb3J0cy5jb21taWZ5ID0gdW5pdHNfMS5jb21taWZ5O1xuZXhwb3J0cy5mb3JtYXRFdGhlciA9IHVuaXRzXzEuZm9ybWF0RXRoZXI7XG5leHBvcnRzLnBhcnNlRXRoZXIgPSB1bml0c18xLnBhcnNlRXRoZXI7XG5leHBvcnRzLmZvcm1hdFVuaXRzID0gdW5pdHNfMS5mb3JtYXRVbml0cztcbmV4cG9ydHMucGFyc2VVbml0cyA9IHVuaXRzXzEucGFyc2VVbml0cztcbnZhciB3ZWJfMSA9IHJlcXVpcmUoXCIuL3dlYlwiKTtcbmV4cG9ydHMuZmV0Y2hKc29uID0gd2ViXzEuZmV0Y2hKc29uO1xuZXhwb3J0cy5wb2xsID0gd2ViXzEucG9sbDtcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gRW51bXNcbnZhciBobWFjXzEgPSByZXF1aXJlKFwiLi9obWFjXCIpO1xuZXhwb3J0cy5TdXBwb3J0ZWRBbGdvcml0aG1zID0gaG1hY18xLlN1cHBvcnRlZEFsZ29yaXRobXM7XG52YXIgdXRmOF8yID0gcmVxdWlyZShcIi4vdXRmOFwiKTtcbmV4cG9ydHMuVW5pY29kZU5vcm1hbGl6YXRpb25Gb3JtID0gdXRmOF8yLlVuaWNvZGVOb3JtYWxpemF0aW9uRm9ybTtcbnZhciB3b3JkbGlzdF8xID0gcmVxdWlyZShcIi4vd29yZGxpc3RcIik7XG5leHBvcnRzLldvcmRsaXN0ID0gd29yZGxpc3RfMS5Xb3JkbGlzdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/index.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/interface.js":
/*!************************************************!*\
  !*** ./node_modules/ethers/utils/interface.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nvar address_1 = __webpack_require__(/*! ./address */ \"./node_modules/ethers/utils/address.js\");\nvar abi_coder_1 = __webpack_require__(/*! ./abi-coder */ \"./node_modules/ethers/utils/abi-coder.js\");\nvar bignumber_1 = __webpack_require__(/*! ./bignumber */ \"./node_modules/ethers/utils/bignumber.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/ethers/utils/hash.js\");\nvar keccak256_1 = __webpack_require__(/*! ./keccak256 */ \"./node_modules/ethers/utils/keccak256.js\");\nvar properties_1 = __webpack_require__(/*! ./properties */ \"./node_modules/ethers/utils/properties.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\n///////////////////////////////\nvar _Indexed = /** @class */ (function () {\n    function _Indexed(hash) {\n        properties_1.setType(this, 'Indexed');\n        properties_1.defineReadOnly(this, 'hash', hash);\n    }\n    return _Indexed;\n}());\nvar Description = /** @class */ (function () {\n    function Description(info) {\n        properties_1.setType(this, 'Description');\n        for (var key in info) {\n            properties_1.defineReadOnly(this, key, properties_1.deepCopy(info[key], true));\n        }\n        Object.freeze(this);\n    }\n    return Description;\n}());\nvar _DeployDescription = /** @class */ (function (_super) {\n    __extends(_DeployDescription, _super);\n    function _DeployDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _DeployDescription.prototype.encode = function (bytecode, params) {\n        if (!bytes_1.isHexString(bytecode)) {\n            errors.throwError('invalid contract bytecode', errors.INVALID_ARGUMENT, {\n                arg: 'bytecode',\n                value: bytecode\n            });\n        }\n        errors.checkArgumentCount(params.length, this.inputs.length, ' in Interface constructor');\n        try {\n            return (bytecode + abi_coder_1.defaultAbiCoder.encode(this.inputs, params).substring(2));\n        }\n        catch (error) {\n            errors.throwError('invalid constructor argument', errors.INVALID_ARGUMENT, {\n                arg: error.arg,\n                reason: error.reason,\n                value: error.value\n            });\n        }\n        return null;\n    };\n    return _DeployDescription;\n}(Description));\nvar _FunctionDescription = /** @class */ (function (_super) {\n    __extends(_FunctionDescription, _super);\n    function _FunctionDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _FunctionDescription.prototype.encode = function (params) {\n        errors.checkArgumentCount(params.length, this.inputs.length, ' in interface function ' + this.name);\n        try {\n            return this.sighash + abi_coder_1.defaultAbiCoder.encode(this.inputs, params).substring(2);\n        }\n        catch (error) {\n            errors.throwError('invalid input argument', errors.INVALID_ARGUMENT, {\n                arg: error.arg,\n                reason: error.reason,\n                value: error.value\n            });\n        }\n        return null;\n    };\n    _FunctionDescription.prototype.decode = function (data) {\n        try {\n            return abi_coder_1.defaultAbiCoder.decode(this.outputs, bytes_1.arrayify(data));\n        }\n        catch (error) {\n            errors.throwError('invalid data for function output', errors.INVALID_ARGUMENT, {\n                arg: 'data',\n                errorArg: error.arg,\n                errorValue: error.value,\n                value: data,\n                reason: error.reason\n            });\n        }\n    };\n    return _FunctionDescription;\n}(Description));\nvar Result = /** @class */ (function (_super) {\n    __extends(Result, _super);\n    function Result() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Result;\n}(Description));\nvar _EventDescription = /** @class */ (function (_super) {\n    __extends(_EventDescription, _super);\n    function _EventDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _EventDescription.prototype.encodeTopics = function (params) {\n        var _this = this;\n        if (params.length > this.inputs.length) {\n            errors.throwError('too many arguments for ' + this.name, errors.UNEXPECTED_ARGUMENT, { maxCount: params.length, expectedCount: this.inputs.length });\n        }\n        var topics = [];\n        if (!this.anonymous) {\n            topics.push(this.topic);\n        }\n        params.forEach(function (arg, index) {\n            var param = _this.inputs[index];\n            if (!param.indexed) {\n                if (arg != null) {\n                    errors.throwError('cannot filter non-indexed parameters; must be null', errors.INVALID_ARGUMENT, { argument: (param.name || index), value: arg });\n                }\n                return;\n            }\n            if (arg == null) {\n                topics.push(null);\n            }\n            else if (param.type === 'string') {\n                topics.push(hash_1.id(arg));\n            }\n            else if (param.type === 'bytes') {\n                topics.push(keccak256_1.keccak256(arg));\n            }\n            else if (param.type.indexOf('[') !== -1 || param.type.substring(0, 5) === 'tuple') {\n                errors.throwError('filtering with tuples or arrays not implemented yet; bug us on GitHub', errors.NOT_IMPLEMENTED, { operation: 'filter(array|tuple)' });\n            }\n            else {\n                if (param.type === 'address') {\n                    address_1.getAddress(arg);\n                }\n                topics.push(bytes_1.hexZeroPad(bytes_1.hexlify(arg), 32).toLowerCase());\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    };\n    _EventDescription.prototype.decode = function (data, topics) {\n        // Strip the signature off of non-anonymous topics\n        if (topics != null && !this.anonymous) {\n            topics = topics.slice(1);\n        }\n        var inputIndexed = [];\n        var inputNonIndexed = [];\n        var inputDynamic = [];\n        this.inputs.forEach(function (param, index) {\n            if (param.indexed) {\n                if (param.type === 'string' || param.type === 'bytes' || param.type.indexOf('[') >= 0 || param.type.substring(0, 5) === 'tuple') {\n                    inputIndexed.push({ type: 'bytes32', name: (param.name || '') });\n                    inputDynamic.push(true);\n                }\n                else {\n                    inputIndexed.push(param);\n                    inputDynamic.push(false);\n                }\n            }\n            else {\n                inputNonIndexed.push(param);\n                inputDynamic.push(false);\n            }\n        });\n        if (topics != null) {\n            var resultIndexed = abi_coder_1.defaultAbiCoder.decode(inputIndexed, bytes_1.concat(topics));\n        }\n        var resultNonIndexed = abi_coder_1.defaultAbiCoder.decode(inputNonIndexed, bytes_1.arrayify(data));\n        var result = {};\n        var nonIndexedIndex = 0, indexedIndex = 0;\n        this.inputs.forEach(function (input, index) {\n            if (input.indexed) {\n                if (topics == null) {\n                    result[index] = new _Indexed(null);\n                }\n                else if (inputDynamic[index]) {\n                    result[index] = new _Indexed(resultIndexed[indexedIndex++]);\n                }\n                else {\n                    result[index] = resultIndexed[indexedIndex++];\n                }\n            }\n            else {\n                result[index] = resultNonIndexed[nonIndexedIndex++];\n            }\n            if (input.name) {\n                result[input.name] = result[index];\n            }\n        });\n        result.length = this.inputs.length;\n        return new Result(result);\n    };\n    return _EventDescription;\n}(Description));\nvar _TransactionDescription = /** @class */ (function (_super) {\n    __extends(_TransactionDescription, _super);\n    function _TransactionDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return _TransactionDescription;\n}(Description));\nvar _LogDescription = /** @class */ (function (_super) {\n    __extends(_LogDescription, _super);\n    function _LogDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return _LogDescription;\n}(Description));\nfunction addMethod(method) {\n    switch (method.type) {\n        case 'constructor': {\n            var description = new _DeployDescription({\n                inputs: method.inputs,\n                payable: (method.payable == null || !!method.payable)\n            });\n            if (!this.deployFunction) {\n                this.deployFunction = description;\n            }\n            break;\n        }\n        case 'function': {\n            var signature = abi_coder_1.formatSignature(method).replace(/tuple/g, '');\n            var sighash = hash_1.id(signature).substring(0, 10);\n            var isConst = false;\n            if (method.constant != null) {\n                isConst = method.constant;\n            }\n            else if (method.stateMutability != null) {\n                isConst = (method.stateMutability == \"view\" || method.stateMutability == \"pure\");\n            }\n            var description = new _FunctionDescription({\n                inputs: method.inputs,\n                outputs: method.outputs,\n                gas: method.gas,\n                payable: (method.payable == null || !!method.payable),\n                type: (isConst ? 'call' : 'transaction'),\n                name: method.name,\n                signature: signature,\n                sighash: sighash,\n            });\n            // Expose the first (and hopefully unique named function)\n            if (method.name) {\n                if (this.functions[method.name] == null) {\n                    properties_1.defineReadOnly(this.functions, method.name, description);\n                }\n                else {\n                    errors.warn('WARNING: Multiple definitions for ' + method.name);\n                }\n            }\n            // Expose all methods by their signature, for overloaded functions\n            if (this.functions[description.signature] == null) {\n                properties_1.defineReadOnly(this.functions, description.signature, description);\n            }\n            break;\n        }\n        case 'event': {\n            var signature = abi_coder_1.formatSignature(method).replace(/tuple/g, '');\n            var description = new _EventDescription({\n                name: method.name,\n                signature: signature,\n                inputs: method.inputs,\n                topic: hash_1.id(signature),\n                anonymous: (!!method.anonymous)\n            });\n            // Expose the first (and hopefully unique) event name\n            if (method.name && this.events[method.name] == null) {\n                properties_1.defineReadOnly(this.events, method.name, description);\n            }\n            // Expose all events by their signature, for overloaded functions\n            if (this.events[description.signature] == null) {\n                properties_1.defineReadOnly(this.events, description.signature, description);\n            }\n            break;\n        }\n        case \"receive\":\n        case 'fallback':\n            // Nothing to do for fallback\n            break;\n        default:\n            errors.warn('WARNING: unsupported ABI type - ' + method.type);\n            break;\n    }\n}\nvar Interface = /** @class */ (function () {\n    // ParamType is not actually correct here, but for legacy reasons,\n    // we need it. See #721.\n    function Interface(abi) {\n        errors.checkNew(this, Interface);\n        if (typeof (abi) === 'string') {\n            try {\n                abi = JSON.parse(abi);\n            }\n            catch (error) {\n                errors.throwError('could not parse ABI JSON', errors.INVALID_ARGUMENT, {\n                    arg: 'abi',\n                    errorMessage: error.message,\n                    value: abi\n                });\n            }\n            if (!Array.isArray(abi)) {\n                errors.throwError('invalid abi', errors.INVALID_ARGUMENT, { arg: 'abi', value: abi });\n                return null;\n            }\n        }\n        properties_1.defineReadOnly(this, 'functions', {});\n        properties_1.defineReadOnly(this, 'events', {});\n        // Convert any supported ABI format into a standard ABI format\n        var _abi = [];\n        abi.forEach(function (fragment) {\n            if (typeof (fragment) === 'string') {\n                fragment = abi_coder_1.parseSignature(fragment);\n            }\n            // @TODO: We should probable do some validation; create abiCoder.formatSignature for checking\n            _abi.push(fragment);\n        });\n        properties_1.defineReadOnly(this, 'abi', properties_1.deepCopy(_abi, true));\n        _abi.forEach(addMethod, this);\n        // If there wasn't a constructor, create the default constructor\n        if (!this.deployFunction) {\n            addMethod.call(this, { type: 'constructor', inputs: [] });\n        }\n        properties_1.setType(this, 'Interface');\n    }\n    Interface.prototype.parseTransaction = function (tx) {\n        var sighash = tx.data.substring(0, 10).toLowerCase();\n        for (var name in this.functions) {\n            if (name.indexOf('(') === -1) {\n                continue;\n            }\n            var func = this.functions[name];\n            if (func.sighash === sighash) {\n                var result = abi_coder_1.defaultAbiCoder.decode(func.inputs, '0x' + tx.data.substring(10));\n                return new _TransactionDescription({\n                    args: result,\n                    decode: func.decode,\n                    name: func.name,\n                    signature: func.signature,\n                    sighash: func.sighash,\n                    value: bignumber_1.bigNumberify(tx.value || '0'),\n                });\n            }\n        }\n        return null;\n    };\n    Interface.prototype.parseLog = function (log) {\n        for (var name in this.events) {\n            if (name.indexOf('(') === -1) {\n                continue;\n            }\n            var event = this.events[name];\n            if (event.anonymous) {\n                continue;\n            }\n            if (event.topic !== log.topics[0]) {\n                continue;\n            }\n            // @TODO: If anonymous, and the only method, and the input count matches, should we parse and return it?\n            return new _LogDescription({\n                decode: event.decode,\n                name: event.name,\n                signature: event.signature,\n                topic: event.topic,\n                values: event.decode(log.data, log.topics)\n            });\n        }\n        return null;\n    };\n    Interface.isInterface = function (value) {\n        return properties_1.isType(value, 'Interface');\n    };\n    Interface.isIndexed = function (value) {\n        return properties_1.isType(value, 'Indexed');\n    };\n    return Interface;\n}());\nexports.Interface = Interface;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/interface.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/json-wallet.js":
/*!**************************************************!*\
  !*** ./node_modules/ethers/utils/json-wallet.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar address_1 = __webpack_require__(/*! ./address */ \"./node_modules/ethers/utils/address.js\");\nfunction isCrowdsaleWallet(json) {\n    try {\n        var data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexports.isCrowdsaleWallet = isCrowdsaleWallet;\nfunction isSecretStorageWallet(json) {\n    try {\n        var data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\nexports.isSecretStorageWallet = isSecretStorageWallet;\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nfunction getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return address_1.getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isSecretStorageWallet(json)) {\n        try {\n            return address_1.getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\nexports.getJsonWalletAddress = getJsonWalletAddress;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL2pzb24td2FsbGV0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixtQkFBTyxDQUFDLHlEQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy9ldGhlcnMvdXRpbHMvanNvbi13YWxsZXQuanM/MmYxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBhZGRyZXNzXzEgPSByZXF1aXJlKFwiLi9hZGRyZXNzXCIpO1xuZnVuY3Rpb24gaXNDcm93ZHNhbGVXYWxsZXQoanNvbikge1xuICAgIHRyeSB7XG4gICAgICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShqc29uKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIChkYXRhLmVuY3NlZWQgJiYgZGF0YS5ldGhhZGRyKTtcbn1cbmV4cG9ydHMuaXNDcm93ZHNhbGVXYWxsZXQgPSBpc0Nyb3dkc2FsZVdhbGxldDtcbmZ1bmN0aW9uIGlzU2VjcmV0U3RvcmFnZVdhbGxldChqc29uKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKGpzb24pO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoIWRhdGEudmVyc2lvbiB8fCBwYXJzZUludChkYXRhLnZlcnNpb24pICE9PSBkYXRhLnZlcnNpb24gfHwgcGFyc2VJbnQoZGF0YS52ZXJzaW9uKSAhPT0gMykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIEBUT0RPOiBQdXQgbW9yZSBjaGVja3MgdG8gbWFrZSBzdXJlIGl0IGhhcyBrZGYsIGl2IGFuZCBhbGwgdGhhdCBnb29kIHN0dWZmXG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnRzLmlzU2VjcmV0U3RvcmFnZVdhbGxldCA9IGlzU2VjcmV0U3RvcmFnZVdhbGxldDtcbi8vZXhwb3J0IGZ1bmN0aW9uIGlzSnNvbldhbGxldChqc29uOiBzdHJpbmcpOiBib29sZWFuIHtcbi8vICAgIHJldHVybiAoaXNTZWNyZXRTdG9yYWdlV2FsbGV0KGpzb24pIHx8IGlzQ3Jvd2RzYWxlV2FsbGV0KGpzb24pKTtcbi8vfVxuZnVuY3Rpb24gZ2V0SnNvbldhbGxldEFkZHJlc3MoanNvbikge1xuICAgIGlmIChpc0Nyb3dkc2FsZVdhbGxldChqc29uKSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGFkZHJlc3NfMS5nZXRBZGRyZXNzKEpTT04ucGFyc2UoanNvbikuZXRoYWRkcik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoaXNTZWNyZXRTdG9yYWdlV2FsbGV0KGpzb24pKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYWRkcmVzc18xLmdldEFkZHJlc3MoSlNPTi5wYXJzZShqc29uKS5hZGRyZXNzKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0cy5nZXRKc29uV2FsbGV0QWRkcmVzcyA9IGdldEpzb25XYWxsZXRBZGRyZXNzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/json-wallet.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/keccak256.js":
/*!************************************************!*\
  !*** ./node_modules/ethers/utils/keccak256.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar sha3 = __webpack_require__(/*! js-sha3 */ \"js-sha3\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nfunction keccak256(data) {\n    return '0x' + sha3.keccak_256(bytes_1.arrayify(data));\n}\nexports.keccak256 = keccak256;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL2tlY2NhazI1Ni5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxXQUFXLG1CQUFPLENBQUMsd0JBQVM7QUFDNUIsY0FBYyxtQkFBTyxDQUFDLHFEQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy9ldGhlcnMvdXRpbHMva2VjY2FrMjU2LmpzPzQzMzIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHNoYTMgPSByZXF1aXJlKFwianMtc2hhM1wiKTtcbnZhciBieXRlc18xID0gcmVxdWlyZShcIi4vYnl0ZXNcIik7XG5mdW5jdGlvbiBrZWNjYWsyNTYoZGF0YSkge1xuICAgIHJldHVybiAnMHgnICsgc2hhMy5rZWNjYWtfMjU2KGJ5dGVzXzEuYXJyYXlpZnkoZGF0YSkpO1xufVxuZXhwb3J0cy5rZWNjYWsyNTYgPSBrZWNjYWsyNTY7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/keccak256.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/networks.js":
/*!***********************************************!*\
  !*** ./node_modules/ethers/utils/networks.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nfunction ethDefaultProvider(network) {\n    return function (providers) {\n        var providerList = [];\n        if (providers.InfuraProvider) {\n            providerList.push(new providers.InfuraProvider(network));\n        }\n        if (providers.EtherscanProvider) {\n            providerList.push(new providers.EtherscanProvider(network));\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            return new providers.FallbackProvider(providerList);\n            ;\n        }\n        return providerList[0];\n    };\n}\nfunction etcDefaultProvider(url, network) {\n    return function (providers) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n}\nvar homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider('homestead')\n};\nvar ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider('ropsten')\n};\nvar networks = {\n    unspecified: {\n        chainId: 0,\n        name: 'unspecified'\n    },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: {\n        chainId: 2,\n        name: 'morden'\n    },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: 'rinkeby',\n        _defaultProvider: ethDefaultProvider('rinkeby')\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider('goerli')\n    },\n    kovan: {\n        chainId: 42,\n        name: 'kovan',\n        _defaultProvider: ethDefaultProvider('kovan')\n    },\n    classic: {\n        chainId: 61,\n        name: 'classic',\n        _defaultProvider: etcDefaultProvider('https://web3.gastracker.io', 'classic')\n    },\n    classicTestnet: {\n        chainId: 62,\n        name: 'classicTestnet',\n        _defaultProvider: etcDefaultProvider('https://web3.gastracker.io/morden', 'classicTestnet')\n    }\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nfunction getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === 'number') {\n        for (var name_1 in networks) {\n            var n_1 = networks[name_1];\n            if (n_1.chainId === network) {\n                return {\n                    name: n_1.name,\n                    chainId: n_1.chainId,\n                    ensAddress: (n_1.ensAddress || null),\n                    _defaultProvider: (n_1._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: 'unknown'\n        };\n    }\n    if (typeof (network) === 'string') {\n        var n_2 = networks[network];\n        if (n_2 == null) {\n            return null;\n        }\n        return {\n            name: n_2.name,\n            chainId: n_2.chainId,\n            ensAddress: n_2.ensAddress,\n            _defaultProvider: (n_2._defaultProvider || null)\n        };\n    }\n    var n = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!n) {\n        if (typeof (network.chainId) !== 'number') {\n            errors.throwError('invalid network chainId', errors.INVALID_ARGUMENT, { arg: 'network', value: network });\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== n.chainId) {\n        errors.throwError('network chainId mismatch', errors.INVALID_ARGUMENT, { arg: 'network', value: network });\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: n.chainId,\n        ensAddress: (network.ensAddress || n.ensAddress || null),\n        _defaultProvider: (network._defaultProvider || n._defaultProvider || null)\n    };\n}\nexports.getNetwork = getNetwork;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL25ldHdvcmtzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLG1CQUFPLENBQUMsa0RBQVc7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBLG9GQUFvRixnQ0FBZ0M7QUFDcEg7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFO0FBQzVFO0FBQ0EsaUZBQWlGLGdDQUFnQztBQUNqSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL25ldHdvcmtzLmpzP2JjNjgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIHJlc3VsdFtrXSA9IG1vZFtrXTtcbiAgICByZXN1bHRbXCJkZWZhdWx0XCJdID0gbW9kO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGVycm9ycyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi4vZXJyb3JzXCIpKTtcbmZ1bmN0aW9uIGV0aERlZmF1bHRQcm92aWRlcihuZXR3b3JrKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChwcm92aWRlcnMpIHtcbiAgICAgICAgdmFyIHByb3ZpZGVyTGlzdCA9IFtdO1xuICAgICAgICBpZiAocHJvdmlkZXJzLkluZnVyYVByb3ZpZGVyKSB7XG4gICAgICAgICAgICBwcm92aWRlckxpc3QucHVzaChuZXcgcHJvdmlkZXJzLkluZnVyYVByb3ZpZGVyKG5ldHdvcmspKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvdmlkZXJzLkV0aGVyc2NhblByb3ZpZGVyKSB7XG4gICAgICAgICAgICBwcm92aWRlckxpc3QucHVzaChuZXcgcHJvdmlkZXJzLkV0aGVyc2NhblByb3ZpZGVyKG5ldHdvcmspKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvdmlkZXJMaXN0Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3ZpZGVycy5GYWxsYmFja1Byb3ZpZGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IHByb3ZpZGVycy5GYWxsYmFja1Byb3ZpZGVyKHByb3ZpZGVyTGlzdCk7XG4gICAgICAgICAgICA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHByb3ZpZGVyTGlzdFswXTtcbiAgICB9O1xufVxuZnVuY3Rpb24gZXRjRGVmYXVsdFByb3ZpZGVyKHVybCwgbmV0d29yaykge1xuICAgIHJldHVybiBmdW5jdGlvbiAocHJvdmlkZXJzKSB7XG4gICAgICAgIGlmIChwcm92aWRlcnMuSnNvblJwY1Byb3ZpZGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IHByb3ZpZGVycy5Kc29uUnBjUHJvdmlkZXIodXJsLCBuZXR3b3JrKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9O1xufVxudmFyIGhvbWVzdGVhZCA9IHtcbiAgICBjaGFpbklkOiAxLFxuICAgIGVuc0FkZHJlc3M6IFwiMHgwMDAwMDAwMDAwMEMyRTA3NGVDNjlBMGRGYjI5OTdCQTZDN2QyZTFlXCIsXG4gICAgbmFtZTogXCJob21lc3RlYWRcIixcbiAgICBfZGVmYXVsdFByb3ZpZGVyOiBldGhEZWZhdWx0UHJvdmlkZXIoJ2hvbWVzdGVhZCcpXG59O1xudmFyIHJvcHN0ZW4gPSB7XG4gICAgY2hhaW5JZDogMyxcbiAgICBlbnNBZGRyZXNzOiBcIjB4MDAwMDAwMDAwMDBDMkUwNzRlQzY5QTBkRmIyOTk3QkE2QzdkMmUxZVwiLFxuICAgIG5hbWU6IFwicm9wc3RlblwiLFxuICAgIF9kZWZhdWx0UHJvdmlkZXI6IGV0aERlZmF1bHRQcm92aWRlcigncm9wc3RlbicpXG59O1xudmFyIG5ldHdvcmtzID0ge1xuICAgIHVuc3BlY2lmaWVkOiB7XG4gICAgICAgIGNoYWluSWQ6IDAsXG4gICAgICAgIG5hbWU6ICd1bnNwZWNpZmllZCdcbiAgICB9LFxuICAgIGhvbWVzdGVhZDogaG9tZXN0ZWFkLFxuICAgIG1haW5uZXQ6IGhvbWVzdGVhZCxcbiAgICBtb3JkZW46IHtcbiAgICAgICAgY2hhaW5JZDogMixcbiAgICAgICAgbmFtZTogJ21vcmRlbidcbiAgICB9LFxuICAgIHJvcHN0ZW46IHJvcHN0ZW4sXG4gICAgdGVzdG5ldDogcm9wc3RlbixcbiAgICByaW5rZWJ5OiB7XG4gICAgICAgIGNoYWluSWQ6IDQsXG4gICAgICAgIGVuc0FkZHJlc3M6IFwiMHgwMDAwMDAwMDAwMEMyRTA3NGVDNjlBMGRGYjI5OTdCQTZDN2QyZTFlXCIsXG4gICAgICAgIG5hbWU6ICdyaW5rZWJ5JyxcbiAgICAgICAgX2RlZmF1bHRQcm92aWRlcjogZXRoRGVmYXVsdFByb3ZpZGVyKCdyaW5rZWJ5JylcbiAgICB9LFxuICAgIGdvZXJsaToge1xuICAgICAgICBjaGFpbklkOiA1LFxuICAgICAgICBlbnNBZGRyZXNzOiBcIjB4MDAwMDAwMDAwMDBDMkUwNzRlQzY5QTBkRmIyOTk3QkE2QzdkMmUxZVwiLFxuICAgICAgICBuYW1lOiBcImdvZXJsaVwiLFxuICAgICAgICBfZGVmYXVsdFByb3ZpZGVyOiBldGhEZWZhdWx0UHJvdmlkZXIoJ2dvZXJsaScpXG4gICAgfSxcbiAgICBrb3Zhbjoge1xuICAgICAgICBjaGFpbklkOiA0MixcbiAgICAgICAgbmFtZTogJ2tvdmFuJyxcbiAgICAgICAgX2RlZmF1bHRQcm92aWRlcjogZXRoRGVmYXVsdFByb3ZpZGVyKCdrb3ZhbicpXG4gICAgfSxcbiAgICBjbGFzc2ljOiB7XG4gICAgICAgIGNoYWluSWQ6IDYxLFxuICAgICAgICBuYW1lOiAnY2xhc3NpYycsXG4gICAgICAgIF9kZWZhdWx0UHJvdmlkZXI6IGV0Y0RlZmF1bHRQcm92aWRlcignaHR0cHM6Ly93ZWIzLmdhc3RyYWNrZXIuaW8nLCAnY2xhc3NpYycpXG4gICAgfSxcbiAgICBjbGFzc2ljVGVzdG5ldDoge1xuICAgICAgICBjaGFpbklkOiA2MixcbiAgICAgICAgbmFtZTogJ2NsYXNzaWNUZXN0bmV0JyxcbiAgICAgICAgX2RlZmF1bHRQcm92aWRlcjogZXRjRGVmYXVsdFByb3ZpZGVyKCdodHRwczovL3dlYjMuZ2FzdHJhY2tlci5pby9tb3JkZW4nLCAnY2xhc3NpY1Rlc3RuZXQnKVxuICAgIH1cbn07XG4vKipcbiAqICBnZXROZXR3b3JrXG4gKlxuICogIENvbnZlcnRzIGEgbmFtZWQgY29tbW9uIG5ldHdvcmtzIG9yIGNoYWluIElEIChuZXR3b3JrIElEKSB0byBhIE5ldHdvcmtcbiAqICBhbmQgdmVyaWZpZXMgYSBuZXR3b3JrIGlzIGEgdmFsaWQgTmV0d29yay4uXG4gKi9cbmZ1bmN0aW9uIGdldE5ldHdvcmsobmV0d29yaykge1xuICAgIC8vIE5vIG5ldHdvcmsgKG51bGwpXG4gICAgaWYgKG5ldHdvcmsgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiAobmV0d29yaykgPT09ICdudW1iZXInKSB7XG4gICAgICAgIGZvciAodmFyIG5hbWVfMSBpbiBuZXR3b3Jrcykge1xuICAgICAgICAgICAgdmFyIG5fMSA9IG5ldHdvcmtzW25hbWVfMV07XG4gICAgICAgICAgICBpZiAobl8xLmNoYWluSWQgPT09IG5ldHdvcmspIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBuXzEubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogbl8xLmNoYWluSWQsXG4gICAgICAgICAgICAgICAgICAgIGVuc0FkZHJlc3M6IChuXzEuZW5zQWRkcmVzcyB8fCBudWxsKSxcbiAgICAgICAgICAgICAgICAgICAgX2RlZmF1bHRQcm92aWRlcjogKG5fMS5fZGVmYXVsdFByb3ZpZGVyIHx8IG51bGwpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY2hhaW5JZDogbmV0d29yayxcbiAgICAgICAgICAgIG5hbWU6ICd1bmtub3duJ1xuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIChuZXR3b3JrKSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgdmFyIG5fMiA9IG5ldHdvcmtzW25ldHdvcmtdO1xuICAgICAgICBpZiAobl8yID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiBuXzIubmFtZSxcbiAgICAgICAgICAgIGNoYWluSWQ6IG5fMi5jaGFpbklkLFxuICAgICAgICAgICAgZW5zQWRkcmVzczogbl8yLmVuc0FkZHJlc3MsXG4gICAgICAgICAgICBfZGVmYXVsdFByb3ZpZGVyOiAobl8yLl9kZWZhdWx0UHJvdmlkZXIgfHwgbnVsbClcbiAgICAgICAgfTtcbiAgICB9XG4gICAgdmFyIG4gPSBuZXR3b3Jrc1tuZXR3b3JrLm5hbWVdO1xuICAgIC8vIE5vdCBhIHN0YW5kYXJkIG5ldHdvcms7IGNoZWNrIHRoYXQgaXQgaXMgYSB2YWxpZCBuZXR3b3JrIGluIGdlbmVyYWxcbiAgICBpZiAoIW4pIHtcbiAgICAgICAgaWYgKHR5cGVvZiAobmV0d29yay5jaGFpbklkKSAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIGVycm9ycy50aHJvd0Vycm9yKCdpbnZhbGlkIG5ldHdvcmsgY2hhaW5JZCcsIGVycm9ycy5JTlZBTElEX0FSR1VNRU5ULCB7IGFyZzogJ25ldHdvcmsnLCB2YWx1ZTogbmV0d29yayB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV0d29yaztcbiAgICB9XG4gICAgLy8gTWFrZSBzdXJlIHRoZSBjaGFpbklkIG1hdGNoZXMgdGhlIGV4cGVjdGVkIG5ldHdvcmsgY2hhaW5JZCAob3IgaXMgMDsgZGlzYWJsZSBFSVAtMTU1KVxuICAgIGlmIChuZXR3b3JrLmNoYWluSWQgIT09IDAgJiYgbmV0d29yay5jaGFpbklkICE9PSBuLmNoYWluSWQpIHtcbiAgICAgICAgZXJyb3JzLnRocm93RXJyb3IoJ25ldHdvcmsgY2hhaW5JZCBtaXNtYXRjaCcsIGVycm9ycy5JTlZBTElEX0FSR1VNRU5ULCB7IGFyZzogJ25ldHdvcmsnLCB2YWx1ZTogbmV0d29yayB9KTtcbiAgICB9XG4gICAgLy8gU3RhbmRhcmQgTmV0d29yayAoYWxsb3cgb3ZlcnJpZGluZyB0aGUgRU5TIGFkZHJlc3MpXG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogbmV0d29yay5uYW1lLFxuICAgICAgICBjaGFpbklkOiBuLmNoYWluSWQsXG4gICAgICAgIGVuc0FkZHJlc3M6IChuZXR3b3JrLmVuc0FkZHJlc3MgfHwgbi5lbnNBZGRyZXNzIHx8IG51bGwpLFxuICAgICAgICBfZGVmYXVsdFByb3ZpZGVyOiAobmV0d29yay5fZGVmYXVsdFByb3ZpZGVyIHx8IG4uX2RlZmF1bHRQcm92aWRlciB8fCBudWxsKVxuICAgIH07XG59XG5leHBvcnRzLmdldE5ldHdvcmsgPSBnZXROZXR3b3JrO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/networks.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/pbkdf2.js":
/*!*********************************************!*\
  !*** ./node_modules/ethers/utils/pbkdf2.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nfunction bufferify(value) {\n    return Buffer.from(bytes_1.arrayify(value));\n}\nfunction pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    return bytes_1.arrayify(crypto_1.pbkdf2Sync(bufferify(password), bufferify(salt), iterations, keylen, hashAlgorithm));\n}\nexports.pbkdf2 = pbkdf2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3Bia2RmMi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLG1CQUFPLENBQUMsc0JBQVE7QUFDL0IsY0FBYyxtQkFBTyxDQUFDLHFEQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3Bia2RmMi5qcz81NzM5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xuZnVuY3Rpb24gYnVmZmVyaWZ5KHZhbHVlKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGJ5dGVzXzEuYXJyYXlpZnkodmFsdWUpKTtcbn1cbmZ1bmN0aW9uIHBia2RmMihwYXNzd29yZCwgc2FsdCwgaXRlcmF0aW9ucywga2V5bGVuLCBoYXNoQWxnb3JpdGhtKSB7XG4gICAgcmV0dXJuIGJ5dGVzXzEuYXJyYXlpZnkoY3J5cHRvXzEucGJrZGYyU3luYyhidWZmZXJpZnkocGFzc3dvcmQpLCBidWZmZXJpZnkoc2FsdCksIGl0ZXJhdGlvbnMsIGtleWxlbiwgaGFzaEFsZ29yaXRobSkpO1xufVxuZXhwb3J0cy5wYmtkZjIgPSBwYmtkZjI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/pbkdf2.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/properties.js":
/*!*************************************************!*\
  !*** ./node_modules/ethers/utils/properties.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nfunction defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\nexports.defineReadOnly = defineReadOnly;\n// There are some issues with instanceof with npm link, so we use this\n// to ensure types are what we expect.\nfunction setType(object, type) {\n    Object.defineProperty(object, '_ethersType', { configurable: false, value: type, writable: false });\n}\nexports.setType = setType;\nfunction isType(object, type) {\n    return (object && object._ethersType === type);\n}\nexports.isType = isType;\nfunction resolveProperties(object) {\n    var result = {};\n    var promises = [];\n    Object.keys(object).forEach(function (key) {\n        var value = object[key];\n        if (value instanceof Promise) {\n            promises.push(value.then(function (value) {\n                result[key] = value;\n                return null;\n            }));\n        }\n        else {\n            result[key] = value;\n        }\n    });\n    return Promise.all(promises).then(function () {\n        return result;\n    });\n}\nexports.resolveProperties = resolveProperties;\nfunction checkProperties(object, properties) {\n    if (!object || typeof (object) !== 'object') {\n        errors.throwError('invalid object', errors.INVALID_ARGUMENT, {\n            argument: 'object',\n            value: object\n        });\n    }\n    Object.keys(object).forEach(function (key) {\n        if (!properties[key]) {\n            errors.throwError('invalid object key - ' + key, errors.INVALID_ARGUMENT, {\n                argument: 'transaction',\n                value: object,\n                key: key\n            });\n        }\n    });\n}\nexports.checkProperties = checkProperties;\nfunction shallowCopy(object) {\n    var result = {};\n    for (var key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nexports.shallowCopy = shallowCopy;\nvar opaque = { boolean: true, number: true, string: true };\nfunction deepCopy(object, frozen) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        var result = object.map(function (item) { return deepCopy(item, frozen); });\n        if (frozen) {\n            Object.freeze(result);\n        }\n        return result;\n    }\n    if (typeof (object) === 'object') {\n        // Some internal objects, which are already immutable\n        if (isType(object, 'BigNumber')) {\n            return object;\n        }\n        if (isType(object, 'Description')) {\n            return object;\n        }\n        if (isType(object, 'Indexed')) {\n            return object;\n        }\n        var result = {};\n        for (var key in object) {\n            var value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value, frozen));\n        }\n        if (frozen) {\n            Object.freeze(result);\n        }\n        return result;\n    }\n    // The function type is also immutable, so safe to copy by assignment\n    if (typeof (object) === 'function') {\n        return object;\n    }\n    throw new Error('Cannot deepCopy ' + typeof (object));\n}\nexports.deepCopy = deepCopy;\n// See: https://github.com/isaacs/inherits/blob/master/inherits_browser.js\nfunction inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n}\nfunction inheritable(parent) {\n    return function (child) {\n        inherits(child, parent);\n        defineReadOnly(child, 'inherits', inheritable(child));\n    };\n}\nexports.inheritable = inheritable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3Byb3BlcnRpZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsbUJBQU8sQ0FBQyxrREFBVztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxtREFBbUQ7QUFDdEc7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELGdDQUFnQztBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2V0aGVycy91dGlscy9wcm9wZXJ0aWVzLmpzP2M2ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIHJlc3VsdFtrXSA9IG1vZFtrXTtcbiAgICByZXN1bHRbXCJkZWZhdWx0XCJdID0gbW9kO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGVycm9ycyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi4vZXJyb3JzXCIpKTtcbmZ1bmN0aW9uIGRlZmluZVJlYWRPbmx5KG9iamVjdCwgbmFtZSwgdmFsdWUpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgIH0pO1xufVxuZXhwb3J0cy5kZWZpbmVSZWFkT25seSA9IGRlZmluZVJlYWRPbmx5O1xuLy8gVGhlcmUgYXJlIHNvbWUgaXNzdWVzIHdpdGggaW5zdGFuY2VvZiB3aXRoIG5wbSBsaW5rLCBzbyB3ZSB1c2UgdGhpc1xuLy8gdG8gZW5zdXJlIHR5cGVzIGFyZSB3aGF0IHdlIGV4cGVjdC5cbmZ1bmN0aW9uIHNldFR5cGUob2JqZWN0LCB0eXBlKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iamVjdCwgJ19ldGhlcnNUeXBlJywgeyBjb25maWd1cmFibGU6IGZhbHNlLCB2YWx1ZTogdHlwZSwgd3JpdGFibGU6IGZhbHNlIH0pO1xufVxuZXhwb3J0cy5zZXRUeXBlID0gc2V0VHlwZTtcbmZ1bmN0aW9uIGlzVHlwZShvYmplY3QsIHR5cGUpIHtcbiAgICByZXR1cm4gKG9iamVjdCAmJiBvYmplY3QuX2V0aGVyc1R5cGUgPT09IHR5cGUpO1xufVxuZXhwb3J0cy5pc1R5cGUgPSBpc1R5cGU7XG5mdW5jdGlvbiByZXNvbHZlUHJvcGVydGllcyhvYmplY3QpIHtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgdmFyIHByb21pc2VzID0gW107XG4gICAgT2JqZWN0LmtleXMob2JqZWN0KS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgdmFyIHZhbHVlID0gb2JqZWN0W2tleV07XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godmFsdWUudGhlbihmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICByZXN1bHRba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSk7XG59XG5leHBvcnRzLnJlc29sdmVQcm9wZXJ0aWVzID0gcmVzb2x2ZVByb3BlcnRpZXM7XG5mdW5jdGlvbiBjaGVja1Byb3BlcnRpZXMob2JqZWN0LCBwcm9wZXJ0aWVzKSB7XG4gICAgaWYgKCFvYmplY3QgfHwgdHlwZW9mIChvYmplY3QpICE9PSAnb2JqZWN0Jykge1xuICAgICAgICBlcnJvcnMudGhyb3dFcnJvcignaW52YWxpZCBvYmplY3QnLCBlcnJvcnMuSU5WQUxJRF9BUkdVTUVOVCwge1xuICAgICAgICAgICAgYXJndW1lbnQ6ICdvYmplY3QnLFxuICAgICAgICAgICAgdmFsdWU6IG9iamVjdFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgT2JqZWN0LmtleXMob2JqZWN0KS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKCFwcm9wZXJ0aWVzW2tleV0pIHtcbiAgICAgICAgICAgIGVycm9ycy50aHJvd0Vycm9yKCdpbnZhbGlkIG9iamVjdCBrZXkgLSAnICsga2V5LCBlcnJvcnMuSU5WQUxJRF9BUkdVTUVOVCwge1xuICAgICAgICAgICAgICAgIGFyZ3VtZW50OiAndHJhbnNhY3Rpb24nLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBvYmplY3QsXG4gICAgICAgICAgICAgICAga2V5OiBrZXlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnRzLmNoZWNrUHJvcGVydGllcyA9IGNoZWNrUHJvcGVydGllcztcbmZ1bmN0aW9uIHNoYWxsb3dDb3B5KG9iamVjdCkge1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gb2JqZWN0W2tleV07XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLnNoYWxsb3dDb3B5ID0gc2hhbGxvd0NvcHk7XG52YXIgb3BhcXVlID0geyBib29sZWFuOiB0cnVlLCBudW1iZXI6IHRydWUsIHN0cmluZzogdHJ1ZSB9O1xuZnVuY3Rpb24gZGVlcENvcHkob2JqZWN0LCBmcm96ZW4pIHtcbiAgICAvLyBPcGFxdWUgb2JqZWN0cyBhcmUgbm90IG11dGFibGUsIHNvIHNhZmUgdG8gY29weSBieSBhc3NpZ25tZW50XG4gICAgaWYgKG9iamVjdCA9PT0gdW5kZWZpbmVkIHx8IG9iamVjdCA9PT0gbnVsbCB8fCBvcGFxdWVbdHlwZW9mIChvYmplY3QpXSkge1xuICAgICAgICByZXR1cm4gb2JqZWN0O1xuICAgIH1cbiAgICAvLyBBcnJheXMgYXJlIG11dGFibGUsIHNvIHdlIG5lZWQgdG8gY3JlYXRlIGEgY29weVxuICAgIGlmIChBcnJheS5pc0FycmF5KG9iamVjdCkpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IG9iamVjdC5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsgcmV0dXJuIGRlZXBDb3B5KGl0ZW0sIGZyb3plbik7IH0pO1xuICAgICAgICBpZiAoZnJvemVuKSB7XG4gICAgICAgICAgICBPYmplY3QuZnJlZXplKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiAob2JqZWN0KSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgLy8gU29tZSBpbnRlcm5hbCBvYmplY3RzLCB3aGljaCBhcmUgYWxyZWFkeSBpbW11dGFibGVcbiAgICAgICAgaWYgKGlzVHlwZShvYmplY3QsICdCaWdOdW1iZXInKSkge1xuICAgICAgICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNUeXBlKG9iamVjdCwgJ0Rlc2NyaXB0aW9uJykpIHtcbiAgICAgICAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzVHlwZShvYmplY3QsICdJbmRleGVkJykpIHtcbiAgICAgICAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBvYmplY3Rba2V5XTtcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWZpbmVSZWFkT25seShyZXN1bHQsIGtleSwgZGVlcENvcHkodmFsdWUsIGZyb3plbikpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmcm96ZW4pIHtcbiAgICAgICAgICAgIE9iamVjdC5mcmVlemUocmVzdWx0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvLyBUaGUgZnVuY3Rpb24gdHlwZSBpcyBhbHNvIGltbXV0YWJsZSwgc28gc2FmZSB0byBjb3B5IGJ5IGFzc2lnbm1lbnRcbiAgICBpZiAodHlwZW9mIChvYmplY3QpID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGRlZXBDb3B5ICcgKyB0eXBlb2YgKG9iamVjdCkpO1xufVxuZXhwb3J0cy5kZWVwQ29weSA9IGRlZXBDb3B5O1xuLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vaXNhYWNzL2luaGVyaXRzL2Jsb2IvbWFzdGVyL2luaGVyaXRzX2Jyb3dzZXIuanNcbmZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikge1xuICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yO1xuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZnVuY3Rpb24gaW5oZXJpdGFibGUocGFyZW50KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpbmhlcml0cyhjaGlsZCwgcGFyZW50KTtcbiAgICAgICAgZGVmaW5lUmVhZE9ubHkoY2hpbGQsICdpbmhlcml0cycsIGluaGVyaXRhYmxlKGNoaWxkKSk7XG4gICAgfTtcbn1cbmV4cG9ydHMuaW5oZXJpdGFibGUgPSBpbmhlcml0YWJsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/properties.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/random-bytes.js":
/*!***************************************************!*\
  !*** ./node_modules/ethers/utils/random-bytes.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nfunction randomBytes(length) {\n    return bytes_1.arrayify(crypto_1.randomBytes(length));\n}\nexports.randomBytes = randomBytes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3JhbmRvbS1ieXRlcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLG1CQUFPLENBQUMscURBQVM7QUFDL0IsZUFBZSxtQkFBTyxDQUFDLHNCQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy9ldGhlcnMvdXRpbHMvcmFuZG9tLWJ5dGVzLmpzPzIzYWUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbnZhciBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5mdW5jdGlvbiByYW5kb21CeXRlcyhsZW5ndGgpIHtcbiAgICByZXR1cm4gYnl0ZXNfMS5hcnJheWlmeShjcnlwdG9fMS5yYW5kb21CeXRlcyhsZW5ndGgpKTtcbn1cbmV4cG9ydHMucmFuZG9tQnl0ZXMgPSByYW5kb21CeXRlcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/random-bytes.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/rlp.js":
/*!******************************************!*\
  !*** ./node_modules/ethers/utils/rlp.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n//See: https://github.com/ethereum/wiki/wiki/RLP\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nfunction arrayifyInteger(value) {\n    var result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    var result = 0;\n    for (var i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        var payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        var length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    var data = Array.prototype.slice.call(bytes_1.arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    var length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nfunction encode(object) {\n    return bytes_1.hexlify(_encode(object));\n}\nexports.encode = encode;\nfunction _decodeChildren(data, offset, childOffset, length) {\n    var result = [];\n    while (childOffset < offset + 1 + length) {\n        var decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            throw new Error('invalid rlp');\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        throw new Error('invalid rlp data');\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        var lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('too short');\n        }\n        var length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error('to short');\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        var length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        var lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        var length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: bytes_1.hexlify(data[offset]) };\n}\nfunction decode(data) {\n    var bytes = bytes_1.arrayify(data);\n    var decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        throw new Error('invalid rlp data');\n    }\n    return decoded.result;\n}\nexports.decode = decode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3JscC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsbUJBQU8sQ0FBQyxxREFBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2V0aGVycy91dGlscy9ybHAuanM/Y2E0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vd2lraS93aWtpL1JMUFxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbmZ1bmN0aW9uIGFycmF5aWZ5SW50ZWdlcih2YWx1ZSkge1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICB3aGlsZSAodmFsdWUpIHtcbiAgICAgICAgcmVzdWx0LnVuc2hpZnQodmFsdWUgJiAweGZmKTtcbiAgICAgICAgdmFsdWUgPj49IDg7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiB1bmFycmF5aWZ5SW50ZWdlcihkYXRhLCBvZmZzZXQsIGxlbmd0aCkge1xuICAgIHZhciByZXN1bHQgPSAwO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVzdWx0ID0gKHJlc3VsdCAqIDI1NikgKyBkYXRhW29mZnNldCArIGldO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gX2VuY29kZShvYmplY3QpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShvYmplY3QpKSB7XG4gICAgICAgIHZhciBwYXlsb2FkID0gW107XG4gICAgICAgIG9iamVjdC5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICAgICAgcGF5bG9hZCA9IHBheWxvYWQuY29uY2F0KF9lbmNvZGUoY2hpbGQpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChwYXlsb2FkLmxlbmd0aCA8PSA1NSkge1xuICAgICAgICAgICAgcGF5bG9hZC51bnNoaWZ0KDB4YzAgKyBwYXlsb2FkLmxlbmd0aCk7XG4gICAgICAgICAgICByZXR1cm4gcGF5bG9hZDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXlpZnlJbnRlZ2VyKHBheWxvYWQubGVuZ3RoKTtcbiAgICAgICAgbGVuZ3RoLnVuc2hpZnQoMHhmNyArIGxlbmd0aC5sZW5ndGgpO1xuICAgICAgICByZXR1cm4gbGVuZ3RoLmNvbmNhdChwYXlsb2FkKTtcbiAgICB9XG4gICAgdmFyIGRhdGEgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChieXRlc18xLmFycmF5aWZ5KG9iamVjdCkpO1xuICAgIGlmIChkYXRhLmxlbmd0aCA9PT0gMSAmJiBkYXRhWzBdIDw9IDB4N2YpIHtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGVsc2UgaWYgKGRhdGEubGVuZ3RoIDw9IDU1KSB7XG4gICAgICAgIGRhdGEudW5zaGlmdCgweDgwICsgZGF0YS5sZW5ndGgpO1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgdmFyIGxlbmd0aCA9IGFycmF5aWZ5SW50ZWdlcihkYXRhLmxlbmd0aCk7XG4gICAgbGVuZ3RoLnVuc2hpZnQoMHhiNyArIGxlbmd0aC5sZW5ndGgpO1xuICAgIHJldHVybiBsZW5ndGguY29uY2F0KGRhdGEpO1xufVxuZnVuY3Rpb24gZW5jb2RlKG9iamVjdCkge1xuICAgIHJldHVybiBieXRlc18xLmhleGxpZnkoX2VuY29kZShvYmplY3QpKTtcbn1cbmV4cG9ydHMuZW5jb2RlID0gZW5jb2RlO1xuZnVuY3Rpb24gX2RlY29kZUNoaWxkcmVuKGRhdGEsIG9mZnNldCwgY2hpbGRPZmZzZXQsIGxlbmd0aCkge1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICB3aGlsZSAoY2hpbGRPZmZzZXQgPCBvZmZzZXQgKyAxICsgbGVuZ3RoKSB7XG4gICAgICAgIHZhciBkZWNvZGVkID0gX2RlY29kZShkYXRhLCBjaGlsZE9mZnNldCk7XG4gICAgICAgIHJlc3VsdC5wdXNoKGRlY29kZWQucmVzdWx0KTtcbiAgICAgICAgY2hpbGRPZmZzZXQgKz0gZGVjb2RlZC5jb25zdW1lZDtcbiAgICAgICAgaWYgKGNoaWxkT2Zmc2V0ID4gb2Zmc2V0ICsgMSArIGxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHJscCcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IGNvbnN1bWVkOiAoMSArIGxlbmd0aCksIHJlc3VsdDogcmVzdWx0IH07XG59XG4vLyByZXR1cm5zIHsgY29uc3VtZWQ6IG51bWJlciwgcmVzdWx0OiBPYmplY3QgfVxuZnVuY3Rpb24gX2RlY29kZShkYXRhLCBvZmZzZXQpIHtcbiAgICBpZiAoZGF0YS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHJscCBkYXRhJyk7XG4gICAgfVxuICAgIC8vIEFycmF5IHdpdGggZXh0cmEgbGVuZ3RoIHByZWZpeFxuICAgIGlmIChkYXRhW29mZnNldF0gPj0gMHhmOCkge1xuICAgICAgICB2YXIgbGVuZ3RoTGVuZ3RoID0gZGF0YVtvZmZzZXRdIC0gMHhmNztcbiAgICAgICAgaWYgKG9mZnNldCArIDEgKyBsZW5ndGhMZW5ndGggPiBkYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd0b28gc2hvcnQnKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbGVuZ3RoID0gdW5hcnJheWlmeUludGVnZXIoZGF0YSwgb2Zmc2V0ICsgMSwgbGVuZ3RoTGVuZ3RoKTtcbiAgICAgICAgaWYgKG9mZnNldCArIDEgKyBsZW5ndGhMZW5ndGggKyBsZW5ndGggPiBkYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd0byBzaG9ydCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfZGVjb2RlQ2hpbGRyZW4oZGF0YSwgb2Zmc2V0LCBvZmZzZXQgKyAxICsgbGVuZ3RoTGVuZ3RoLCBsZW5ndGhMZW5ndGggKyBsZW5ndGgpO1xuICAgIH1cbiAgICBlbHNlIGlmIChkYXRhW29mZnNldF0gPj0gMHhjMCkge1xuICAgICAgICB2YXIgbGVuZ3RoID0gZGF0YVtvZmZzZXRdIC0gMHhjMDtcbiAgICAgICAgaWYgKG9mZnNldCArIDEgKyBsZW5ndGggPiBkYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHJscCBkYXRhJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9kZWNvZGVDaGlsZHJlbihkYXRhLCBvZmZzZXQsIG9mZnNldCArIDEsIGxlbmd0aCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGRhdGFbb2Zmc2V0XSA+PSAweGI4KSB7XG4gICAgICAgIHZhciBsZW5ndGhMZW5ndGggPSBkYXRhW29mZnNldF0gLSAweGI3O1xuICAgICAgICBpZiAob2Zmc2V0ICsgMSArIGxlbmd0aExlbmd0aCA+IGRhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgcmxwIGRhdGEnKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbGVuZ3RoID0gdW5hcnJheWlmeUludGVnZXIoZGF0YSwgb2Zmc2V0ICsgMSwgbGVuZ3RoTGVuZ3RoKTtcbiAgICAgICAgaWYgKG9mZnNldCArIDEgKyBsZW5ndGhMZW5ndGggKyBsZW5ndGggPiBkYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHJscCBkYXRhJyk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJlc3VsdCA9IGJ5dGVzXzEuaGV4bGlmeShkYXRhLnNsaWNlKG9mZnNldCArIDEgKyBsZW5ndGhMZW5ndGgsIG9mZnNldCArIDEgKyBsZW5ndGhMZW5ndGggKyBsZW5ndGgpKTtcbiAgICAgICAgcmV0dXJuIHsgY29uc3VtZWQ6ICgxICsgbGVuZ3RoTGVuZ3RoICsgbGVuZ3RoKSwgcmVzdWx0OiByZXN1bHQgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZGF0YVtvZmZzZXRdID49IDB4ODApIHtcbiAgICAgICAgdmFyIGxlbmd0aCA9IGRhdGFbb2Zmc2V0XSAtIDB4ODA7XG4gICAgICAgIGlmIChvZmZzZXQgKyAxICsgbGVuZ3RoID4gZGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBybHAgZGF0YScpO1xuICAgICAgICB9XG4gICAgICAgIHZhciByZXN1bHQgPSBieXRlc18xLmhleGxpZnkoZGF0YS5zbGljZShvZmZzZXQgKyAxLCBvZmZzZXQgKyAxICsgbGVuZ3RoKSk7XG4gICAgICAgIHJldHVybiB7IGNvbnN1bWVkOiAoMSArIGxlbmd0aCksIHJlc3VsdDogcmVzdWx0IH07XG4gICAgfVxuICAgIHJldHVybiB7IGNvbnN1bWVkOiAxLCByZXN1bHQ6IGJ5dGVzXzEuaGV4bGlmeShkYXRhW29mZnNldF0pIH07XG59XG5mdW5jdGlvbiBkZWNvZGUoZGF0YSkge1xuICAgIHZhciBieXRlcyA9IGJ5dGVzXzEuYXJyYXlpZnkoZGF0YSk7XG4gICAgdmFyIGRlY29kZWQgPSBfZGVjb2RlKGJ5dGVzLCAwKTtcbiAgICBpZiAoZGVjb2RlZC5jb25zdW1lZCAhPT0gYnl0ZXMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBybHAgZGF0YScpO1xuICAgIH1cbiAgICByZXR1cm4gZGVjb2RlZC5yZXN1bHQ7XG59XG5leHBvcnRzLmRlY29kZSA9IGRlY29kZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/rlp.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/secp256k1.js":
/*!************************************************!*\
  !*** ./node_modules/ethers/utils/secp256k1.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar elliptic_1 = __webpack_require__(/*! elliptic */ \"elliptic\");\nvar address_1 = __webpack_require__(/*! ./address */ \"./node_modules/ethers/utils/address.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/ethers/utils/hash.js\");\nvar keccak256_1 = __webpack_require__(/*! ./keccak256 */ \"./node_modules/ethers/utils/keccak256.js\");\nvar properties_1 = __webpack_require__(/*! ./properties */ \"./node_modules/ethers/utils/properties.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\n///////////////////////////////\nvar _curve = null;\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new elliptic_1.ec('secp256k1');\n    }\n    return _curve;\n}\nvar KeyPair = /** @class */ (function () {\n    function KeyPair(privateKey) {\n        var keyPair = getCurve().keyFromPrivate(bytes_1.arrayify(privateKey));\n        properties_1.defineReadOnly(this, 'privateKey', bytes_1.hexlify(keyPair.priv.toArray('be', 32)));\n        properties_1.defineReadOnly(this, 'publicKey', '0x' + keyPair.getPublic(false, 'hex'));\n        properties_1.defineReadOnly(this, 'compressedPublicKey', '0x' + keyPair.getPublic(true, 'hex'));\n        properties_1.defineReadOnly(this, 'publicKeyBytes', keyPair.getPublic().encode(null, true));\n    }\n    KeyPair.prototype.sign = function (digest) {\n        var keyPair = getCurve().keyFromPrivate(bytes_1.arrayify(this.privateKey));\n        var signature = keyPair.sign(bytes_1.arrayify(digest), { canonical: true });\n        return {\n            recoveryParam: signature.recoveryParam,\n            r: bytes_1.hexZeroPad('0x' + signature.r.toString(16), 32),\n            s: bytes_1.hexZeroPad('0x' + signature.s.toString(16), 32),\n            v: 27 + signature.recoveryParam\n        };\n    };\n    KeyPair.prototype.computeSharedSecret = function (otherKey) {\n        var keyPair = getCurve().keyFromPrivate(bytes_1.arrayify(this.privateKey));\n        var otherKeyPair = getCurve().keyFromPublic(bytes_1.arrayify(computePublicKey(otherKey)));\n        return bytes_1.hexZeroPad('0x' + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    };\n    KeyPair.prototype._addPoint = function (other) {\n        var p0 = getCurve().keyFromPublic(bytes_1.arrayify(this.publicKey));\n        var p1 = getCurve().keyFromPublic(bytes_1.arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    };\n    return KeyPair;\n}());\nexports.KeyPair = KeyPair;\nfunction computePublicKey(key, compressed) {\n    var bytes = bytes_1.arrayify(key);\n    if (bytes.length === 32) {\n        var keyPair = new KeyPair(bytes);\n        if (compressed) {\n            return keyPair.compressedPublicKey;\n        }\n        return keyPair.publicKey;\n    }\n    else if (bytes.length === 33) {\n        if (compressed) {\n            return bytes_1.hexlify(bytes);\n        }\n        return '0x' + getCurve().keyFromPublic(bytes).getPublic(false, 'hex');\n    }\n    else if (bytes.length === 65) {\n        if (!compressed) {\n            return bytes_1.hexlify(bytes);\n        }\n        return '0x' + getCurve().keyFromPublic(bytes).getPublic(true, 'hex');\n    }\n    errors.throwError('invalid public or private key', errors.INVALID_ARGUMENT, { arg: 'key', value: '[REDACTED]' });\n    return null;\n}\nexports.computePublicKey = computePublicKey;\nfunction computeAddress(key) {\n    // Strip off the leading \"0x04\"\n    var publicKey = '0x' + computePublicKey(key).slice(4);\n    return address_1.getAddress('0x' + keccak256_1.keccak256(publicKey).substring(26));\n}\nexports.computeAddress = computeAddress;\nfunction recoverPublicKey(digest, signature) {\n    var sig = bytes_1.splitSignature(signature);\n    var rs = { r: bytes_1.arrayify(sig.r), s: bytes_1.arrayify(sig.s) };\n    return '0x' + getCurve().recoverPubKey(bytes_1.arrayify(digest), rs, sig.recoveryParam).encode('hex', false);\n}\nexports.recoverPublicKey = recoverPublicKey;\nfunction recoverAddress(digest, signature) {\n    return computeAddress(recoverPublicKey(bytes_1.arrayify(digest), signature));\n}\nexports.recoverAddress = recoverAddress;\nfunction verifyMessage(message, signature) {\n    return recoverAddress(hash_1.hashMessage(message), signature);\n}\nexports.verifyMessage = verifyMessage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3NlY3AyNTZrMS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixtQkFBTyxDQUFDLDBCQUFVO0FBQ25DLGdCQUFnQixtQkFBTyxDQUFDLHlEQUFXO0FBQ25DLGNBQWMsbUJBQU8sQ0FBQyxxREFBUztBQUMvQixhQUFhLG1CQUFPLENBQUMsbURBQVE7QUFDN0Isa0JBQWtCLG1CQUFPLENBQUMsNkRBQWE7QUFDdkMsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWM7QUFDekMsMEJBQTBCLG1CQUFPLENBQUMsa0RBQVc7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLGlCQUFpQjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtGQUFrRixpQ0FBaUM7QUFDbkg7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2V0aGVycy91dGlscy9zZWNwMjU2azEuanM/YTdjMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgcmVzdWx0W2tdID0gbW9kW2tdO1xuICAgIHJlc3VsdFtcImRlZmF1bHRcIl0gPSBtb2Q7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZWxsaXB0aWNfMSA9IHJlcXVpcmUoXCJlbGxpcHRpY1wiKTtcbnZhciBhZGRyZXNzXzEgPSByZXF1aXJlKFwiLi9hZGRyZXNzXCIpO1xudmFyIGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbnZhciBoYXNoXzEgPSByZXF1aXJlKFwiLi9oYXNoXCIpO1xudmFyIGtlY2NhazI1Nl8xID0gcmVxdWlyZShcIi4va2VjY2FrMjU2XCIpO1xudmFyIHByb3BlcnRpZXNfMSA9IHJlcXVpcmUoXCIuL3Byb3BlcnRpZXNcIik7XG52YXIgZXJyb3JzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuLi9lcnJvcnNcIikpO1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xudmFyIF9jdXJ2ZSA9IG51bGw7XG5mdW5jdGlvbiBnZXRDdXJ2ZSgpIHtcbiAgICBpZiAoIV9jdXJ2ZSkge1xuICAgICAgICBfY3VydmUgPSBuZXcgZWxsaXB0aWNfMS5lYygnc2VjcDI1NmsxJyk7XG4gICAgfVxuICAgIHJldHVybiBfY3VydmU7XG59XG52YXIgS2V5UGFpciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBLZXlQYWlyKHByaXZhdGVLZXkpIHtcbiAgICAgICAgdmFyIGtleVBhaXIgPSBnZXRDdXJ2ZSgpLmtleUZyb21Qcml2YXRlKGJ5dGVzXzEuYXJyYXlpZnkocHJpdmF0ZUtleSkpO1xuICAgICAgICBwcm9wZXJ0aWVzXzEuZGVmaW5lUmVhZE9ubHkodGhpcywgJ3ByaXZhdGVLZXknLCBieXRlc18xLmhleGxpZnkoa2V5UGFpci5wcml2LnRvQXJyYXkoJ2JlJywgMzIpKSk7XG4gICAgICAgIHByb3BlcnRpZXNfMS5kZWZpbmVSZWFkT25seSh0aGlzLCAncHVibGljS2V5JywgJzB4JyArIGtleVBhaXIuZ2V0UHVibGljKGZhbHNlLCAnaGV4JykpO1xuICAgICAgICBwcm9wZXJ0aWVzXzEuZGVmaW5lUmVhZE9ubHkodGhpcywgJ2NvbXByZXNzZWRQdWJsaWNLZXknLCAnMHgnICsga2V5UGFpci5nZXRQdWJsaWModHJ1ZSwgJ2hleCcpKTtcbiAgICAgICAgcHJvcGVydGllc18xLmRlZmluZVJlYWRPbmx5KHRoaXMsICdwdWJsaWNLZXlCeXRlcycsIGtleVBhaXIuZ2V0UHVibGljKCkuZW5jb2RlKG51bGwsIHRydWUpKTtcbiAgICB9XG4gICAgS2V5UGFpci5wcm90b3R5cGUuc2lnbiA9IGZ1bmN0aW9uIChkaWdlc3QpIHtcbiAgICAgICAgdmFyIGtleVBhaXIgPSBnZXRDdXJ2ZSgpLmtleUZyb21Qcml2YXRlKGJ5dGVzXzEuYXJyYXlpZnkodGhpcy5wcml2YXRlS2V5KSk7XG4gICAgICAgIHZhciBzaWduYXR1cmUgPSBrZXlQYWlyLnNpZ24oYnl0ZXNfMS5hcnJheWlmeShkaWdlc3QpLCB7IGNhbm9uaWNhbDogdHJ1ZSB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlY292ZXJ5UGFyYW06IHNpZ25hdHVyZS5yZWNvdmVyeVBhcmFtLFxuICAgICAgICAgICAgcjogYnl0ZXNfMS5oZXhaZXJvUGFkKCcweCcgKyBzaWduYXR1cmUuci50b1N0cmluZygxNiksIDMyKSxcbiAgICAgICAgICAgIHM6IGJ5dGVzXzEuaGV4WmVyb1BhZCgnMHgnICsgc2lnbmF0dXJlLnMudG9TdHJpbmcoMTYpLCAzMiksXG4gICAgICAgICAgICB2OiAyNyArIHNpZ25hdHVyZS5yZWNvdmVyeVBhcmFtXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBLZXlQYWlyLnByb3RvdHlwZS5jb21wdXRlU2hhcmVkU2VjcmV0ID0gZnVuY3Rpb24gKG90aGVyS2V5KSB7XG4gICAgICAgIHZhciBrZXlQYWlyID0gZ2V0Q3VydmUoKS5rZXlGcm9tUHJpdmF0ZShieXRlc18xLmFycmF5aWZ5KHRoaXMucHJpdmF0ZUtleSkpO1xuICAgICAgICB2YXIgb3RoZXJLZXlQYWlyID0gZ2V0Q3VydmUoKS5rZXlGcm9tUHVibGljKGJ5dGVzXzEuYXJyYXlpZnkoY29tcHV0ZVB1YmxpY0tleShvdGhlcktleSkpKTtcbiAgICAgICAgcmV0dXJuIGJ5dGVzXzEuaGV4WmVyb1BhZCgnMHgnICsga2V5UGFpci5kZXJpdmUob3RoZXJLZXlQYWlyLmdldFB1YmxpYygpKS50b1N0cmluZygxNiksIDMyKTtcbiAgICB9O1xuICAgIEtleVBhaXIucHJvdG90eXBlLl9hZGRQb2ludCA9IGZ1bmN0aW9uIChvdGhlcikge1xuICAgICAgICB2YXIgcDAgPSBnZXRDdXJ2ZSgpLmtleUZyb21QdWJsaWMoYnl0ZXNfMS5hcnJheWlmeSh0aGlzLnB1YmxpY0tleSkpO1xuICAgICAgICB2YXIgcDEgPSBnZXRDdXJ2ZSgpLmtleUZyb21QdWJsaWMoYnl0ZXNfMS5hcnJheWlmeShvdGhlcikpO1xuICAgICAgICByZXR1cm4gXCIweFwiICsgcDAucHViLmFkZChwMS5wdWIpLmVuY29kZUNvbXByZXNzZWQoXCJoZXhcIik7XG4gICAgfTtcbiAgICByZXR1cm4gS2V5UGFpcjtcbn0oKSk7XG5leHBvcnRzLktleVBhaXIgPSBLZXlQYWlyO1xuZnVuY3Rpb24gY29tcHV0ZVB1YmxpY0tleShrZXksIGNvbXByZXNzZWQpIHtcbiAgICB2YXIgYnl0ZXMgPSBieXRlc18xLmFycmF5aWZ5KGtleSk7XG4gICAgaWYgKGJ5dGVzLmxlbmd0aCA9PT0gMzIpIHtcbiAgICAgICAgdmFyIGtleVBhaXIgPSBuZXcgS2V5UGFpcihieXRlcyk7XG4gICAgICAgIGlmIChjb21wcmVzc2VkKSB7XG4gICAgICAgICAgICByZXR1cm4ga2V5UGFpci5jb21wcmVzc2VkUHVibGljS2V5O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBrZXlQYWlyLnB1YmxpY0tleTtcbiAgICB9XG4gICAgZWxzZSBpZiAoYnl0ZXMubGVuZ3RoID09PSAzMykge1xuICAgICAgICBpZiAoY29tcHJlc3NlZCkge1xuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzXzEuaGV4bGlmeShieXRlcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICcweCcgKyBnZXRDdXJ2ZSgpLmtleUZyb21QdWJsaWMoYnl0ZXMpLmdldFB1YmxpYyhmYWxzZSwgJ2hleCcpO1xuICAgIH1cbiAgICBlbHNlIGlmIChieXRlcy5sZW5ndGggPT09IDY1KSB7XG4gICAgICAgIGlmICghY29tcHJlc3NlZCkge1xuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzXzEuaGV4bGlmeShieXRlcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICcweCcgKyBnZXRDdXJ2ZSgpLmtleUZyb21QdWJsaWMoYnl0ZXMpLmdldFB1YmxpYyh0cnVlLCAnaGV4Jyk7XG4gICAgfVxuICAgIGVycm9ycy50aHJvd0Vycm9yKCdpbnZhbGlkIHB1YmxpYyBvciBwcml2YXRlIGtleScsIGVycm9ycy5JTlZBTElEX0FSR1VNRU5ULCB7IGFyZzogJ2tleScsIHZhbHVlOiAnW1JFREFDVEVEXScgfSk7XG4gICAgcmV0dXJuIG51bGw7XG59XG5leHBvcnRzLmNvbXB1dGVQdWJsaWNLZXkgPSBjb21wdXRlUHVibGljS2V5O1xuZnVuY3Rpb24gY29tcHV0ZUFkZHJlc3Moa2V5KSB7XG4gICAgLy8gU3RyaXAgb2ZmIHRoZSBsZWFkaW5nIFwiMHgwNFwiXG4gICAgdmFyIHB1YmxpY0tleSA9ICcweCcgKyBjb21wdXRlUHVibGljS2V5KGtleSkuc2xpY2UoNCk7XG4gICAgcmV0dXJuIGFkZHJlc3NfMS5nZXRBZGRyZXNzKCcweCcgKyBrZWNjYWsyNTZfMS5rZWNjYWsyNTYocHVibGljS2V5KS5zdWJzdHJpbmcoMjYpKTtcbn1cbmV4cG9ydHMuY29tcHV0ZUFkZHJlc3MgPSBjb21wdXRlQWRkcmVzcztcbmZ1bmN0aW9uIHJlY292ZXJQdWJsaWNLZXkoZGlnZXN0LCBzaWduYXR1cmUpIHtcbiAgICB2YXIgc2lnID0gYnl0ZXNfMS5zcGxpdFNpZ25hdHVyZShzaWduYXR1cmUpO1xuICAgIHZhciBycyA9IHsgcjogYnl0ZXNfMS5hcnJheWlmeShzaWcuciksIHM6IGJ5dGVzXzEuYXJyYXlpZnkoc2lnLnMpIH07XG4gICAgcmV0dXJuICcweCcgKyBnZXRDdXJ2ZSgpLnJlY292ZXJQdWJLZXkoYnl0ZXNfMS5hcnJheWlmeShkaWdlc3QpLCBycywgc2lnLnJlY292ZXJ5UGFyYW0pLmVuY29kZSgnaGV4JywgZmFsc2UpO1xufVxuZXhwb3J0cy5yZWNvdmVyUHVibGljS2V5ID0gcmVjb3ZlclB1YmxpY0tleTtcbmZ1bmN0aW9uIHJlY292ZXJBZGRyZXNzKGRpZ2VzdCwgc2lnbmF0dXJlKSB7XG4gICAgcmV0dXJuIGNvbXB1dGVBZGRyZXNzKHJlY292ZXJQdWJsaWNLZXkoYnl0ZXNfMS5hcnJheWlmeShkaWdlc3QpLCBzaWduYXR1cmUpKTtcbn1cbmV4cG9ydHMucmVjb3ZlckFkZHJlc3MgPSByZWNvdmVyQWRkcmVzcztcbmZ1bmN0aW9uIHZlcmlmeU1lc3NhZ2UobWVzc2FnZSwgc2lnbmF0dXJlKSB7XG4gICAgcmV0dXJuIHJlY292ZXJBZGRyZXNzKGhhc2hfMS5oYXNoTWVzc2FnZShtZXNzYWdlKSwgc2lnbmF0dXJlKTtcbn1cbmV4cG9ydHMudmVyaWZ5TWVzc2FnZSA9IHZlcmlmeU1lc3NhZ2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/secp256k1.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/secret-storage.js":
/*!*****************************************************!*\
  !*** ./node_modules/ethers/utils/secret-storage.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar aes_js_1 = __importDefault(__webpack_require__(/*! aes-js */ \"aes-js\"));\nvar scrypt_js_1 = __importDefault(__webpack_require__(/*! scrypt-js */ \"scrypt-js\"));\nvar uuid_1 = __importDefault(__webpack_require__(/*! uuid */ \"./node_modules/ethers/node_modules/uuid/uuid.js\"));\nvar signing_key_1 = __webpack_require__(/*! ./signing-key */ \"./node_modules/ethers/utils/signing-key.js\");\nvar HDNode = __importStar(__webpack_require__(/*! ./hdnode */ \"./node_modules/ethers/utils/hdnode.js\"));\nvar address_1 = __webpack_require__(/*! ./address */ \"./node_modules/ethers/utils/address.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar pbkdf2_1 = __webpack_require__(/*! ./pbkdf2 */ \"./node_modules/ethers/utils/pbkdf2.js\");\nvar keccak256_1 = __webpack_require__(/*! ./keccak256 */ \"./node_modules/ethers/utils/keccak256.js\");\nvar utf8_1 = __webpack_require__(/*! ./utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar random_bytes_1 = __webpack_require__(/*! ./random-bytes */ \"./node_modules/ethers/utils/random-bytes.js\");\nfunction looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return bytes_1.arrayify(hexString);\n}\nfunction zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nfunction getPassword(password) {\n    if (typeof (password) === 'string') {\n        return utf8_1.toUtf8Bytes(password, utf8_1.UnicodeNormalizationForm.NFKC);\n    }\n    return bytes_1.arrayify(password);\n}\n// Search an Object and its children recursively, caselessly.\nfunction searchPath(object, path) {\n    var currentChild = object;\n    var comps = path.toLowerCase().split('/');\n    for (var i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        var matchingChild = null;\n        for (var key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// @TODO: Make a type for string or arrayish\n// See: https://github.com/ethereum/pyethsaletool\nfunction decryptCrowdsale(json, password) {\n    var data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    var ethaddr = address_1.getAddress(searchPath(data, 'ethaddr'));\n    // Encrypted Seed\n    var encseed = looseArrayify(searchPath(data, 'encseed'));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        throw new Error('invalid encseed');\n    }\n    var key = pbkdf2_1.pbkdf2(password, password, 2000, 32, 'sha256').slice(0, 16);\n    var iv = encseed.slice(0, 16);\n    var encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    var aesCbc = new aes_js_1.default.ModeOfOperation.cbc(key, iv);\n    var seed = bytes_1.arrayify(aesCbc.decrypt(encryptedSeed));\n    seed = aes_js_1.default.padding.pkcs7.strip(seed);\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    var seedHex = '';\n    for (var i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    var seedHexBytes = utf8_1.toUtf8Bytes(seedHex);\n    var signingKey = new signing_key_1.SigningKey(keccak256_1.keccak256(seedHexBytes));\n    if (signingKey.address !== ethaddr) {\n        throw new Error('corrupt crowdsale wallet');\n    }\n    return signingKey;\n}\nexports.decryptCrowdsale = decryptCrowdsale;\n//@TODO: string or arrayish\nfunction decrypt(json, password, progressCallback) {\n    var data = JSON.parse(json);\n    var passwordBytes = getPassword(password);\n    var decrypt = function (key, ciphertext) {\n        var cipher = searchPath(data, 'crypto/cipher');\n        if (cipher === 'aes-128-ctr') {\n            var iv = looseArrayify(searchPath(data, 'crypto/cipherparams/iv'));\n            var counter = new aes_js_1.default.Counter(iv);\n            var aesCtr = new aes_js_1.default.ModeOfOperation.ctr(key, counter);\n            return bytes_1.arrayify(aesCtr.decrypt(ciphertext));\n        }\n        return null;\n    };\n    var computeMAC = function (derivedHalf, ciphertext) {\n        return keccak256_1.keccak256(bytes_1.concat([derivedHalf, ciphertext]));\n    };\n    var getSigningKey = function (key, reject) {\n        var ciphertext = looseArrayify(searchPath(data, 'crypto/ciphertext'));\n        var computedMAC = bytes_1.hexlify(computeMAC(key.slice(16, 32), ciphertext)).substring(2);\n        if (computedMAC !== searchPath(data, 'crypto/mac').toLowerCase()) {\n            reject(new Error('invalid password'));\n            return null;\n        }\n        var privateKey = decrypt(key.slice(0, 16), ciphertext);\n        var mnemonicKey = key.slice(32, 64);\n        if (!privateKey) {\n            reject(new Error('unsupported cipher'));\n            return null;\n        }\n        var signingKey = new signing_key_1.SigningKey(privateKey);\n        if (data.address && signingKey.address !== address_1.getAddress(data.address)) {\n            reject(new Error('address mismatch'));\n            return null;\n        }\n        // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n        var locale = searchPath(data, 'x-ethers/locale');\n        if (searchPath(data, 'x-ethers/version') === '0.1' && (locale == null || locale === \"en\")) {\n            var mnemonicCiphertext = looseArrayify(searchPath(data, 'x-ethers/mnemonicCiphertext'));\n            var mnemonicIv = looseArrayify(searchPath(data, 'x-ethers/mnemonicCounter'));\n            var mnemonicCounter = new aes_js_1.default.Counter(mnemonicIv);\n            var mnemonicAesCtr = new aes_js_1.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            var path = searchPath(data, 'x-ethers/path') || HDNode.defaultPath;\n            var entropy = bytes_1.arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n            var mnemonic = HDNode.entropyToMnemonic(entropy);\n            var node = HDNode.fromMnemonic(mnemonic).derivePath(path);\n            if (node.privateKey != bytes_1.hexlify(privateKey)) {\n                reject(new Error('mnemonic mismatch'));\n                return null;\n            }\n            signingKey = new signing_key_1.SigningKey(node);\n        }\n        return signingKey;\n    };\n    return new Promise(function (resolve, reject) {\n        var kdf = searchPath(data, 'crypto/kdf');\n        if (kdf && typeof (kdf) === 'string') {\n            if (kdf.toLowerCase() === 'scrypt') {\n                var salt = looseArrayify(searchPath(data, 'crypto/kdfparams/salt'));\n                var N = parseInt(searchPath(data, 'crypto/kdfparams/n'));\n                var r = parseInt(searchPath(data, 'crypto/kdfparams/r'));\n                var p = parseInt(searchPath(data, 'crypto/kdfparams/p'));\n                if (!N || !r || !p) {\n                    reject(new Error('unsupported key-derivation function parameters'));\n                    return;\n                }\n                // Make sure N is a power of 2\n                if ((N & (N - 1)) !== 0) {\n                    reject(new Error('unsupported key-derivation function parameter value for N'));\n                    return;\n                }\n                var dkLen = parseInt(searchPath(data, 'crypto/kdfparams/dklen'));\n                if (dkLen !== 32) {\n                    reject(new Error('unsupported key-derivation derived-key length'));\n                    return;\n                }\n                if (progressCallback) {\n                    progressCallback(0);\n                }\n                scrypt_js_1.default(passwordBytes, salt, N, r, p, 64, function (error, progress, key) {\n                    if (error) {\n                        error.progress = progress;\n                        reject(error);\n                    }\n                    else if (key) {\n                        key = bytes_1.arrayify(key);\n                        var signingKey = getSigningKey(key, reject);\n                        if (!signingKey) {\n                            return;\n                        }\n                        if (progressCallback) {\n                            progressCallback(1);\n                        }\n                        resolve(signingKey);\n                    }\n                    else if (progressCallback) {\n                        return progressCallback(progress);\n                    }\n                });\n            }\n            else if (kdf.toLowerCase() === 'pbkdf2') {\n                var salt = looseArrayify(searchPath(data, 'crypto/kdfparams/salt'));\n                var prfFunc = null;\n                var prf = searchPath(data, 'crypto/kdfparams/prf');\n                if (prf === 'hmac-sha256') {\n                    prfFunc = 'sha256';\n                }\n                else if (prf === 'hmac-sha512') {\n                    prfFunc = 'sha512';\n                }\n                else {\n                    reject(new Error('unsupported prf'));\n                    return;\n                }\n                var c = parseInt(searchPath(data, 'crypto/kdfparams/c'));\n                var dkLen = parseInt(searchPath(data, 'crypto/kdfparams/dklen'));\n                if (dkLen !== 32) {\n                    reject(new Error('unsupported key-derivation derived-key length'));\n                    return;\n                }\n                var key = pbkdf2_1.pbkdf2(passwordBytes, salt, c, dkLen, prfFunc);\n                var signingKey = getSigningKey(key, reject);\n                if (!signingKey) {\n                    return;\n                }\n                resolve(signingKey);\n            }\n            else {\n                reject(new Error('unsupported key-derivation function'));\n            }\n        }\n        else {\n            reject(new Error('unsupported key-derivation function'));\n        }\n    });\n}\nexports.decrypt = decrypt;\nfunction encrypt(privateKey, password, options, progressCallback) {\n    // the options are optional, so adjust the call as needed\n    if (typeof (options) === 'function' && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    // Check the private key\n    var privateKeyBytes = null;\n    if (signing_key_1.SigningKey.isSigningKey(privateKey)) {\n        privateKeyBytes = bytes_1.arrayify(privateKey.privateKey);\n    }\n    else {\n        privateKeyBytes = bytes_1.arrayify(privateKey);\n    }\n    if (privateKeyBytes.length !== 32) {\n        throw new Error('invalid private key');\n    }\n    var passwordBytes = getPassword(password);\n    var entropy = null;\n    if (options.entropy) {\n        entropy = bytes_1.arrayify(options.entropy);\n    }\n    if (options.mnemonic) {\n        if (entropy) {\n            if (HDNode.entropyToMnemonic(entropy) !== options.mnemonic) {\n                throw new Error('entropy and mnemonic mismatch');\n            }\n        }\n        else {\n            entropy = bytes_1.arrayify(HDNode.mnemonicToEntropy(options.mnemonic, options.wordlist));\n        }\n    }\n    var path = options.path;\n    if (entropy && !path) {\n        path = HDNode.defaultPath;\n    }\n    var client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    var salt = null;\n    if (options.salt) {\n        salt = bytes_1.arrayify(options.salt);\n    }\n    else {\n        salt = random_bytes_1.randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    var iv = null;\n    if (options.iv) {\n        iv = bytes_1.arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error('invalid iv');\n        }\n    }\n    else {\n        iv = random_bytes_1.randomBytes(16);\n    }\n    // Override the uuid\n    var uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = bytes_1.arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error('invalid uuid');\n        }\n    }\n    else {\n        uuidRandom = random_bytes_1.randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    var N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        // We take 64 bytes:\n        //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n        //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n        scrypt_js_1.default(passwordBytes, salt, N, r, p, 64, function (error, progress, key) {\n            if (error) {\n                error.progress = progress;\n                reject(error);\n            }\n            else if (key) {\n                key = bytes_1.arrayify(key);\n                // This will be used to encrypt the wallet (as per Web3 secret storage)\n                var derivedKey = key.slice(0, 16);\n                var macPrefix = key.slice(16, 32);\n                // This will be used to encrypt the mnemonic phrase (if any)\n                var mnemonicKey = key.slice(32, 64);\n                // Get the address for this private key\n                var address = (new signing_key_1.SigningKey(privateKeyBytes)).address;\n                // Encrypt the private key\n                var counter = new aes_js_1.default.Counter(iv);\n                var aesCtr = new aes_js_1.default.ModeOfOperation.ctr(derivedKey, counter);\n                var ciphertext = bytes_1.arrayify(aesCtr.encrypt(privateKeyBytes));\n                // Compute the message authentication code, used to check the password\n                var mac = keccak256_1.keccak256(bytes_1.concat([macPrefix, ciphertext]));\n                // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n                var data = {\n                    address: address.substring(2).toLowerCase(),\n                    id: uuid_1.default.v4({ random: uuidRandom }),\n                    version: 3,\n                    Crypto: {\n                        cipher: 'aes-128-ctr',\n                        cipherparams: {\n                            iv: bytes_1.hexlify(iv).substring(2),\n                        },\n                        ciphertext: bytes_1.hexlify(ciphertext).substring(2),\n                        kdf: 'scrypt',\n                        kdfparams: {\n                            salt: bytes_1.hexlify(salt).substring(2),\n                            n: N,\n                            dklen: 32,\n                            p: p,\n                            r: r\n                        },\n                        mac: mac.substring(2)\n                    }\n                };\n                // If we have a mnemonic, encrypt it into the JSON wallet\n                if (entropy) {\n                    var mnemonicIv = random_bytes_1.randomBytes(16);\n                    var mnemonicCounter = new aes_js_1.default.Counter(mnemonicIv);\n                    var mnemonicAesCtr = new aes_js_1.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n                    var mnemonicCiphertext = bytes_1.arrayify(mnemonicAesCtr.encrypt(entropy));\n                    var now = new Date();\n                    var timestamp = (now.getUTCFullYear() + '-' +\n                        zpad(now.getUTCMonth() + 1, 2) + '-' +\n                        zpad(now.getUTCDate(), 2) + 'T' +\n                        zpad(now.getUTCHours(), 2) + '-' +\n                        zpad(now.getUTCMinutes(), 2) + '-' +\n                        zpad(now.getUTCSeconds(), 2) + '.0Z');\n                    data['x-ethers'] = {\n                        client: client,\n                        gethFilename: ('UTC--' + timestamp + '--' + data.address),\n                        mnemonicCounter: bytes_1.hexlify(mnemonicIv).substring(2),\n                        mnemonicCiphertext: bytes_1.hexlify(mnemonicCiphertext).substring(2),\n                        path: path,\n                        version: \"0.1\"\n                    };\n                    if (options.wordlist && typeof (options.wordlist.locale) === \"string\") {\n                        data['x-ethers'].locale = options.wordlist.locale;\n                    }\n                }\n                if (progressCallback) {\n                    progressCallback(1);\n                }\n                resolve(JSON.stringify(data));\n            }\n            else if (progressCallback) {\n                return progressCallback(progress);\n            }\n        });\n    });\n}\nexports.encrypt = encrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/secret-storage.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/sha2.js":
/*!*******************************************!*\
  !*** ./node_modules/ethers/utils/sha2.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar hash_js_1 = __importDefault(__webpack_require__(/*! hash.js */ \"hash.js\"));\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nfunction ripemd160(data) {\n    return '0x' + (hash_js_1.default.ripemd160().update(bytes_1.arrayify(data)).digest('hex'));\n}\nexports.ripemd160 = ripemd160;\nfunction sha256(data) {\n    return '0x' + (hash_js_1.default.sha256().update(bytes_1.arrayify(data)).digest('hex'));\n}\nexports.sha256 = sha256;\nfunction sha512(data) {\n    return '0x' + (hash_js_1.default.sha512().update(bytes_1.arrayify(data)).digest('hex'));\n}\nexports.sha512 = sha512;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3NoYTIuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0MsbUJBQU8sQ0FBQyx3QkFBUztBQUNqRCxjQUFjLG1CQUFPLENBQUMscURBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2V0aGVycy91dGlscy9zaGEyLmpzP2E3YTUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGhhc2hfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiaGFzaC5qc1wiKSk7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xuZnVuY3Rpb24gcmlwZW1kMTYwKGRhdGEpIHtcbiAgICByZXR1cm4gJzB4JyArIChoYXNoX2pzXzEuZGVmYXVsdC5yaXBlbWQxNjAoKS51cGRhdGUoYnl0ZXNfMS5hcnJheWlmeShkYXRhKSkuZGlnZXN0KCdoZXgnKSk7XG59XG5leHBvcnRzLnJpcGVtZDE2MCA9IHJpcGVtZDE2MDtcbmZ1bmN0aW9uIHNoYTI1NihkYXRhKSB7XG4gICAgcmV0dXJuICcweCcgKyAoaGFzaF9qc18xLmRlZmF1bHQuc2hhMjU2KCkudXBkYXRlKGJ5dGVzXzEuYXJyYXlpZnkoZGF0YSkpLmRpZ2VzdCgnaGV4JykpO1xufVxuZXhwb3J0cy5zaGEyNTYgPSBzaGEyNTY7XG5mdW5jdGlvbiBzaGE1MTIoZGF0YSkge1xuICAgIHJldHVybiAnMHgnICsgKGhhc2hfanNfMS5kZWZhdWx0LnNoYTUxMigpLnVwZGF0ZShieXRlc18xLmFycmF5aWZ5KGRhdGEpKS5kaWdlc3QoJ2hleCcpKTtcbn1cbmV4cG9ydHMuc2hhNTEyID0gc2hhNTEyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/sha2.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/shims.js":
/*!********************************************!*\
  !*** ./node_modules/ethers/utils/shims.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n/* no shims for node */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.platform = 'node';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3NoaW1zLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2V0aGVycy91dGlscy9zaGltcy5qcz85YzAxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogbm8gc2hpbXMgZm9yIG5vZGUgKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGxhdGZvcm0gPSAnbm9kZSc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/shims.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/signing-key.js":
/*!**************************************************!*\
  !*** ./node_modules/ethers/utils/signing-key.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n *  SigningKey\n *\n *\n */\nvar hdnode_1 = __webpack_require__(/*! ./hdnode */ \"./node_modules/ethers/utils/hdnode.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar properties_1 = __webpack_require__(/*! ./properties */ \"./node_modules/ethers/utils/properties.js\");\nvar secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"./node_modules/ethers/utils/secp256k1.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\n///////////////////////////////\nvar SigningKey = /** @class */ (function () {\n    function SigningKey(privateKey) {\n        errors.checkNew(this, SigningKey);\n        var privateKeyBytes = null;\n        if (hdnode_1.HDNode.isHDNode(privateKey)) {\n            properties_1.defineReadOnly(this, 'mnemonic', privateKey.mnemonic);\n            properties_1.defineReadOnly(this, 'path', privateKey.path);\n            privateKeyBytes = bytes_1.arrayify(privateKey.privateKey);\n        }\n        else {\n            // A lot of common tools do not prefix private keys with a 0x\n            if (typeof (privateKey) === 'string' && privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                privateKey = '0x' + privateKey;\n            }\n            privateKeyBytes = bytes_1.arrayify(privateKey);\n        }\n        try {\n            if (privateKeyBytes.length !== 32) {\n                errors.throwError('exactly 32 bytes required', errors.INVALID_ARGUMENT, { arg: 'privateKey', value: '[REDACTED]' });\n            }\n        }\n        catch (error) {\n            var params = { arg: 'privateKey', reason: error.reason, value: '[REDACTED]' };\n            if (error.value) {\n                if (typeof (error.value.length) === 'number') {\n                    params.length = error.value.length;\n                }\n                params.type = typeof (error.value);\n            }\n            errors.throwError('invalid private key', error.code, params);\n        }\n        properties_1.defineReadOnly(this, 'privateKey', bytes_1.hexlify(privateKeyBytes));\n        properties_1.defineReadOnly(this, 'keyPair', new secp256k1_1.KeyPair(privateKeyBytes));\n        properties_1.defineReadOnly(this, 'publicKey', this.keyPair.publicKey);\n        properties_1.defineReadOnly(this, 'address', secp256k1_1.computeAddress(this.keyPair.publicKey));\n        properties_1.setType(this, 'SigningKey');\n    }\n    SigningKey.prototype.signDigest = function (digest) {\n        return this.keyPair.sign(digest);\n    };\n    SigningKey.prototype.computeSharedSecret = function (key) {\n        return this.keyPair.computeSharedSecret(bytes_1.arrayify(key));\n    };\n    SigningKey.isSigningKey = function (value) {\n        return properties_1.isType(value, 'SigningKey');\n    };\n    return SigningKey;\n}());\nexports.SigningKey = SigningKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3NpZ25pbmcta2V5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx1REFBVTtBQUNqQyxjQUFjLG1CQUFPLENBQUMscURBQVM7QUFDL0IsbUJBQW1CLG1CQUFPLENBQUMsK0RBQWM7QUFDekMsa0JBQWtCLG1CQUFPLENBQUMsNkRBQWE7QUFDdkMsMEJBQTBCLG1CQUFPLENBQUMsa0RBQVc7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRkFBMEYsd0NBQXdDO0FBQ2xJO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2V0aGVycy91dGlscy9zaWduaW5nLWtleS5qcz81NWY3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSByZXN1bHRba10gPSBtb2Rba107XG4gICAgcmVzdWx0W1wiZGVmYXVsdFwiXSA9IG1vZDtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKlxuICogIFNpZ25pbmdLZXlcbiAqXG4gKlxuICovXG52YXIgaGRub2RlXzEgPSByZXF1aXJlKFwiLi9oZG5vZGVcIik7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xudmFyIHByb3BlcnRpZXNfMSA9IHJlcXVpcmUoXCIuL3Byb3BlcnRpZXNcIik7XG52YXIgc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9zZWNwMjU2azFcIik7XG52YXIgZXJyb3JzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuLi9lcnJvcnNcIikpO1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xudmFyIFNpZ25pbmdLZXkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU2lnbmluZ0tleShwcml2YXRlS2V5KSB7XG4gICAgICAgIGVycm9ycy5jaGVja05ldyh0aGlzLCBTaWduaW5nS2V5KTtcbiAgICAgICAgdmFyIHByaXZhdGVLZXlCeXRlcyA9IG51bGw7XG4gICAgICAgIGlmIChoZG5vZGVfMS5IRE5vZGUuaXNIRE5vZGUocHJpdmF0ZUtleSkpIHtcbiAgICAgICAgICAgIHByb3BlcnRpZXNfMS5kZWZpbmVSZWFkT25seSh0aGlzLCAnbW5lbW9uaWMnLCBwcml2YXRlS2V5Lm1uZW1vbmljKTtcbiAgICAgICAgICAgIHByb3BlcnRpZXNfMS5kZWZpbmVSZWFkT25seSh0aGlzLCAncGF0aCcsIHByaXZhdGVLZXkucGF0aCk7XG4gICAgICAgICAgICBwcml2YXRlS2V5Qnl0ZXMgPSBieXRlc18xLmFycmF5aWZ5KHByaXZhdGVLZXkucHJpdmF0ZUtleSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBBIGxvdCBvZiBjb21tb24gdG9vbHMgZG8gbm90IHByZWZpeCBwcml2YXRlIGtleXMgd2l0aCBhIDB4XG4gICAgICAgICAgICBpZiAodHlwZW9mIChwcml2YXRlS2V5KSA9PT0gJ3N0cmluZycgJiYgcHJpdmF0ZUtleS5tYXRjaCgvXlswLTlhLWZdKiQvaSkgJiYgcHJpdmF0ZUtleS5sZW5ndGggPT09IDY0KSB7XG4gICAgICAgICAgICAgICAgcHJpdmF0ZUtleSA9ICcweCcgKyBwcml2YXRlS2V5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcHJpdmF0ZUtleUJ5dGVzID0gYnl0ZXNfMS5hcnJheWlmeShwcml2YXRlS2V5KTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHByaXZhdGVLZXlCeXRlcy5sZW5ndGggIT09IDMyKSB7XG4gICAgICAgICAgICAgICAgZXJyb3JzLnRocm93RXJyb3IoJ2V4YWN0bHkgMzIgYnl0ZXMgcmVxdWlyZWQnLCBlcnJvcnMuSU5WQUxJRF9BUkdVTUVOVCwgeyBhcmc6ICdwcml2YXRlS2V5JywgdmFsdWU6ICdbUkVEQUNURURdJyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHZhciBwYXJhbXMgPSB7IGFyZzogJ3ByaXZhdGVLZXknLCByZWFzb246IGVycm9yLnJlYXNvbiwgdmFsdWU6ICdbUkVEQUNURURdJyB9O1xuICAgICAgICAgICAgaWYgKGVycm9yLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiAoZXJyb3IudmFsdWUubGVuZ3RoKSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyYW1zLmxlbmd0aCA9IGVycm9yLnZhbHVlLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcGFyYW1zLnR5cGUgPSB0eXBlb2YgKGVycm9yLnZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVycm9ycy50aHJvd0Vycm9yKCdpbnZhbGlkIHByaXZhdGUga2V5JywgZXJyb3IuY29kZSwgcGFyYW1zKTtcbiAgICAgICAgfVxuICAgICAgICBwcm9wZXJ0aWVzXzEuZGVmaW5lUmVhZE9ubHkodGhpcywgJ3ByaXZhdGVLZXknLCBieXRlc18xLmhleGxpZnkocHJpdmF0ZUtleUJ5dGVzKSk7XG4gICAgICAgIHByb3BlcnRpZXNfMS5kZWZpbmVSZWFkT25seSh0aGlzLCAna2V5UGFpcicsIG5ldyBzZWNwMjU2azFfMS5LZXlQYWlyKHByaXZhdGVLZXlCeXRlcykpO1xuICAgICAgICBwcm9wZXJ0aWVzXzEuZGVmaW5lUmVhZE9ubHkodGhpcywgJ3B1YmxpY0tleScsIHRoaXMua2V5UGFpci5wdWJsaWNLZXkpO1xuICAgICAgICBwcm9wZXJ0aWVzXzEuZGVmaW5lUmVhZE9ubHkodGhpcywgJ2FkZHJlc3MnLCBzZWNwMjU2azFfMS5jb21wdXRlQWRkcmVzcyh0aGlzLmtleVBhaXIucHVibGljS2V5KSk7XG4gICAgICAgIHByb3BlcnRpZXNfMS5zZXRUeXBlKHRoaXMsICdTaWduaW5nS2V5Jyk7XG4gICAgfVxuICAgIFNpZ25pbmdLZXkucHJvdG90eXBlLnNpZ25EaWdlc3QgPSBmdW5jdGlvbiAoZGlnZXN0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmtleVBhaXIuc2lnbihkaWdlc3QpO1xuICAgIH07XG4gICAgU2lnbmluZ0tleS5wcm90b3R5cGUuY29tcHV0ZVNoYXJlZFNlY3JldCA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMua2V5UGFpci5jb21wdXRlU2hhcmVkU2VjcmV0KGJ5dGVzXzEuYXJyYXlpZnkoa2V5KSk7XG4gICAgfTtcbiAgICBTaWduaW5nS2V5LmlzU2lnbmluZ0tleSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gcHJvcGVydGllc18xLmlzVHlwZSh2YWx1ZSwgJ1NpZ25pbmdLZXknKTtcbiAgICB9O1xuICAgIHJldHVybiBTaWduaW5nS2V5O1xufSgpKTtcbmV4cG9ydHMuU2lnbmluZ0tleSA9IFNpZ25pbmdLZXk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/signing-key.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/solidity.js":
/*!***********************************************!*\
  !*** ./node_modules/ethers/utils/solidity.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bignumber_1 = __webpack_require__(/*! ./bignumber */ \"./node_modules/ethers/utils/bignumber.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar utf8_1 = __webpack_require__(/*! ./utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar keccak256_1 = __webpack_require__(/*! ./keccak256 */ \"./node_modules/ethers/utils/keccak256.js\");\nvar sha2_1 = __webpack_require__(/*! ./sha2 */ \"./node_modules/ethers/utils/sha2.js\");\nvar regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nvar regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nvar regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nvar Zeros = '0000000000000000000000000000000000000000000000000000000000000000';\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case 'address':\n            if (isArray) {\n                return bytes_1.padZeros(value, 32);\n            }\n            return bytes_1.arrayify(value);\n        case 'string':\n            return utf8_1.toUtf8Bytes(value);\n        case 'bytes':\n            return bytes_1.arrayify(value);\n        case 'bool':\n            value = (value ? '0x01' : '0x00');\n            if (isArray) {\n                return bytes_1.padZeros(value, 32);\n            }\n            return bytes_1.arrayify(value);\n    }\n    var match = type.match(regexNumber);\n    if (match) {\n        //var signed = (match[1] === 'int')\n        var size = parseInt(match[2] || \"256\");\n        if ((size % 8 != 0) || size === 0 || size > 256) {\n            throw new Error('invalid number type - ' + type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = bignumber_1.bigNumberify(value).toTwos(size);\n        return bytes_1.padZeros(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        var size = parseInt(match[1]);\n        if (String(size) != match[1] || size === 0 || size > 32) {\n            throw new Error('invalid number type - ' + type);\n        }\n        if (bytes_1.arrayify(value).byteLength !== size) {\n            throw new Error('invalid value for ' + type);\n        }\n        if (isArray) {\n            return bytes_1.arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        var baseType = match[1];\n        var count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            throw new Error('invalid value for ' + type);\n        }\n        var result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return bytes_1.concat(result);\n    }\n    throw new Error('unknown type - ' + type);\n}\n// @TODO: Array Enum\nfunction pack(types, values) {\n    if (types.length != values.length) {\n        throw new Error('type/value count mismatch');\n    }\n    var tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return bytes_1.hexlify(bytes_1.concat(tight));\n}\nexports.pack = pack;\nfunction keccak256(types, values) {\n    return keccak256_1.keccak256(pack(types, values));\n}\nexports.keccak256 = keccak256;\nfunction sha256(types, values) {\n    return sha2_1.sha256(pack(types, values));\n}\nexports.sha256 = sha256;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3NvbGlkaXR5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQixtQkFBTyxDQUFDLDZEQUFhO0FBQ3ZDLGNBQWMsbUJBQU8sQ0FBQyxxREFBUztBQUMvQixhQUFhLG1CQUFPLENBQUMsbURBQVE7QUFDN0Isa0JBQWtCLG1CQUFPLENBQUMsNkRBQWE7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLG1EQUFRO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3NvbGlkaXR5LmpzPzkwMjgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGJpZ251bWJlcl8xID0gcmVxdWlyZShcIi4vYmlnbnVtYmVyXCIpO1xudmFyIGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbnZhciB1dGY4XzEgPSByZXF1aXJlKFwiLi91dGY4XCIpO1xudmFyIGtlY2NhazI1Nl8xID0gcmVxdWlyZShcIi4va2VjY2FrMjU2XCIpO1xudmFyIHNoYTJfMSA9IHJlcXVpcmUoXCIuL3NoYTJcIik7XG52YXIgcmVnZXhCeXRlcyA9IG5ldyBSZWdFeHAoXCJeYnl0ZXMoWzAtOV0rKSRcIik7XG52YXIgcmVnZXhOdW1iZXIgPSBuZXcgUmVnRXhwKFwiXih1P2ludCkoWzAtOV0qKSRcIik7XG52YXIgcmVnZXhBcnJheSA9IG5ldyBSZWdFeHAoXCJeKC4qKVxcXFxbKFswLTldKilcXFxcXSRcIik7XG52YXIgWmVyb3MgPSAnMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCc7XG5mdW5jdGlvbiBfcGFjayh0eXBlLCB2YWx1ZSwgaXNBcnJheSkge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlICdhZGRyZXNzJzpcbiAgICAgICAgICAgIGlmIChpc0FycmF5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJ5dGVzXzEucGFkWmVyb3ModmFsdWUsIDMyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBieXRlc18xLmFycmF5aWZ5KHZhbHVlKTtcbiAgICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgICAgICAgIHJldHVybiB1dGY4XzEudG9VdGY4Qnl0ZXModmFsdWUpO1xuICAgICAgICBjYXNlICdieXRlcyc6XG4gICAgICAgICAgICByZXR1cm4gYnl0ZXNfMS5hcnJheWlmeSh2YWx1ZSk7XG4gICAgICAgIGNhc2UgJ2Jvb2wnOlxuICAgICAgICAgICAgdmFsdWUgPSAodmFsdWUgPyAnMHgwMScgOiAnMHgwMCcpO1xuICAgICAgICAgICAgaWYgKGlzQXJyYXkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYnl0ZXNfMS5wYWRaZXJvcyh2YWx1ZSwgMzIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzXzEuYXJyYXlpZnkodmFsdWUpO1xuICAgIH1cbiAgICB2YXIgbWF0Y2ggPSB0eXBlLm1hdGNoKHJlZ2V4TnVtYmVyKTtcbiAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgLy92YXIgc2lnbmVkID0gKG1hdGNoWzFdID09PSAnaW50JylcbiAgICAgICAgdmFyIHNpemUgPSBwYXJzZUludChtYXRjaFsyXSB8fCBcIjI1NlwiKTtcbiAgICAgICAgaWYgKChzaXplICUgOCAhPSAwKSB8fCBzaXplID09PSAwIHx8IHNpemUgPiAyNTYpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBudW1iZXIgdHlwZSAtICcgKyB0eXBlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNBcnJheSkge1xuICAgICAgICAgICAgc2l6ZSA9IDI1NjtcbiAgICAgICAgfVxuICAgICAgICB2YWx1ZSA9IGJpZ251bWJlcl8xLmJpZ051bWJlcmlmeSh2YWx1ZSkudG9Ud29zKHNpemUpO1xuICAgICAgICByZXR1cm4gYnl0ZXNfMS5wYWRaZXJvcyh2YWx1ZSwgc2l6ZSAvIDgpO1xuICAgIH1cbiAgICBtYXRjaCA9IHR5cGUubWF0Y2gocmVnZXhCeXRlcyk7XG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICAgIHZhciBzaXplID0gcGFyc2VJbnQobWF0Y2hbMV0pO1xuICAgICAgICBpZiAoU3RyaW5nKHNpemUpICE9IG1hdGNoWzFdIHx8IHNpemUgPT09IDAgfHwgc2l6ZSA+IDMyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgbnVtYmVyIHR5cGUgLSAnICsgdHlwZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJ5dGVzXzEuYXJyYXlpZnkodmFsdWUpLmJ5dGVMZW5ndGggIT09IHNpemUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCB2YWx1ZSBmb3IgJyArIHR5cGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0FycmF5KSB7XG4gICAgICAgICAgICByZXR1cm4gYnl0ZXNfMS5hcnJheWlmeSgodmFsdWUgKyBaZXJvcykuc3Vic3RyaW5nKDAsIDY2KSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBtYXRjaCA9IHR5cGUubWF0Y2gocmVnZXhBcnJheSk7XG4gICAgaWYgKG1hdGNoICYmIEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhciBiYXNlVHlwZSA9IG1hdGNoWzFdO1xuICAgICAgICB2YXIgY291bnQgPSBwYXJzZUludChtYXRjaFsyXSB8fCBTdHJpbmcodmFsdWUubGVuZ3RoKSk7XG4gICAgICAgIGlmIChjb3VudCAhPSB2YWx1ZS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCB2YWx1ZSBmb3IgJyArIHR5cGUpO1xuICAgICAgICB9XG4gICAgICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICAgICAgdmFsdWUuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKF9wYWNrKGJhc2VUeXBlLCB2YWx1ZSwgdHJ1ZSkpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGJ5dGVzXzEuY29uY2F0KHJlc3VsdCk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biB0eXBlIC0gJyArIHR5cGUpO1xufVxuLy8gQFRPRE86IEFycmF5IEVudW1cbmZ1bmN0aW9uIHBhY2sodHlwZXMsIHZhbHVlcykge1xuICAgIGlmICh0eXBlcy5sZW5ndGggIT0gdmFsdWVzLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3R5cGUvdmFsdWUgY291bnQgbWlzbWF0Y2gnKTtcbiAgICB9XG4gICAgdmFyIHRpZ2h0ID0gW107XG4gICAgdHlwZXMuZm9yRWFjaChmdW5jdGlvbiAodHlwZSwgaW5kZXgpIHtcbiAgICAgICAgdGlnaHQucHVzaChfcGFjayh0eXBlLCB2YWx1ZXNbaW5kZXhdKSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGJ5dGVzXzEuaGV4bGlmeShieXRlc18xLmNvbmNhdCh0aWdodCkpO1xufVxuZXhwb3J0cy5wYWNrID0gcGFjaztcbmZ1bmN0aW9uIGtlY2NhazI1Nih0eXBlcywgdmFsdWVzKSB7XG4gICAgcmV0dXJuIGtlY2NhazI1Nl8xLmtlY2NhazI1NihwYWNrKHR5cGVzLCB2YWx1ZXMpKTtcbn1cbmV4cG9ydHMua2VjY2FrMjU2ID0ga2VjY2FrMjU2O1xuZnVuY3Rpb24gc2hhMjU2KHR5cGVzLCB2YWx1ZXMpIHtcbiAgICByZXR1cm4gc2hhMl8xLnNoYTI1NihwYWNrKHR5cGVzLCB2YWx1ZXMpKTtcbn1cbmV4cG9ydHMuc2hhMjU2ID0gc2hhMjU2O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/solidity.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/transaction.js":
/*!**************************************************!*\
  !*** ./node_modules/ethers/utils/transaction.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar constants_1 = __webpack_require__(/*! ../constants */ \"./node_modules/ethers/constants.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nvar secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"./node_modules/ethers/utils/secp256k1.js\");\nvar address_1 = __webpack_require__(/*! ./address */ \"./node_modules/ethers/utils/address.js\");\nvar bignumber_1 = __webpack_require__(/*! ./bignumber */ \"./node_modules/ethers/utils/bignumber.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar keccak256_1 = __webpack_require__(/*! ./keccak256 */ \"./node_modules/ethers/utils/keccak256.js\");\nvar properties_1 = __webpack_require__(/*! ./properties */ \"./node_modules/ethers/utils/properties.js\");\nvar RLP = __importStar(__webpack_require__(/*! ./rlp */ \"./node_modules/ethers/utils/rlp.js\"));\nvar abstract_provider_1 = __webpack_require__(/*! ../providers/abstract-provider */ \"./node_modules/ethers/providers/abstract-provider.js\");\n///////////////////////////////\nfunction handleAddress(value) {\n    if (value === '0x') {\n        return null;\n    }\n    return address_1.getAddress(value);\n}\nfunction handleNumber(value) {\n    if (value === '0x') {\n        return constants_1.Zero;\n    }\n    return bignumber_1.bigNumberify(value);\n}\nvar transactionFields = [\n    { name: 'nonce', maxLength: 32 },\n    { name: 'gasPrice', maxLength: 32 },\n    { name: 'gasLimit', maxLength: 32 },\n    { name: 'to', length: 20 },\n    { name: 'value', maxLength: 32 },\n    { name: 'data' },\n];\nvar allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true\n};\nfunction serialize(transaction, signature) {\n    properties_1.checkProperties(transaction, allowedTransactionKeys);\n    var raw = [];\n    transactionFields.forEach(function (fieldInfo) {\n        var value = transaction[fieldInfo.name] || ([]);\n        value = bytes_1.arrayify(bytes_1.hexlify(value));\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            errors.throwError('invalid length for ' + fieldInfo.name, errors.INVALID_ARGUMENT, { arg: ('transaction' + fieldInfo.name), value: value });\n        }\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = bytes_1.stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                errors.throwError('invalid length for ' + fieldInfo.name, errors.INVALID_ARGUMENT, { arg: ('transaction' + fieldInfo.name), value: value });\n            }\n        }\n        raw.push(bytes_1.hexlify(value));\n    });\n    if (transaction.chainId != null && transaction.chainId !== 0) {\n        raw.push(bytes_1.hexlify(transaction.chainId));\n        raw.push('0x');\n        raw.push('0x');\n    }\n    var unsignedTransaction = RLP.encode(raw);\n    // Requesting an unsigned transation\n    if (!signature) {\n        return unsignedTransaction;\n    }\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    var sig = bytes_1.splitSignature(signature);\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    var v = 27 + sig.recoveryParam;\n    if (raw.length === 9) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += transaction.chainId * 2 + 8;\n    }\n    raw.push(bytes_1.hexlify(v));\n    raw.push(bytes_1.stripZeros(bytes_1.arrayify(sig.r)));\n    raw.push(bytes_1.stripZeros(bytes_1.arrayify(sig.s)));\n    return RLP.encode(raw);\n}\nexports.serialize = serialize;\nfunction parse(rawTransaction) {\n    var transaction = RLP.decode(rawTransaction);\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        errors.throwError('invalid raw transaction', errors.INVALID_ARGUMENT, { arg: 'rawTransactin', value: rawTransaction });\n    }\n    var tx = {\n        nonce: handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to: handleAddress(transaction[3]),\n        value: handleNumber(transaction[4]),\n        data: transaction[5],\n        chainId: 0\n    };\n    // Legacy unsigned transaction\n    if (transaction.length === 6) {\n        return tx;\n    }\n    try {\n        tx.v = bignumber_1.bigNumberify(transaction[6]).toNumber();\n    }\n    catch (error) {\n        errors.info(error);\n        return tx;\n    }\n    tx.r = bytes_1.hexZeroPad(transaction[7], 32);\n    tx.s = bytes_1.hexZeroPad(transaction[8], 32);\n    if (bignumber_1.bigNumberify(tx.r).isZero() && bignumber_1.bigNumberify(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n    }\n    else {\n        // Signed Tranasaction\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) {\n            tx.chainId = 0;\n        }\n        var recoveryParam = tx.v - 27;\n        var raw = transaction.slice(0, 6);\n        if (tx.chainId !== 0) {\n            raw.push(bytes_1.hexlify(tx.chainId));\n            raw.push('0x');\n            raw.push('0x');\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n        var digest = keccak256_1.keccak256(RLP.encode(raw));\n        try {\n            tx.from = secp256k1_1.recoverAddress(digest, { r: bytes_1.hexlify(tx.r), s: bytes_1.hexlify(tx.s), recoveryParam: recoveryParam });\n        }\n        catch (error) {\n            errors.info(error);\n        }\n        tx.hash = keccak256_1.keccak256(rawTransaction);\n    }\n    return tx;\n}\nexports.parse = parse;\nfunction populateTransaction(transaction, provider, from) {\n    if (!abstract_provider_1.Provider.isProvider(provider)) {\n        errors.throwError('missing provider', errors.INVALID_ARGUMENT, {\n            argument: 'provider',\n            value: provider\n        });\n    }\n    properties_1.checkProperties(transaction, allowedTransactionKeys);\n    var tx = properties_1.shallowCopy(transaction);\n    if (tx.to != null) {\n        tx.to = provider.resolveName(tx.to);\n    }\n    if (tx.gasPrice == null) {\n        tx.gasPrice = provider.getGasPrice();\n    }\n    if (tx.nonce == null) {\n        tx.nonce = provider.getTransactionCount(from);\n    }\n    if (tx.gasLimit == null) {\n        var estimate = properties_1.shallowCopy(tx);\n        estimate.from = from;\n        tx.gasLimit = provider.estimateGas(estimate);\n    }\n    if (tx.chainId == null) {\n        tx.chainId = provider.getNetwork().then(function (network) { return network.chainId; });\n    }\n    return properties_1.resolveProperties(tx);\n}\nexports.populateTransaction = populateTransaction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/transaction.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/units.js":
/*!********************************************!*\
  !*** ./node_modules/ethers/utils/units.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar constants_1 = __webpack_require__(/*! ../constants */ \"./node_modules/ethers/constants.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nvar bignumber_1 = __webpack_require__(/*! ./bignumber */ \"./node_modules/ethers/utils/bignumber.js\");\nvar names = [\n    'wei',\n    'kwei',\n    'Mwei',\n    'Gwei',\n    'szabo',\n    'finney',\n    'ether',\n];\nvar unitInfos = {};\nfunction _getUnitInfo(value) {\n    return {\n        decimals: value.length - 1,\n        tenPower: bignumber_1.bigNumberify(value)\n    };\n}\n// Build cache of common units\n(function () {\n    // Cache the common units\n    var value = '1';\n    names.forEach(function (name) {\n        var info = _getUnitInfo(value);\n        unitInfos[name.toLowerCase()] = info;\n        unitInfos[String(info.decimals)] = info;\n        value += '000';\n    });\n})();\nfunction getUnitInfo(name) {\n    // Try the cache\n    var info = unitInfos[String(name).toLowerCase()];\n    if (!info && typeof (name) === 'number' && parseInt(String(name)) == name && name >= 0 && name <= 256) {\n        var value = '1';\n        for (var i = 0; i < name; i++) {\n            value += '0';\n        }\n        info = _getUnitInfo(value);\n    }\n    // Make sure we got something\n    if (!info) {\n        errors.throwError('invalid unitType', errors.INVALID_ARGUMENT, { argument: 'name', value: name });\n    }\n    return info;\n}\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nfunction commify(value) {\n    var comps = String(value).split('.');\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === '.' || value === '-.') {\n        errors.throwError('invalid value', errors.INVALID_ARGUMENT, { argument: 'value', value: value });\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    var whole = comps[0];\n    var negative = '';\n    if (whole.substring(0, 1) === '-') {\n        negative = '-';\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === '0') {\n        whole = whole.substring(1);\n    }\n    if (whole === '') {\n        whole = '0';\n    }\n    var suffix = '';\n    if (comps.length === 2) {\n        suffix = '.' + (comps[1] || '0');\n    }\n    var formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            var index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(',') + suffix;\n}\nexports.commify = commify;\nfunction formatUnits(value, unitType) {\n    var unitInfo = getUnitInfo(unitType);\n    // Make sure wei is a big number (convert as necessary)\n    value = bignumber_1.bigNumberify(value);\n    var negative = value.lt(constants_1.Zero);\n    if (negative) {\n        value = value.mul(constants_1.NegativeOne);\n    }\n    var fraction = value.mod(unitInfo.tenPower).toString();\n    while (fraction.length < unitInfo.decimals) {\n        fraction = '0' + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    var whole = value.div(unitInfo.tenPower).toString();\n    value = whole + '.' + fraction;\n    if (negative) {\n        value = '-' + value;\n    }\n    return value;\n}\nexports.formatUnits = formatUnits;\nfunction parseUnits(value, unitType) {\n    if (unitType == null) {\n        unitType = 18;\n    }\n    var unitInfo = getUnitInfo(unitType);\n    if (typeof (value) !== 'string' || !value.match(/^-?[0-9.,]+$/)) {\n        errors.throwError('invalid decimal value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    if (unitInfo.decimals === 0) {\n        return bignumber_1.bigNumberify(value);\n    }\n    // Is it negative?\n    var negative = (value.substring(0, 1) === '-');\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === '.') {\n        errors.throwError('missing value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    // Split it into a whole and fractional part\n    var comps = value.split('.');\n    if (comps.length > 2) {\n        errors.throwError('too many decimal points', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    var whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = '0';\n    }\n    if (!fraction) {\n        fraction = '0';\n    }\n    // Prevent underflow\n    if (fraction.length > unitInfo.decimals) {\n        errors.throwError('underflow occurred', errors.NUMERIC_FAULT, { operation: 'division', fault: \"underflow\" });\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < unitInfo.decimals) {\n        fraction += '0';\n    }\n    var wholeValue = bignumber_1.bigNumberify(whole);\n    var fractionValue = bignumber_1.bigNumberify(fraction);\n    var wei = (wholeValue.mul(unitInfo.tenPower)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(constants_1.NegativeOne);\n    }\n    return wei;\n}\nexports.parseUnits = parseUnits;\nfunction formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexports.formatEther = formatEther;\nfunction parseEther(ether) {\n    return parseUnits(ether, 18);\n}\nexports.parseEther = parseEther;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/units.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/utf8.js":
/*!*******************************************!*\
  !*** ./node_modules/ethers/utils/utf8.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar constants_1 = __webpack_require__(/*! ../constants */ \"./node_modules/ethers/constants.js\");\nvar errors_1 = __webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethers/utils/bytes.js\");\n///////////////////////////////\nvar UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm = exports.UnicodeNormalizationForm || (exports.UnicodeNormalizationForm = {}));\n;\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nfunction toUtf8Bytes(str, form) {\n    if (form === void 0) { form = UnicodeNormalizationForm.current; }\n    if (form != UnicodeNormalizationForm.current) {\n        errors_1.checkNormalize();\n        str = str.normalize(form);\n    }\n    var result = [];\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            var c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error('invalid utf-8 string');\n            }\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((c >> 18) | 0xf0);\n            result.push(((c >> 12) & 0x3f) | 0x80);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return bytes_1.arrayify(result);\n}\nexports.toUtf8Bytes = toUtf8Bytes;\n;\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction toUtf8String(bytes, ignoreErrors) {\n    bytes = bytes_1.arrayify(bytes);\n    var result = '';\n    var i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        var c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result += String.fromCharCode(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        var extraLength = null;\n        var overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if (!ignoreErrors) {\n                if ((c & 0xc0) === 0x80) {\n                    throw new Error('invalid utf8 byte sequence; unexpected continuation byte');\n                }\n                throw new Error('invalid utf8 byte sequence; invalid prefix');\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i + extraLength > bytes.length) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; too short');\n            }\n            // If there is an invalid unprocessed byte, skip continuation bytes\n            for (; i < bytes.length; i++) {\n                if (bytes[i] >> 6 !== 0x02) {\n                    break;\n                }\n            }\n            continue;\n        }\n        // Remove the length prefix from the char\n        var res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (var j = 0; j < extraLength; j++) {\n            var nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        if (res === null) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; invalid continuation byte');\n            }\n            continue;\n        }\n        // Check for overlong seuences (more bytes than needed)\n        if (res <= overlongMask) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; overlong');\n            }\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; out-of-range');\n            }\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; utf-16 surrogate');\n            }\n            continue;\n        }\n        if (res <= 0xffff) {\n            result += String.fromCharCode(res);\n            continue;\n        }\n        res -= 0x10000;\n        result += String.fromCharCode(((res >> 10) & 0x3ff) + 0xd800, (res & 0x3ff) + 0xdc00);\n    }\n    return result;\n}\nexports.toUtf8String = toUtf8String;\nfunction formatBytes32String(text) {\n    // Get the bytes\n    var bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error('bytes32 string must be less than 32 bytes');\n    }\n    // Zero-pad (implicitly null-terminates)\n    return bytes_1.hexlify(bytes_1.concat([bytes, constants_1.HashZero]).slice(0, 32));\n}\nexports.formatBytes32String = formatBytes32String;\nfunction parseBytes32String(bytes) {\n    var data = bytes_1.arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error('invalid bytes32 - not 32 bytes long');\n    }\n    if (data[31] !== 0) {\n        throw new Error('invalid bytes32 string - no null terminator');\n    }\n    // Find the null termination\n    var length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\nexports.parseBytes32String = parseBytes32String;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/utf8.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/web.js":
/*!******************************************!*\
  !*** ./node_modules/ethers/utils/web.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar xmlhttprequest_1 = __webpack_require__(/*! xmlhttprequest */ \"xmlhttprequest\");\nvar base64_1 = __webpack_require__(/*! ./base64 */ \"./node_modules/ethers/utils/base64.js\");\nvar properties_1 = __webpack_require__(/*! ./properties */ \"./node_modules/ethers/utils/properties.js\");\nvar utf8_1 = __webpack_require__(/*! ./utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nfunction fetchJson(connection, json, processFunc) {\n    var headers = {};\n    var url = null;\n    var timeout = 2 * 60 * 1000;\n    if (typeof (connection) === 'string') {\n        url = connection;\n    }\n    else if (typeof (connection) === 'object') {\n        if (connection.url == null) {\n            errors.throwError('missing URL', errors.MISSING_ARGUMENT, { arg: 'url' });\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === 'number' && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (var key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n            }\n        }\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== 'https:' && connection.allowInsecure !== true) {\n                errors.throwError('basic authentication requires a secure https url', errors.INVALID_ARGUMENT, { arg: 'url', url: url, user: connection.user, password: '[REDACTED]' });\n            }\n            var authorization = connection.user + ':' + connection.password;\n            headers['authorization'] = {\n                key: 'Authorization',\n                value: 'Basic ' + base64_1.encode(utf8_1.toUtf8Bytes(authorization))\n            };\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        var request = new xmlhttprequest_1.XMLHttpRequest();\n        var timer = null;\n        timer = setTimeout(function () {\n            if (timer == null) {\n                return;\n            }\n            timer = null;\n            reject(new Error('timeout'));\n            setTimeout(function () {\n                request.abort();\n            }, 0);\n        }, timeout);\n        var cancelTimeout = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        if (json) {\n            request.open('POST', url, true);\n            headers['content-type'] = { key: 'Content-Type', value: 'application/json' };\n        }\n        else {\n            request.open('GET', url, true);\n        }\n        Object.keys(headers).forEach(function (key) {\n            var header = headers[key];\n            request.setRequestHeader(header.key, header.value);\n        });\n        request.onreadystatechange = function () {\n            if (request.readyState !== 4) {\n                return;\n            }\n            if (request.status != 200) {\n                cancelTimeout();\n                // @TODO: not any!\n                var error = new Error('invalid response - ' + request.status);\n                error.statusCode = request.status;\n                if (request.responseText) {\n                    error.responseText = request.responseText;\n                }\n                reject(error);\n                return;\n            }\n            var result = null;\n            try {\n                result = JSON.parse(request.responseText);\n            }\n            catch (error) {\n                cancelTimeout();\n                // @TODO: not any!\n                var jsonError = new Error('invalid json response');\n                jsonError.orginialError = error;\n                jsonError.responseText = request.responseText;\n                if (json != null) {\n                    jsonError.requestBody = json;\n                }\n                jsonError.url = url;\n                reject(jsonError);\n                return;\n            }\n            if (processFunc) {\n                try {\n                    result = processFunc(result);\n                }\n                catch (error) {\n                    cancelTimeout();\n                    error.url = url;\n                    error.body = json;\n                    error.responseText = request.responseText;\n                    reject(error);\n                    return;\n                }\n            }\n            cancelTimeout();\n            resolve(result);\n        };\n        request.onerror = function (error) {\n            cancelTimeout();\n            reject(error);\n        };\n        try {\n            if (json != null) {\n                request.send(json);\n            }\n            else {\n                request.send();\n            }\n        }\n        catch (error) {\n            cancelTimeout();\n            // @TODO: not any!\n            var connectionError = new Error('connection error');\n            connectionError.error = error;\n            reject(connectionError);\n        }\n    });\n}\nexports.fetchJson = fetchJson;\nfunction poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = properties_1.shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        var timer = null;\n        var done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        var cancel = function () {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(function () {\n                if (cancel()) {\n                    reject(new Error('timeout'));\n                }\n            }, options.timeout);\n        }\n        var fastTimeout = options.fastRetry || null;\n        var attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once('block', check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    var timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    // Fast Timeout, means we quickly try again the first time\n                    if (fastTimeout) {\n                        attempt--;\n                        timeout = fastTimeout;\n                        fastTimeout = null;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\nexports.poll = poll;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/web.js\n");

/***/ }),

/***/ "./node_modules/ethers/utils/wordlist.js":
/*!***********************************************!*\
  !*** ./node_modules/ethers/utils/wordlist.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// This gets overriddenby gulp during bip39-XX\nvar exportWordlist = false;\nvar hash_1 = __webpack_require__(/*! ../utils/hash */ \"./node_modules/ethers/utils/hash.js\");\nvar properties_1 = __webpack_require__(/*! ../utils/properties */ \"./node_modules/ethers/utils/properties.js\");\nfunction check(wordlist) {\n    var words = [];\n    for (var i = 0; i < 2048; i++) {\n        var word = wordlist.getWord(i);\n        if (i !== wordlist.getWordIndex(word)) {\n            return '0x';\n        }\n        words.push(word);\n    }\n    return hash_1.id(words.join('\\n') + '\\n');\n}\nexports.check = check;\nvar Wordlist = /** @class */ (function () {\n    function Wordlist(locale) {\n        properties_1.defineReadOnly(this, 'locale', locale);\n    }\n    // Subclasses may override this\n    Wordlist.prototype.split = function (mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    };\n    // Subclasses may override this\n    Wordlist.prototype.join = function (words) {\n        return words.join(' ');\n    };\n    return Wordlist;\n}());\nexports.Wordlist = Wordlist;\nfunction register(lang, name) {\n    if (!name) {\n        name = lang.locale;\n    }\n    if (exportWordlist) {\n        var g = global;\n        if (!(g.wordlists)) {\n            properties_1.defineReadOnly(g, 'wordlists', {});\n        }\n        if (!g.wordlists[name]) {\n            properties_1.defineReadOnly(g.wordlists, name, lang);\n        }\n        if (g.ethers && g.ethers.wordlists) {\n            if (!g.ethers.wordlists[name]) {\n                properties_1.defineReadOnly(g.ethers.wordlists, name, lang);\n            }\n        }\n    }\n}\nexports.register = register;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3V0aWxzL3dvcmRsaXN0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsMERBQWU7QUFDcEMsbUJBQW1CLG1CQUFPLENBQUMsc0VBQXFCO0FBQ2hEO0FBQ0E7QUFDQSxvQkFBb0IsVUFBVTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2V0aGVycy91dGlscy93b3JkbGlzdC5qcz82NzcwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gVGhpcyBnZXRzIG92ZXJyaWRkZW5ieSBndWxwIGR1cmluZyBiaXAzOS1YWFxudmFyIGV4cG9ydFdvcmRsaXN0ID0gZmFsc2U7XG52YXIgaGFzaF8xID0gcmVxdWlyZShcIi4uL3V0aWxzL2hhc2hcIik7XG52YXIgcHJvcGVydGllc18xID0gcmVxdWlyZShcIi4uL3V0aWxzL3Byb3BlcnRpZXNcIik7XG5mdW5jdGlvbiBjaGVjayh3b3JkbGlzdCkge1xuICAgIHZhciB3b3JkcyA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjA0ODsgaSsrKSB7XG4gICAgICAgIHZhciB3b3JkID0gd29yZGxpc3QuZ2V0V29yZChpKTtcbiAgICAgICAgaWYgKGkgIT09IHdvcmRsaXN0LmdldFdvcmRJbmRleCh3b3JkKSkge1xuICAgICAgICAgICAgcmV0dXJuICcweCc7XG4gICAgICAgIH1cbiAgICAgICAgd29yZHMucHVzaCh3b3JkKTtcbiAgICB9XG4gICAgcmV0dXJuIGhhc2hfMS5pZCh3b3Jkcy5qb2luKCdcXG4nKSArICdcXG4nKTtcbn1cbmV4cG9ydHMuY2hlY2sgPSBjaGVjaztcbnZhciBXb3JkbGlzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBXb3JkbGlzdChsb2NhbGUpIHtcbiAgICAgICAgcHJvcGVydGllc18xLmRlZmluZVJlYWRPbmx5KHRoaXMsICdsb2NhbGUnLCBsb2NhbGUpO1xuICAgIH1cbiAgICAvLyBTdWJjbGFzc2VzIG1heSBvdmVycmlkZSB0aGlzXG4gICAgV29yZGxpc3QucHJvdG90eXBlLnNwbGl0ID0gZnVuY3Rpb24gKG1uZW1vbmljKSB7XG4gICAgICAgIHJldHVybiBtbmVtb25pYy50b0xvd2VyQ2FzZSgpLnNwbGl0KC8gKy9nKTtcbiAgICB9O1xuICAgIC8vIFN1YmNsYXNzZXMgbWF5IG92ZXJyaWRlIHRoaXNcbiAgICBXb3JkbGlzdC5wcm90b3R5cGUuam9pbiA9IGZ1bmN0aW9uICh3b3Jkcykge1xuICAgICAgICByZXR1cm4gd29yZHMuam9pbignICcpO1xuICAgIH07XG4gICAgcmV0dXJuIFdvcmRsaXN0O1xufSgpKTtcbmV4cG9ydHMuV29yZGxpc3QgPSBXb3JkbGlzdDtcbmZ1bmN0aW9uIHJlZ2lzdGVyKGxhbmcsIG5hbWUpIHtcbiAgICBpZiAoIW5hbWUpIHtcbiAgICAgICAgbmFtZSA9IGxhbmcubG9jYWxlO1xuICAgIH1cbiAgICBpZiAoZXhwb3J0V29yZGxpc3QpIHtcbiAgICAgICAgdmFyIGcgPSBnbG9iYWw7XG4gICAgICAgIGlmICghKGcud29yZGxpc3RzKSkge1xuICAgICAgICAgICAgcHJvcGVydGllc18xLmRlZmluZVJlYWRPbmx5KGcsICd3b3JkbGlzdHMnLCB7fSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFnLndvcmRsaXN0c1tuYW1lXSkge1xuICAgICAgICAgICAgcHJvcGVydGllc18xLmRlZmluZVJlYWRPbmx5KGcud29yZGxpc3RzLCBuYW1lLCBsYW5nKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZy5ldGhlcnMgJiYgZy5ldGhlcnMud29yZGxpc3RzKSB7XG4gICAgICAgICAgICBpZiAoIWcuZXRoZXJzLndvcmRsaXN0c1tuYW1lXSkge1xuICAgICAgICAgICAgICAgIHByb3BlcnRpZXNfMS5kZWZpbmVSZWFkT25seShnLmV0aGVycy53b3JkbGlzdHMsIG5hbWUsIGxhbmcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5yZWdpc3RlciA9IHJlZ2lzdGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/utils/wordlist.js\n");

/***/ }),

/***/ "./node_modules/ethers/wallet.js":
/*!***************************************!*\
  !*** ./node_modules/ethers/wallet.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bytes_1 = __webpack_require__(/*! ./utils/bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar hash_1 = __webpack_require__(/*! ./utils/hash */ \"./node_modules/ethers/utils/hash.js\");\nvar hdnode_1 = __webpack_require__(/*! ./utils/hdnode */ \"./node_modules/ethers/utils/hdnode.js\");\nvar json_wallet_1 = __webpack_require__(/*! ./utils/json-wallet */ \"./node_modules/ethers/utils/json-wallet.js\");\nvar keccak256_1 = __webpack_require__(/*! ./utils/keccak256 */ \"./node_modules/ethers/utils/keccak256.js\");\nvar properties_1 = __webpack_require__(/*! ./utils/properties */ \"./node_modules/ethers/utils/properties.js\");\nvar random_bytes_1 = __webpack_require__(/*! ./utils/random-bytes */ \"./node_modules/ethers/utils/random-bytes.js\");\nvar secretStorage = __importStar(__webpack_require__(/*! ./utils/secret-storage */ \"./node_modules/ethers/utils/secret-storage.js\"));\nvar signing_key_1 = __webpack_require__(/*! ./utils/signing-key */ \"./node_modules/ethers/utils/signing-key.js\");\nvar transaction_1 = __webpack_require__(/*! ./utils/transaction */ \"./node_modules/ethers/utils/transaction.js\");\n// Imported Abstracts\nvar abstract_signer_1 = __webpack_require__(/*! ./abstract-signer */ \"./node_modules/ethers/abstract-signer.js\");\nvar abstract_provider_1 = __webpack_require__(/*! ./providers/abstract-provider */ \"./node_modules/ethers/providers/abstract-provider.js\");\nvar errors = __importStar(__webpack_require__(/*! ./errors */ \"./node_modules/ethers/errors.js\"));\nvar Wallet = /** @class */ (function (_super) {\n    __extends(Wallet, _super);\n    function Wallet(privateKey, provider) {\n        var _this = _super.call(this) || this;\n        errors.checkNew(_this, Wallet);\n        // Make sure we have a valid signing key\n        if (signing_key_1.SigningKey.isSigningKey(privateKey)) {\n            properties_1.defineReadOnly(_this, 'signingKey', privateKey);\n        }\n        else {\n            properties_1.defineReadOnly(_this, 'signingKey', new signing_key_1.SigningKey(privateKey));\n        }\n        properties_1.defineReadOnly(_this, 'provider', provider);\n        return _this;\n    }\n    Object.defineProperty(Wallet.prototype, \"address\", {\n        get: function () { return this.signingKey.address; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wallet.prototype, \"mnemonic\", {\n        get: function () { return this.signingKey.mnemonic; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wallet.prototype, \"path\", {\n        get: function () { return this.signingKey.path; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wallet.prototype, \"privateKey\", {\n        get: function () { return this.signingKey.privateKey; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Create a new instance of this Wallet connected to provider.\n     */\n    Wallet.prototype.connect = function (provider) {\n        if (!(abstract_provider_1.Provider.isProvider(provider))) {\n            errors.throwError('invalid provider', errors.INVALID_ARGUMENT, { argument: 'provider', value: provider });\n        }\n        return new Wallet(this.signingKey, provider);\n    };\n    Wallet.prototype.getAddress = function () {\n        return Promise.resolve(this.address);\n    };\n    Wallet.prototype.sign = function (transaction) {\n        var _this = this;\n        return properties_1.resolveProperties(transaction).then(function (tx) {\n            var rawTx = transaction_1.serialize(tx);\n            var signature = _this.signingKey.signDigest(keccak256_1.keccak256(rawTx));\n            return transaction_1.serialize(tx, signature);\n        });\n    };\n    Wallet.prototype.signMessage = function (message) {\n        return Promise.resolve(bytes_1.joinSignature(this.signingKey.signDigest(hash_1.hashMessage(message))));\n    };\n    Wallet.prototype.getBalance = function (blockTag) {\n        if (!this.provider) {\n            throw new Error('missing provider');\n        }\n        return this.provider.getBalance(this.address, blockTag);\n    };\n    Wallet.prototype.getTransactionCount = function (blockTag) {\n        if (!this.provider) {\n            throw new Error('missing provider');\n        }\n        return this.provider.getTransactionCount(this.address, blockTag);\n    };\n    Wallet.prototype.sendTransaction = function (transaction) {\n        var _this = this;\n        if (!this.provider) {\n            throw new Error('missing provider');\n        }\n        if (transaction.nonce == null) {\n            transaction = properties_1.shallowCopy(transaction);\n            transaction.nonce = this.getTransactionCount(\"pending\");\n        }\n        return transaction_1.populateTransaction(transaction, this.provider, this.address).then(function (tx) {\n            return _this.sign(tx).then(function (signedTransaction) {\n                return _this.provider.sendTransaction(signedTransaction);\n            });\n        });\n    };\n    Wallet.prototype.encrypt = function (password, options, progressCallback) {\n        if (typeof (options) === 'function' && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== 'function') {\n            throw new Error('invalid callback');\n        }\n        if (!options) {\n            options = {};\n        }\n        if (this.mnemonic) {\n            // Make sure we don't accidentally bubble the mnemonic up the call-stack\n            options = properties_1.shallowCopy(options);\n            // Set the mnemonic and path\n            options.mnemonic = this.mnemonic;\n            options.path = this.path;\n        }\n        return secretStorage.encrypt(this.privateKey, password, options, progressCallback);\n    };\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    Wallet.createRandom = function (options) {\n        var entropy = random_bytes_1.randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = bytes_1.arrayify(keccak256_1.keccak256(bytes_1.concat([entropy, options.extraEntropy])).substring(0, 34));\n        }\n        var mnemonic = hdnode_1.entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    };\n    Wallet.fromEncryptedJson = function (json, password, progressCallback) {\n        if (json_wallet_1.isCrowdsaleWallet(json)) {\n            try {\n                if (progressCallback) {\n                    progressCallback(0);\n                }\n                var privateKey = secretStorage.decryptCrowdsale(json, password);\n                if (progressCallback) {\n                    progressCallback(1);\n                }\n                return Promise.resolve(new Wallet(privateKey));\n            }\n            catch (error) {\n                return Promise.reject(error);\n            }\n        }\n        else if (json_wallet_1.isSecretStorageWallet(json)) {\n            return secretStorage.decrypt(json, password, progressCallback).then(function (signingKey) {\n                return new Wallet(signingKey);\n            });\n        }\n        return Promise.reject('invalid wallet JSON');\n    };\n    Wallet.fromMnemonic = function (mnemonic, path, wordlist) {\n        if (!path) {\n            path = hdnode_1.defaultPath;\n        }\n        return new Wallet(hdnode_1.fromMnemonic(mnemonic, wordlist).derivePath(path));\n    };\n    return Wallet;\n}(abstract_signer_1.Signer));\nexports.Wallet = Wallet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/wallet.js\n");

/***/ }),

/***/ "./node_modules/ethers/wordlists/index.js":
/*!************************************************!*\
  !*** ./node_modules/ethers/wordlists/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar lang_en_1 = __webpack_require__(/*! ./lang-en */ \"./node_modules/ethers/wordlists/lang-en.js\");\nvar lang_es_1 = __webpack_require__(/*! ./lang-es */ \"./node_modules/ethers/wordlists/lang-es.js\");\nvar lang_fr_1 = __webpack_require__(/*! ./lang-fr */ \"./node_modules/ethers/wordlists/lang-fr.js\");\nvar lang_ja_1 = __webpack_require__(/*! ./lang-ja */ \"./node_modules/ethers/wordlists/lang-ja.js\");\nvar lang_ko_1 = __webpack_require__(/*! ./lang-ko */ \"./node_modules/ethers/wordlists/lang-ko.js\");\nvar lang_it_1 = __webpack_require__(/*! ./lang-it */ \"./node_modules/ethers/wordlists/lang-it.js\");\nvar lang_zh_1 = __webpack_require__(/*! ./lang-zh */ \"./node_modules/ethers/wordlists/lang-zh.js\");\nvar en = lang_en_1.langEn;\nexports.en = en;\nvar es = lang_es_1.langEs;\nexports.es = es;\nvar fr = lang_fr_1.langFr;\nexports.fr = fr;\nvar it = lang_it_1.langIt;\nexports.it = it;\nvar ja = lang_ja_1.langJa;\nexports.ja = ja;\nvar ko = lang_ko_1.langKo;\nexports.ko = ko;\nvar zh = lang_zh_1.langZhCn;\nexports.zh = zh;\nvar zh_cn = lang_zh_1.langZhCn;\nexports.zh_cn = zh_cn;\nvar zh_tw = lang_zh_1.langZhTw;\nexports.zh_tw = zh_tw;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3dvcmRsaXN0cy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBVztBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBVztBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBVztBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBVztBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBVztBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBVztBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBVztBQUNuQztBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLGFBQWE7QUFDYjtBQUNBLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL3dvcmRsaXN0cy9pbmRleC5qcz82ODMyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBsYW5nX2VuXzEgPSByZXF1aXJlKFwiLi9sYW5nLWVuXCIpO1xudmFyIGxhbmdfZXNfMSA9IHJlcXVpcmUoXCIuL2xhbmctZXNcIik7XG52YXIgbGFuZ19mcl8xID0gcmVxdWlyZShcIi4vbGFuZy1mclwiKTtcbnZhciBsYW5nX2phXzEgPSByZXF1aXJlKFwiLi9sYW5nLWphXCIpO1xudmFyIGxhbmdfa29fMSA9IHJlcXVpcmUoXCIuL2xhbmcta29cIik7XG52YXIgbGFuZ19pdF8xID0gcmVxdWlyZShcIi4vbGFuZy1pdFwiKTtcbnZhciBsYW5nX3poXzEgPSByZXF1aXJlKFwiLi9sYW5nLXpoXCIpO1xudmFyIGVuID0gbGFuZ19lbl8xLmxhbmdFbjtcbmV4cG9ydHMuZW4gPSBlbjtcbnZhciBlcyA9IGxhbmdfZXNfMS5sYW5nRXM7XG5leHBvcnRzLmVzID0gZXM7XG52YXIgZnIgPSBsYW5nX2ZyXzEubGFuZ0ZyO1xuZXhwb3J0cy5mciA9IGZyO1xudmFyIGl0ID0gbGFuZ19pdF8xLmxhbmdJdDtcbmV4cG9ydHMuaXQgPSBpdDtcbnZhciBqYSA9IGxhbmdfamFfMS5sYW5nSmE7XG5leHBvcnRzLmphID0gamE7XG52YXIga28gPSBsYW5nX2tvXzEubGFuZ0tvO1xuZXhwb3J0cy5rbyA9IGtvO1xudmFyIHpoID0gbGFuZ196aF8xLmxhbmdaaENuO1xuZXhwb3J0cy56aCA9IHpoO1xudmFyIHpoX2NuID0gbGFuZ196aF8xLmxhbmdaaENuO1xuZXhwb3J0cy56aF9jbiA9IHpoX2NuO1xudmFyIHpoX3R3ID0gbGFuZ196aF8xLmxhbmdaaFR3O1xuZXhwb3J0cy56aF90dyA9IHpoX3R3O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/wordlists/index.js\n");

/***/ }),

/***/ "./node_modules/ethers/wordlists/lang-en.js":
/*!**************************************************!*\
  !*** ./node_modules/ethers/wordlists/lang-en.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar wordlist_1 = __webpack_require__(/*! ../utils/wordlist */ \"./node_modules/ethers/utils/wordlist.js\");\nvar words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nvar wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, ' $1').toLowerCase().substring(1).split(' ');\n    if (wordlist_1.check(lang) !== '0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60') {\n        wordlist = null;\n        throw new Error('BIP39 Wordlist for en (English) FAILED');\n    }\n}\nvar LangEn = /** @class */ (function (_super) {\n    __extends(LangEn, _super);\n    function LangEn() {\n        return _super.call(this, 'en') || this;\n    }\n    LangEn.prototype.getWord = function (index) {\n        loadWords(this);\n        return wordlist[index];\n    };\n    LangEn.prototype.getWordIndex = function (word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    };\n    return LangEn;\n}(wordlist_1.Wordlist));\nvar langEn = new LangEn();\nexports.langEn = langEn;\nwordlist_1.register(langEn);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/wordlists/lang-en.js\n");

/***/ }),

/***/ "./node_modules/ethers/wordlists/lang-es.js":
/*!**************************************************!*\
  !*** ./node_modules/ethers/wordlists/lang-es.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar wordlist_1 = __webpack_require__(/*! ../utils/wordlist */ \"./node_modules/ethers/utils/wordlist.js\");\nvar utf8_1 = __webpack_require__(/*! ../utils/utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar errors_1 = __webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\");\nvar words = \"A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo\";\nvar lookup = {};\nvar wordlist = null;\nfunction dropDiacritic(word) {\n    errors_1.checkNormalize();\n    return utf8_1.toUtf8String(Array.prototype.filter.call(utf8_1.toUtf8Bytes(word.normalize('NFD').toLowerCase()), function (c) {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\nfunction expand(word) {\n    var output = [];\n    Array.prototype.forEach.call(utf8_1.toUtf8Bytes(word), function (c) {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n            // n-tilde\n        }\n        else if (c === 126) {\n            output.push(110);\n            output.push(204);\n            output.push(131);\n        }\n        else {\n            output.push(c);\n        }\n    });\n    return utf8_1.toUtf8String(output);\n}\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, ' $1').toLowerCase().substring(1).split(' ').map(function (w) { return expand(w); });\n    wordlist.forEach(function (word, index) {\n        lookup[dropDiacritic(word)] = index;\n    });\n    if (wordlist_1.check(lang) !== '0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300') {\n        wordlist = null;\n        throw new Error('BIP39 Wordlist for es (Spanish) FAILED');\n    }\n}\nvar LangEs = /** @class */ (function (_super) {\n    __extends(LangEs, _super);\n    function LangEs() {\n        return _super.call(this, 'es') || this;\n    }\n    LangEs.prototype.getWord = function (index) {\n        loadWords(this);\n        return wordlist[index];\n    };\n    LangEs.prototype.getWordIndex = function (word) {\n        loadWords(this);\n        var index = lookup[dropDiacritic(word)];\n        if (typeof (index) !== 'number') {\n            return -1;\n        }\n        return index;\n    };\n    return LangEs;\n}(wordlist_1.Wordlist));\nvar langEs = new LangEs();\nexports.langEs = langEs;\nwordlist_1.register(langEs);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/wordlists/lang-es.js\n");

/***/ }),

/***/ "./node_modules/ethers/wordlists/lang-fr.js":
/*!**************************************************!*\
  !*** ./node_modules/ethers/wordlists/lang-fr.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar wordlist_1 = __webpack_require__(/*! ../utils/wordlist */ \"./node_modules/ethers/utils/wordlist.js\");\nvar utf8_1 = __webpack_require__(/*! ../utils/utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar errors_1 = __webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\");\nvar words = \"\";\nvar wordlist = null;\nvar lookup = {};\nfunction dropDiacritic(word) {\n    errors_1.checkNormalize();\n    return utf8_1.toUtf8String(Array.prototype.filter.call(utf8_1.toUtf8Bytes(word.normalize('NFD').toLowerCase()), function (c) {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\nfunction expand(word) {\n    var output = [];\n    Array.prototype.forEach.call(utf8_1.toUtf8Bytes(word), function (c) {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n            // Grave accent\n        }\n        else if (c === 45) {\n            output.push(204);\n            output.push(128);\n        }\n        else {\n            output.push(c);\n        }\n    });\n    return utf8_1.toUtf8String(output);\n}\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, ' $1').toLowerCase().substring(1).split(' ').map(function (w) { return expand(w); });\n    wordlist.forEach(function (word, index) {\n        lookup[dropDiacritic(word)] = index;\n    });\n    if (wordlist_1.check(lang) !== '0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045') {\n        wordlist = null;\n        throw new Error('BIP39 Wordlist for fr (French) FAILED');\n    }\n}\nvar LangFr = /** @class */ (function (_super) {\n    __extends(LangFr, _super);\n    function LangFr() {\n        return _super.call(this, 'fr') || this;\n    }\n    LangFr.prototype.getWord = function (index) {\n        loadWords(this);\n        return wordlist[index];\n    };\n    LangFr.prototype.getWordIndex = function (word) {\n        loadWords(this);\n        var index = lookup[dropDiacritic(word)];\n        if (typeof (index) !== 'number') {\n            return -1;\n        }\n        return index;\n    };\n    return LangFr;\n}(wordlist_1.Wordlist));\nvar langFr = new LangFr();\nexports.langFr = langFr;\nwordlist_1.register(langFr);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/wordlists/lang-fr.js\n");

/***/ }),

/***/ "./node_modules/ethers/wordlists/lang-it.js":
/*!**************************************************!*\
  !*** ./node_modules/ethers/wordlists/lang-it.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar wordlist_1 = __webpack_require__(/*! ../utils/wordlist */ \"./node_modules/ethers/utils/wordlist.js\");\nvar words = \"AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa\";\nvar wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, ' $1').toLowerCase().substring(1).split(' ');\n    if (wordlist_1.check(lang) !== '0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620') {\n        wordlist = null;\n        throw new Error('BIP39 Wordlist for it (Italian) FAILED');\n    }\n}\nvar LangIt = /** @class */ (function (_super) {\n    __extends(LangIt, _super);\n    function LangIt() {\n        return _super.call(this, 'it') || this;\n    }\n    LangIt.prototype.getWord = function (index) {\n        loadWords(this);\n        return wordlist[index];\n    };\n    LangIt.prototype.getWordIndex = function (word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    };\n    return LangIt;\n}(wordlist_1.Wordlist));\nvar langIt = new LangIt();\nexports.langIt = langIt;\nwordlist_1.register(langIt);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJzL3dvcmRsaXN0cy9sYW5nLWl0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDbkYsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRCw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLG1CQUFPLENBQUMsa0VBQW1CO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvZXRoZXJzL3dvcmRsaXN0cy9sYW5nLWl0LmpzP2VmMWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB3b3JkbGlzdF8xID0gcmVxdWlyZShcIi4uL3V0aWxzL3dvcmRsaXN0XCIpO1xudmFyIHdvcmRzID0gXCJBYmFjb0FiYmFnbGlvQWJiaW5hdG9BYmV0ZUFiaXNzb0Fib2xpcmVBYnJhc2l2b0Ficm9nYXRvQWNjYWRlcmVBY2Nlbm5vQWNjdXNhdG9BY2V0b25lQWNoaWxsZUFjaWRvQWNxdWFBY3JlQWNyaWxpY29BY3JvYmF0YUFjdXRvQWRhZ2lvQWRkZWJpdG9BZGRvbWVBZGVndWF0b0FkZXJpcmVBZGlwZUFkb3R0YXJlQWR1bGFyZUFmZmFiaWxlQWZmZXR0b0FmZmlzc29BZmZyYW50b0Fmb3Jpc21hQWZvc29BZnJpY2Fub0FnYXZlQWdlbnRlQWdldm9sZUFnZ2FuY2lvQWdpcmVBZ2l0YXJlQWdvbmlzbW9BZ3JpY29sb0FncnVtZXRvQWd1enpvQWxhYmFyZGFBbGF0b0FsYmF0cm9BbGJlcmF0b0FsYm9BbGJ1bWVBbGNlQWxjb2xpY29BbGV0dG9uZUFsZmFBbGdlYnJhQWxpYW50ZUFsaWJpQWxpbWVudG9BbGxhZ2F0b0FsbGVncm9BbGxpZXZvQWxsb2RvbGFBbGx1c2l2b0FsbWVub0Fsb2dlbm9BbHBhY2FBbHBlc3RyZUFsdGFsZW5hQWx0ZXJub0FsdGljY2lvQWx0cm92ZUFsdW5ub0FsdmVvbG9BbHphcmVBbWFsZ2FtYUFtYW5pdGFBbWFyZW5hQW1iaXRvQW1icmF0b0FtZWJhQW1lcmljYUFtZXRpc3RhQW1pY29BbW1hc3NvQW1tZW5kYUFtbWlyYXJlQW1tb25pdG9BbW9yZUFtcGlvQW1wbGlhcmVBbXVsZXRvQW5hY2FyZG9BbmFncmFmZUFuYWxpc3RhQW5hcmNoaWFBbmF0cmFBbmNhQW5jZWxsYUFuY29yYUFuZGFyZUFuZHJlYUFuZWxsb0FuZ2Vsb0FuZ29sYXJlQW5ndXN0b0FuaW1hQW5uZWdhcmVBbm5pZGF0b0Fubm9Bbm51bmNpb0Fub25pbW9BbnRpY2lwb0FuemlBcGF0aWNvQXBlcnR1cmFBcG9kZUFwcGFyaXJlQXBwZXRpdG9BcHBvZ2dpb0FwcHJvZG9BcHB1bnRvQXByaWxlQXJhYmljYUFyYWNoaWRlQXJhZ29zdGFBcmFsZGljYUFyYW5jaW9BcmF0dXJhQXJhenpvQXJiaXRyb0FyY2hpdmlvQXJkaXRvQXJlbmlsZUFyZ2VudG9BcmdpbmVBcmd1dG9BcmlhQXJtb25pYUFybmVzZUFycmVkYXRvQXJyaW5nYUFycm9zdG9BcnNlbmljb0Fyc29BcnRlZmljZUFyemlsbG9Bc2NpdXR0b0FzY29sdG9Bc2Vwc2lBc2V0dGljb0FzZmFsdG9Bc2lub0Fzb2xhQXNwaXJhdG9Bc3Byb0Fzc2FnZ2lvQXNzZUFzc29sdXRvQXNzdXJkb0FzdGFBc3RlbnV0b0FzdGljZUFzdHJhdHRvQXRhdmljb0F0ZWlzbW9BdG9taWNvQXRvbm9BdHRlc2FBdHRpdmFyZUF0dG9ybm9BdHRyaXRvQXR0dWFsZUF1c2lsaW9BdXN0cmlhQXV0aXN0YUF1dG9ub21vQXV0dW5ub0F2YW56YXRvQXZlcmVBdnZlbmlyZUF2dmlzb0F2dm9sZ2VyZUF6aW9uZUF6b3RvQXp6aW1vQXp6dXJyb0JhYmVsZUJhY2Nhbm9CYWNpbm9CYWNvQmFkZXNzYUJhZGlsYXRhQmFnbmF0b0JhaXRhQmFsY29uZUJhbGRvQmFsZW5hQmFsbGF0YUJhbHphbm9CYW1iaW5vQmFuZGlyZUJhcmFvbmRhQmFyYmFyb0JhcmNhQmFyaXRvbm9CYXJsdW1lQmFyb2Njb0Jhc2lsaWNvQmFzc29CYXRvc3RhQmF0dHV0b0JhdWxlQmF2YUJhdm9zYUJlY2NvQmVmZmFCZWxnaW9CZWx2YUJlbmRhQmVuZXZvbGVCZW5pZ25vQmVuemluYUJlcmVCZXJsaW5hQmV0YUJpYml0YUJpY2lCaWRvbmVCaWZpZG9CaWdhQmlsYW5jaWFCaW1ib0Jpbm9jb2xvQmlvbG9nb0JpcGVkZUJpcG9sYXJlQmlyYmFudGVCaXJyYUJpc2NvdHRvQmlzZXN0b0Jpc25vbm5vQmlzb250ZUJpc3R1cmlCaXp6YXJyb0JsYW5kb0JsYXR0YUJvbGxpdG9Cb25pZmljb0JvcmRvQm9zY29Cb3Rhbmljb0JvdHRpbm9Cb3p6b2xvQnJhY2Npb0JyYWRpcG9CcmFtYUJyYW5jYUJyYXZ1cmFCcmV0ZWxsYUJyZXZldHRvQnJlenphQnJpZ2xpYUJyaWxsYW50ZUJyaW5kYXJlQnJvY2NvbG9Ccm9kb0Jyb256aW5hQnJ1bGxvQnJ1bm9CdWJib25lQnVjYUJ1ZGlub0J1ZmZvbmVCdWlvQnVsYm9CdW9ub0J1cmxvbmVCdXJyYXNjYUJ1c3NvbGFCdXN0YUNhZGV0dG9DYWR1Y29DYWxhbWFyb0NhbGNvbG9DYWxlc3NlQ2FsaWJyb0NhbG1vQ2Fsb3JpYUNhbWJ1c2FDYW1lcmF0YUNhbWljaWFDYW1taW5vQ2Ftb2xhQ2FtcGFsZUNhbmFwYUNhbmRlbGFDYW5lQ2FuaW5vQ2Fub3R0b0NhbnRpbmFDYXBhY2VDYXBlbGxvQ2FwaXRvbG9DYXBvZ2lyb0NhcHBlcm9DYXByYUNhcHN1bGFDYXJhcGFjZUNhcmNhc3NhQ2FyZG9DYXJpc21hQ2Fyb3ZhbmFDYXJyZXR0b0NhcnRvbGluYUNhc2FjY2lvQ2FzY2F0YUNhc2VybWFDYXNvQ2Fzc29uZUNhc3RlbGxvQ2FzdWFsZUNhdGFzdGFDYXRlbmFDYXRyYW1lQ2F1dG9DYXZpbGxvQ2VkaWJpbGVDZWRyYXRhQ2VmYWxvQ2VsZWJyZUNlbGx1bGFyZUNlbmFDZW5vbmVDZW50ZXNpbW9DZXJhbWljYUNlcmNhcmVDZXJ0b0NlcnVtZUNlcnZlbGxvQ2Vzb2lhQ2VzcG9DZXRvQ2hlbGFDaGlhcm9DaGljY2FDaGllZGVyZUNoaW1lcmFDaGluYUNoaXJ1cmdvQ2hpdGFycmFDaWFvQ2ljbGlzbW9DaWZyYXJlQ2lnbm9DaWxpbmRyb0Npb3R0b2xvQ2lyY2FDaXJyb3NpQ2l0cmljb0NpdHRhZGlub0NpdWZmb0NpdmV0dGFDaXZpbGVDbGFzc2ljb0NsaW5pY2FDbG9yb0NvY2NvQ29kYXJkb0NvZGljZUNvZXJlbnRlQ29nbm9tZUNvbGxhcmVDb2xtYXRvQ29sb3JlQ29scG9zb0NvbHRpdmF0b0NvbHphQ29tYUNvbWV0YUNvbW1hbmRvQ29tb2RvQ29tcHV0ZXJDb211bmVDb25jaXNvQ29uZHVycmVDb25mZXJtYUNvbmdlbGFyZUNvbml1Z2VDb25uZXNzb0Nvbm9zY2VyZUNvbnN1bW9Db250aW51b0NvbnZlZ25vQ29wZXJ0b0NvcGlvbmVDb3BwaWFDb3ByaWNhcG9Db3JhenphQ29yZGF0YUNvcmljYXRvQ29ybmljZUNvcm9sbGFDb3Jwb0NvcnJlZG9Db3JzaWFDb3J0ZXNlQ29zbWljb0Nvc3RhbnRlQ290dHVyYUNvdmF0b0NyYXRlcmVDcmF2YXR0YUNyZWF0b0NyZWRlcmVDcmVtb3NvQ3Jlc2NpdGFDcmV0YUNyaWNldG9DcmluYWxlQ3Jpc2lDcml0aWNvQ3JvY2VDcm9uYWNhQ3Jvc3RhdGFDcnVjaWFsZUNydXNjYUN1Y2lyZUN1Y3Vsb0N1Z2lub0N1bGxhdG9DdXBvbGFDdXJhdG9yZUN1cnNvcmVDdXJ2b0N1c2Npbm9DdXN0b2RlRGFkb0RhaW5vRGFsbWF0YURhbWVyaW5vRGFuaWVsYURhbm5vc29EYW56YXJlRGF0YXRvRGF2YW50aURhdnZlcm9EZWJ1dHRvRGVjZW5uaW9EZWNpc29EZWNsaW5vRGVjb2xsb0RlY3JldG9EZWRpY2F0b0RlZmluaXRvRGVmb3JtZURlZ25vRGVsZWdhcmVEZWxmaW5vRGVsaXJpb0RlbHRhRGVtZW56YURlbm90YXRvRGVudHJvRGVwb3NpdG9EZXJhcGF0YURlcml2YXJlRGVyb2dhRGVzY3JpdHRvRGVzZXJ0b0Rlc2lkZXJpb0Rlc3VtZXJlRGV0ZXJzaXZvRGV2b3RvRGlhbWV0cm9EaWNlbWJyZURpZWRyb0RpZmVzb0RpZmZ1c29EaWdlcmlyZURpZ2l0YWxlRGlsdXZpb0RpbmFtaWNvRGlubmFuemlEaXBpbnRvRGlwbG9tYURpcG9sb0RpcmFkYXJlRGlyZURpcm90dG9EaXJ1cG9EaXNhZ2lvRGlzY3JldG9EaXNmYXJlRGlzZ2Vsb0Rpc3Bvc3RvRGlzdGFuemFEaXN1bWFub0RpdG9EaXZhbm9EaXZlbHRvRGl2aWRlcmVEaXZvcmF0b0RvYmxvbmVEb2NlbnRlRG9nYW5hbGVEb2dtYURvbGNlRG9tYXRvRG9tZW5pY2FEb21pbmFyZURvbmRvbG9Eb25vRG9ybWlyZURvdGVEb3R0b3JlRG92dXRvRG96emluYURyYWdvRHJ1aWRvRHViYmlvRHViaXRhcmVEdWNhbGVEdW5hRHVvbW9EdXBsaWNlRHVyYXR1cm9FYmFub0VjY2Vzc29FY2NvRWNsaXNzaUVjb25vbWlhRWRlcmFFZGljb2xhRWRpbGVFZGl0b3JpYUVkdWNhcmVFZ2Vtb25pYUVnbGlFZ29pc21vRWdyZWdpb0VsYWJvcmF0b0VsYXJnaXJlRWxlZ2FudGVFbGVuY2F0b0VsZXR0b0VsZXZhcmVFbGZpY29FbGljYUVsbW9FbHNhRWx1c29FbWFuYXRvRW1ibGVtYUVtZXNzb0VtaXJvRW1vdGl2b0Vtb3ppb25lRW1waXJpY29FbXVsb0VuZGVtaWNvRW5kdXJvRW5lcmdpYUVuZmFzaUVub3RlY2FFbnRyYXJlRW56aW1hRXBhdGl0ZUVwaWxvZ29FcGlzb2Rpb0Vwb2NhbGVFcHB1cmVFcXVhdG9yZUVyYXJpb0VyYmFFcmJvc29FcmVkZUVyZW1pdGFFcmlnZXJlRXJtZXRpY29Fcm9lRXJvc2l2b0VycmFudGVFc2Fnb25vRXNhbWVFc2FuaW1lRXNhdWRpcmVFc2NhRXNlbXBpb0VzZXJjaXRvRXNpYml0b0VzaWdlbnRlRXNpc3RlcmVFc2l0b0Vzb2ZhZ29Fc29ydGF0b0Vzb3NvRXNwYW5zb0VzcHJlc3NvRXNzZW56YUVzc29Fc3Rlc29Fc3RpbWFyZUVzdG9uaWFFc3Ryb3NvRXN1bHRhcmVFdGlsaWNvRXRuaWNvRXRydXNjb0V0dG9FdWNsaWRlb0V1cm9wYUV2YXNvRXZpZGVuemFFdml0YXRvRXZvbHV0b0V2dml2YUZhYmJyaWNhRmFjY2VuZGFGYWNoaXJvRmFsY29GYW1pZ2xpYUZhbmFsZUZhbmZhcmFGYW5nb0ZhbnRhc21hRmFyZUZhcmZhbGxhRmFyaW5vc29GYXJtYWNvRmFzY2lhRmFzdG9zb0Zhc3VsbG9GYXRpY2FyZUZhdG9GYXZvbG9zb0ZlYmJyZUZlY29sYUZlZGVGZWdhdG9GZWxwYUZlbHRyb0ZlbW1pbmFGZW5kZXJlRmVub21lbm9GZXJtZW50b0ZlcnJvRmVydGlsZUZlc3N1cmFGZXN0aXZvRmV0dGFGZXVkb0ZpYWJhRmlkdWNpYUZpZmFGaWd1cmF0b0ZpbG9GaW5hbnphRmluZXN0cmFGaW5pcmVGaW9yZUZpc2NhbGVGaXNpY29GaXVtZUZsYWNvbmVGbGFtZW5jb0ZsZWJvRmxlbW1hRmxvcmlkb0ZsdWVudGVGbHVvcm9Gb2JpY29Gb2NhY2NpYUZvY29zb0ZvZGVyYXRvRm9nbGlvRm9sYXRhRm9sY2xvcmVGb2xnb3JlRm9uZGVudGVGb25ldGljb0ZvbmlhRm9udGFuYUZvcmJpdG9Gb3JjaGV0dGFGb3Jlc3RhRm9ybWljYUZvcm5haW9Gb3JvRm9ydGV6emFGb3J6YXJlRm9zZmF0b0Zvc3NvRnJhY2Fzc29GcmFuYUZyYXNzaW5vRnJhdGVsbG9GcmVjY2V0dGFGcmVuYXRhRnJlc2NvRnJpZ29Gcm9sbGlub0Zyb25kZUZydWdhbGVGcnV0dGFGdWNpbGF0YUZ1Y3NpYUZ1Z2dlbnRlRnVsbWluZUZ1bHZvRnVtYW50ZUZ1bWV0dG9GdW1vc29GdW5lRnVuemlvbmVGdW9jb0Z1cmJvRnVyZ29uZUZ1cm9yZUZ1c29GdXRpbGVHYWJiaWFub0dhZmZlR2FsYXRlb0dhbGxpbmFHYWxvcHBvR2FtYmVyb0dhbW1hR2FyYW56aWFHYXJib0dhcm9mYW5vR2Fyem9uZUdhc2RvdHRvR2Fzb2xpb0dhc3RyaWNvR2F0dG9HYXVkaW9HYXplYm9HYXp6ZWxsYUdlY29HZWxhdGluYUdlbHNvR2VtZWxsb0dlbW1hdG9HZW5lR2VuaXRvcmVHZW5uYWlvR2Vub3RpcG9HZXJnb0doZXBhcmRvR2hpYWNjaW9HaGlzYUdpYWxsb0dpbGRhR2luZXByb0dpb2NhcmVHaW9pZWxsb0dpb3Jub0dpb3ZlR2lyYXRvR2lyb25lR2l0dGF0YUdpdWRpemlvR2l1cmF0b0dpdXN0b0dsb2J1bG9HbHV0aW5lR25vbW9Hb2JiYUdvbGZHb21pdG9Hb21tb25lR29uZmlvR29ubmFHb3Zlcm5vR3JhY2lsZUdyYWRvR3JhZmljb0dyYW1tb0dyYW5kZUdyYXR0YXJlR3Jhdm9zb0dyYXppYUdyZWNhR3JlZ2dlR3JpZm9uZUdyaWdpb0dyaW56YUdyb3R0YUdydXBwb0d1YWRhZ25vR3VhaW9HdWFudG9HdWFyZGFyZUd1Zm9HdWlkYXJlSWJlcm5hdG9JY29uYUlkZW50aWNvSWRpbGxpb0lkb2xvSWRyYUlkcmljb0lkcm9nZW5vSWdpZW5lSWduYXJvSWdub3JhdG9JbGFyZUlsbGVzb0lsbG9naWNvSWxsdWRlcmVJbWJhbGxvSW1iZXZ1dG9JbWJvY2NvSW1idXRvSW1tYW5lSW1tZXJzb0ltbW9sYXRvSW1wYWNjb0ltcGV0b0ltcGllZ29JbXBvcnRvSW1wcm9udGFJbmFsYXJlSW5hcmNhcmVJbmF0dGl2b0luY2FudG9JbmNlbmRpb0luY2hpbm9JbmNpc2l2b0luY2x1c29JbmNvbnRyb0luY3JvY2lvSW5jdWJvSW5kYWdpbmVJbmRpYUluZG9sZUluZWRpdG9JbmZhdHRpSW5maWxhcmVJbmZsaXR0b0luZ2FnZ2lvSW5nZWdub0luZ2xlc2VJbmdvcmRvSW5ncm9zc29Jbm5lc2NvSW5vZG9yZUlub2x0cmFyZUlub25kYXRvSW5zYW5vSW5zZXR0b0luc2llbWVJbnNvbm5pYUluc3VsaW5hSW50YXNhdG9JbnRlcm9JbnRvbmFjb0ludHVpdG9JbnVtaWRpcmVJbnZhbGlkb0ludmVjZUludml0b0lwZXJib2xlSXBub3RpY29JcG90ZXNpSXBwaWNhSXJpZGVJcmxhbmRhSXJvbmljb0lycmlnYXRvSXJyb3JhcmVJc29sYXRvSXNvdG9wb0lzdGVyaWNvSXN0aXR1dG9Jc3RyaWNlSXRhbGlhSXRlcmFyZUxhYmJyb0xhYmlyaW50b0xhY2NhTGFjZXJhdG9MYWNyaW1hTGFjdW5hTGFkZG92ZUxhZ29MYW1wb0xhbmNldHRhTGFudGVybmFMYXJkb3NvTGFyZ2FMYXJpbmdlTGFzdHJhTGF0ZW56YUxhdGlub0xhdHR1Z2FMYXZhZ25hTGF2b3JvTGVnYWxlTGVnZ2Vyb0xlbWJvTGVudGV6emFMZW56YUxlb25lTGVwcmVMZXNpdm9MZXNzYXRvTGVzdG9MZXR0ZXJhbGVMZXZhTGV2aWdhdG9MaWJlcm9MaWRvTGlldml0b0xpbGxhTGltYXR1cmFMaW1pdGFyZUxpbXBpZG9MaW5lYXJlTGluZ3VhTGlxdWlkb0xpcmFMaXJpY2FMaXNjYUxpdGVMaXRpZ2lvTGl2cmVhTG9jYW5kYUxvZGVMb2dpY2FMb21iYXJlTG9uZHJhTG9uZ2V2b0xvcXVhY2VMb3JlbnpvTG90b0xvdHRlcmlhTHVjZUx1Y2lkYXRvTHVtYWNhTHVtaW5vc29MdW5nb0x1cG9MdXBwb2xvTHVzaW5nYUx1c3NvTHV0dG9NYWNhYnJvTWFjY2hpbmFNYWNlcm9NYWNpbmF0b01hZGFtYU1hZ2ljb01hZ2xpYU1hZ25ldGVNYWdyb01haW9saWNhTWFsYWZlZGVNYWxncmFkb01hbGludGVzb01hbHNhbm9NYWx0b01hbHVtb3JlTWFuYU1hbmNpYU1hbmRvcmxhTWFuZ2lhcmVNYW5pZmVzdG9NYW5uYXJvTWFub3ZyYU1hbnNhcmRhTWFudGlkZU1hbnVicmlvTWFwcGFNYXJhdG9uYU1hcmNpcmVNYXJldHRhTWFybW9NYXJzdXBpb01hc2NoZXJhTWFzc2FpYU1hc3Rpbm9NYXRlcmFzc29NYXRyaWNvbGFNYXR0b25lTWF0dXJvTWF6dXJjYU1lYW5kcm9NZWNjYW5pY29NZWNlbmF0ZU1lZGVzaW1vTWVkaXRhcmVNZWdhTWVsYXNzYU1lbGlzTWVsb2RpYU1lbmluZ2VNZW5vTWVuc29sYU1lcmN1cmlvTWVyZW5kYU1lcmxvTWVzY2hpbm9NZXNlTWVzc2VyZU1lc3RvbG9NZXRhbGxvTWV0b2RvTWV0dGVyZU1pYWdvbGFyZU1pY2FNaWNlbGlvTWljaGVsZU1pY3JvYm9NaWRvbGxvTWllbGVNaWdsaW9yZU1pbGFub01pbGl0ZU1pbW9zYU1pbmVyYWxlTWluaU1pbm9yZU1pcmlub01pcnRpbGxvTWlzY2VsYU1pc3NpdmFNaXN0b01pc3VyYXJlTWl0ZXp6YU1pdGlnYXJlTWl0cmFNaXR0ZW50ZU1uZW1vbmljb01vZGVsbG9Nb2RpZmljYU1vZHVsb01vZ2Fub01vZ2lvTW9sZU1vbG9zc29Nb25hc3Rlcm9Nb25jb01vbmRpbmFNb25ldGFyaW9Nb25pbGVNb25vdG9ub01vbnNvbmVNb250YXRvTW9udmlzb01vcmFNb3JkZXJlTW9yc2ljYXRvTW9zdHJvTW90aXZhdG9Nb3Rvc2VnYU1vdHRvTW92ZW56YU1vdmltZW50b01venpvTXVjY2FNdWNvc2FNdWZmYU11Z2hldHRvTXVnbmFpb011bGF0dG9NdWxpbmVsbG9NdWx0aXBsb011bW1pYU11bnRvTXVvdmVyZU11cmFsZU11c2FNdXNjb2xvTXVzaWNhTXV0ZXZvbGVNdXRvTmFiYWJib05hZnRhTmFub21ldHJvTmFyY2lzb05hcmljZU5hcnJhdG9OYXNjZXJlTmFzdHJhcmVOYXR1cmFsZU5hdXRpY2FOYXZpZ2xpb05lYnVsb3NhTmVjcm9zaU5lZ2F0aXZvTmVnb3ppb05lbW1lbm9OZW9maXRhTmVyZXR0b05lcnZvTmVzc3Vub05ldHR1bm9OZXV0cmFsZU5ldmVOZXZyb3RpY29OaWNjaGlhTmluZmFOaXRpZG9Ob2JpbGVOb2Npdm9Ob2RvTm9tZU5vbWluYU5vcmRpY29Ob3JtYWxlTm9ydmVnZXNlTm9zdHJhbm9Ob3RhcmVOb3RpemlhTm90dHVybm9Ob3ZlbGxhTnVjbGVvTnVsbGFOdW1lcm9OdW92b051dHJpcmVOdXZvbGFOdXppYWxlT2FzaU9iYmVkaXJlT2JibGlnb09iZWxpc2NvT2JsaW9PYm9sb09ic29sZXRvT2NjYXNpb25lT2NjaGlvT2NjaWRlbnRlT2Njb3JyZXJlT2NjdWx0YXJlT2NyYU9jdWxhdG9PZGllcm5vT2RvcmFyZU9mZmVydGFPZmZyaXJlT2ZmdXNjYXRvT2dnZXR0b09nZ2lPZ251bm9PbGFuZGVzZU9sZmF0dG9PbGlhdG9PbGl2YU9sb2dyYW1tYU9sdHJlT21hZ2dpb09tYmVsaWNvT21icmFPbWVnYU9taXNzaW9uZU9uZG9zb09uZXJlT25pY2VPbm5pdm9yb09ub3Jldm9sZU9udGFPcGVyYXRvT3BpbmlvbmVPcHBvc3RvT3JhY29sb09yYWZvT3JkaW5lT3JlY2NoaW5vT3JlZmljZU9yZmFub09yZ2FuaWNvT3JpZ2luZU9yaXp6b250ZU9ybWFPcm1lZ2dpb09ybmF0aXZvT3JvbG9naW9PcnJlbmRvT3JyaWJpbGVPcnRlbnNpYU9ydGljYU9yemF0YU9yem9Pc2FyZU9zY3VyYXJlT3Ntb3NpT3NwZWRhbGVPc3BpdGVPc3NhT3NzaWRhcmVPc3RhY29sb09zdGVPdGl0ZU90cmVPdHRhZ29ub090dGltb090dG9icmVPdmFsZU92ZXN0T3Zpbm9PdmlwYXJvT3ZvY2l0b092dW5xdWVPdnZpYXJlT3ppb1BhY2NoZXR0b1BhY2VQYWNpZmljb1BhZGVsbGFQYWRyb25lUGFlc2VQYWdhUGFnaW5hUGFsYXp6aW5hUGFsZXNhcmVQYWxsaWRvUGFsb1BhbHVkZVBhbmRvcm9QYW5uZWxsb1Bhb2xvUGFvbmF6em9QYXByaWNhUGFyYWJvbGFQYXJjZWxsYVBhcmVyZVBhcmdvbG9QYXJpUGFybGF0b1Bhcm9sYVBhcnRpcmVQYXJ2ZW56YVBhcnppYWxlUGFzc2l2b1Bhc3RpY2NhUGF0YWNjYVBhdG9sb2dpYVBhdHR1bWVQYXZvbmVQZWNjYXRvUGVkYWxhcmVQZWRvbmFsZVBlZ2dpb1BlbG9zb1BlbmFyZVBlbmRpY2VQZW5pc29sYVBlbm51dG9QZW5vbWJyYVBlbnNhcmVQZW50b2xhUGVwZVBlcGl0YVBlcmJlbmVQZXJjb3Jzb1BlcmRvbmF0b1BlcmZvcmFyZVBlcmdhbWVuYVBlcmlvZG9QZXJtZXNzb1Blcm5vUGVycGxlc3NvUGVyc3Vhc29QZXJ0dWdpb1BlcnZhc29QZXNhdG9yZVBlc2lzdGFQZXNvUGVzdGlmZXJvUGV0YWxvUGV0dGluZVBldHVsYW50ZVBlenpvUGlhY2VyZVBpYW50YVBpYXR0aW5vUGljY2lub1BpY296emFQaWVnYVBpZXRyYVBpZmZlcm9QaWdpYW1hUGlnb2xpb1BpZ3JvUGlsYVBpbGlmZXJvUGlsbG9sYVBpbG90YVBpbXBhbnRlUGluZXRhUGlubmFQaW5vbG9QaW9nZ2lhUGlvbWJvUGlyYW1pZGVQaXJldGljb1Bpcml0ZVBpcm9saXNpUGl0b25lUGl6emljb1BsYWNlYm9QbGFuYXJlUGxhc21hUGxhdGFub1BsZW5hcmlvUG9jaGV6emFQb2Rlcm9zb1BvZGlzbW9Qb2VzaWFQb2dnaWFyZVBvbGVudGFQb2xpZ29ub1BvbGxpY2VQb2xtb25pdGVQb2xwZXR0YVBvbHNvUG9sdHJvbmFQb2x2ZXJlUG9taWNlUG9tb2Rvcm9Qb250ZVBvcG9sb3NvUG9yZmlkb1Bvcm9zb1BvcnBvcmFQb3JyZVBvcnRhdGFQb3NhUG9zaXRpdm9Qb3NzZXNzb1Bvc3R1bGF0b1BvdGFzc2lvUG90ZXJlUHJhbnpvUHJhc3NpUHJhdGljYVByZWNsdXNvUHJlZGljYVByZWZpc3NvUHJlZ2lhdG9QcmVsaWV2b1ByZW1lcmVQcmVub3RhcmVQcmVwYXJhdG9QcmVzZW56YVByZXRlc3RvUHJldmFsc29QcmltYVByaW5jaXBlUHJpdmF0b1Byb2JsZW1hUHJvY3VyYVByb2R1cnJlUHJvZnVtb1Byb2dldHRvUHJvbHVuZ2FQcm9tZXNzYVByb25vbWVQcm9wb3N0YVByb3JvZ2FQcm90ZXNvUHJvdmFQcnVkZW50ZVBydWduYVBydXJpdG9Qc2ljaGVQdWJibGljb1B1ZGljYVB1Z2lsYXRvUHVnbm9QdWxjZVB1bGl0b1B1bHNhbnRlUHVudGFyZVB1cGF6em9QdXBpbGxhUHVyb1F1YWRyb1F1YWxjb3NhUXVhc2lRdWVyZWxhUXVvdGFSYWNjb2x0b1JhZGRvcHBpb1JhZGljYWxlUmFkdW5hdG9SYWZmaWNhUmFnYXp6b1JhZ2lvbmVSYWdub1JhbWFycm9SYW1pbmdvUmFtb1JhbmRhZ2lvUmFudG9sYXJlUmFwYXRvUmFwaW5hUmFwcHJlc29SYXNhdHVyYVJhc2NoaWF0b1Jhc2VudGVSYXNzZWduYVJhc3RyZWxsb1JhdGFSYXZ2ZWR1dG9SZWFsZVJlY2VwaXJlUmVjaW50b1JlY2x1dGFSZWNvbmRpdG9SZWN1cGVyb1JlZGRpdG9SZWRpbWVyZVJlZ2FsYXRvUmVnaXN0cm9SZWdvbGFSZWdyZXNzb1JlbGF6aW9uZVJlbWFyZVJlbW90b1Jlbm5hUmVwbGljYVJlcHJpbWVyZVJlcHV0YXJlUmVzYVJlc2lkZW50ZVJlc3BvbnNvUmVzdGF1cm9SZXRlUmV0aW5hUmV0b3JpY2FSZXR0aWZpY2FSZXZvY2F0b1JpYXNzdW50b1JpYmFkaXJlUmliZWxsZVJpYnJlenpvUmljYXJpY2FSaWNjb1JpY2V2ZXJlUmljaWNsYXRvUmljb3Jkb1JpY3JlZHV0b1JpZGljb2xvUmlkdXJyZVJpZmFzYXJlUmlmbGVzc29SaWZvcm1hUmlmdWdpb1JpZ2FyZVJpZ2V0dGF0b1JpZ2hlbGxvUmlsYXNzYXRvUmlsZXZhdG9SaW1hbmVyZVJpbWJhbHpvUmltZWRpb1JpbW9yY2hpb1JpbmFzY2l0YVJpbmNhcm9SaW5mb3J6b1Jpbm5vdm9SaW5vbWF0b1JpbnNhdml0b1JpbnRvY2NvUmludW5jaWFSaW52ZW5pcmVSaXBhcmF0b1JpcGV0dXRvUmlwaWVub1JpcG9ydGFyZVJpcHJlc2FSaXB1bGlyZVJpc2F0YVJpc2NoaW9SaXNlcnZhUmlzaWJpbGVSaXNvUmlzcGV0dG9SaXN0b3JvUmlzdWx0YXRvUmlzdm9sdG9SaXRhcmRvUml0ZWdub1JpdG1pY29SaXRyb3ZvUml1bmlvbmVSaXZhUml2ZXJzb1JpdmluY2l0YVJpdm9sdG9SaXpvbWFSb2JhUm9ib3RpY29Sb2J1c3RvUm9jY2lhUm9jb1JvZGFnZ2lvUm9kZXJlUm9kaXRvcmVSb2dpdG9Sb2xsaW9Sb21hbnRpY29Sb21wZXJlUm9uemlvUm9zb2xhcmVSb3Nwb1JvdGFudGVSb3RvbmRvUm90dWxhUm92ZXNjaW9SdWJpenpvUnVicmljYVJ1Z2FSdWxsaW5vUnVtaW5lUnVtb3Jvc29SdW9sb1J1cGVSdXNzYXJlUnVzdGljb1NhYmF0b1NhYmJpYXJlU2Fib3RhdG9TYWdvbWFTYWxhc3NvU2FsZGF0dXJhU2FsZ2VtbWFTYWxpdmFyZVNhbG1vbmVTYWxvbmVTYWx0YXJlU2FsdXRvU2Fsdm9TYXBlcmVTYXBpZG9TYXBvcml0b1NhcmFjZW5vU2FyY2FzbW9TYXJ0b1Nhc3Nvc29TYXRlbGxpdGVTYXRpcmFTYXRvbGxvU2F0dXJub1NhdmFuYVNhdmlvU2F6aWF0b1NiYWRpZ2xpb1NiYWx6b1NiYW5jYXRvU2JhcnJhU2JhdHRlcmVTYmF2YXJlU2JlbmRhcmVTYmlyY2lhcmVTYmxvY2NhdG9TYm9jY2lhdG9TYnJpbmFyZVNicnVmZm9uZVNidWZmYXJlU2NhYnJvc29TY2FkZW56YVNjYWxhU2NhbWJpYXJlU2NhbmRhbG9TY2Fwb2xhU2NhcnNvU2NhdGVuYXJlU2NhdmF0b1NjZWx0b1NjZW5pY29TY2V0dHJvU2NoZWRhU2NoaWVuYVNjaWFycGFTY2llbnphU2NpbmRlcmVTY2lwcG9TY2lyb3Bwb1NjaXZvbG9TY2xlcmFyZVNjb2RlbGxhU2NvbHBpdG9TY29tcGFydG9TY29uZm9ydG9TY29wcmlyZVNjb3J0YVNjb3Nzb25lU2Nvenplc2VTY3JpYmFTY3JvbGxhcmVTY3J1dGluaW9TY3VkZXJpYVNjdWx0b3JlU2N1b2xhU2N1cm9TY3VzYXJlU2RlYml0YXJlU2RvZ2FuYXJlU2VjY2F0dXJhU2Vjb25kb1NlZGFub1NlZ2dpb2xhU2VnbmFsYXRvU2VncmVnYXRvU2VndWl0b1NlbGNpYXRvU2VsZXR0aXZvU2VsbGFTZWx2YWdnaW9TZW1hZm9yb1NlbWJyYXJlU2VtZVNlbWluYXRvU2VtcHJlU2Vuc29TZW50aXJlU2Vwb2x0b1NlcXVlbnphU2VyYXRhU2VyYmF0b1NlcmVub1NlcmlvU2VycGVudGVTZXJyYWdsaW9TZXJ2aXJlU2VzdGluYVNldG9sYVNldHRpbWFuYVNmYWNlbG9TZmFsZGFyZVNmYW1hdG9TZmFyem9zb1NmYXRpY2F0b1NmZXJhU2ZpZGFTZmlsYXRvU2ZpbmdlU2ZvY2F0b1Nmb2RlcmFyZVNmb2dvU2ZvbHRpcmVTZm9yemF0b1NmcmF0dG9TZnJ1dHRhdG9TZnVnZ2l0b1NmdW1hcmVTZnVzb1NnYWJlbGxvU2dhcmJhdG9TZ29uZmlhcmVTZ29yYmlvU2dyYXNzYXRvU2d1YXJkb1NpYmlsb1NpY2NvbWVTaWVycmFTaWdsYVNpZ25vcmVTaWxlbnppb1NpbGxhYmFTaW1ib2xvU2ltcGF0aWNvU2ltdWxhdG9TaW5mb25pYVNpbmdvbG9TaW5pc3Ryb1Npbm9TaW50ZXNpU2ludXNvaWRlU2lwYXJpb1Npc21hU2lzdG9sZVNpdHVhdG9TbGl0dGFTbG9nYXR1cmFTbG92ZW5vU21hcnJpdG9TbWVtb3JhdG9TbWVudGl0b1NtZXJhbGRvU21pbHpvU21vbnRhcmVTbW90dGF0b1NtdXNzYXRvU25lbGxpcmVTbmVydmF0b1Nub2RvU29iYmFsem9Tb2JyaW9Tb2Njb3Jzb1NvY2lhbGVTb2RhbGVTb2ZmaXR0b1NvZ25vU29sZGF0b1NvbGVubmVTb2xpZG9Tb2xsYXp6b1NvbG9Tb2x1YmlsZVNvbHZlbnRlU29tYXRpY29Tb21tYVNvbmRhU29uZXR0b1Nvbm5pZmVyb1NvcGlyZVNvcHBlc29Tb3ByYVNvcmdlcmVTb3JwYXNzb1NvcnJpc29Tb3Jzb1NvcnRlZ2dpb1NvcnZvbGF0b1Nvc3Bpcm9Tb3N0YVNvdHRpbGVTcGFkYVNwYWxsYVNwYXJnZXJlU3BhdG9sYVNwYXZlbnRvU3BhenpvbGFTcGVjaWVTcGVkaXJlU3BlZ25lcmVTcGVsYXR1cmFTcGVyYW56YVNwZXNzb3JlU3BldHRyYWxlU3BlenphdG9TcGlhU3BpZ29sb3NvU3BpbGxhdG9TcGlub3NvU3BpcmFsZVNwbGVuZGlkb1Nwb3J0aXZvU3Bvc29TcHJhbmdhU3ByZWNhcmVTcHJvbmF0b1NwcnV6em9TcHVudGlub1NxdWlsbG9TcmFkaWNhcmVTcm90b2xhdG9TdGFiaWxlU3RhY2NvU3RhZmZhU3RhZ25hcmVTdGFtcGF0b1N0YW50aW9TdGFybnV0b1N0YXNlcmFTdGF0dXRvU3RlbG9TdGVwcGFTdGVyem9TdGlsZXR0b1N0aW1hU3RpcnBlU3RpdmFsZVN0aXp6b3NvU3RvbmF0b1N0b3JpY29TdHJhcHBvU3RyZWdhdG9TdHJpZHVsb1N0cm96emFyZVN0cnV0dG9TdHVjY2FyZVN0dWZvU3R1cGVuZG9TdWJlbnRyb1N1Y2Nvc29TdWRvcmVTdWdnZXJpdG9TdWdvU3VsdGFub1N1b25hcmVTdXBlcmJvU3VwcG9ydG9TdXJnZWxhdG9TdXJyb2dhdG9TdXNzdXJyb1N1dHVyYVN2YWdhcmVTdmVkZXNlU3ZlZ2xpb1N2ZWxhcmVTdmVudXRvU3ZlemlhU3ZpbHVwcG9TdmlzdGFTdml6emVyYVN2b2x0YVN2dW90YXJlVGFiYWNjb1RhYnVsYXRvVGFjY2lhcmVUYWNpdHVybm9UYWxlVGFsaXNtYW5vVGFtcG9uZVRhbm5pbm9UYXJhVGFyZGl2b1RhcmdhdG9UYXJpZmZhVGFycGFyZVRhcnRhcnVnYVRhc3RvVGF0dGljb1RhdmVybmFUYXZvbGF0YVRhenphVGVjYVRlY25pY29UZWxlZm9ub1RlbWVyYXJpb1RlbXBvVGVtdXRvVGVuZG9uZVRlbmVyb1RlbnNpb25lVGVudGFjb2xvVGVvcmVtYVRlcm1lVGVycmF6em9UZXJ6ZXR0b1Rlc2lUZXNzZXJhdG9UZXN0YXRvVGV0cm9UZXR0b2lhVGlmYXJlVGlnZWxsYVRpbWJyb1RpbnRvVGlwaWNvVGlwb2dyYWZvVGlyYWdnaW9UaXJvVGl0YW5pb1RpdG9sb1RpdHViYW50ZVRpemlvVGl6em9uZVRvY2NhcmVUb2xsZXJhcmVUb2x0b1RvbWJvbGFUb21vVG9uZm9Ub25zaWxsYVRvcGF6aW9Ub3BvbG9naWFUb3BwYVRvcmJhVG9ybmFyZVRvcnJvbmVUb3J0b3JhVG9zY2Fub1Rvc3NpcmVUb3N0YXR1cmFUb3Rhbm9UcmFib2Njb1RyYWNoZWFUcmFmaWxhVHJhZ2VkaWFUcmFsY2lvVHJhbW9udG9UcmFuc2l0b1RyYXBhbm9UcmFycmVUcmFzbG9jb1RyYXR0YXRvVHJhdmVUcmVjY2lhVHJlbW9saW9UcmVzcG9sb1RyaWJ1dG9UcmljaGVjb1RyaWZvZ2xpb1RyaWxsb1RyaW5jZWFUcmlvVHJpc3RlenphVHJpdHVyYXRvVHJpdmVsbGFUcm9tYmFUcm9ub1Ryb3Bwb1Ryb3R0b2xhVHJvdmFyZVRydWNjYXRvVHViYXR1cmFUdWZmYXRvVHVsaXBhbm9UdW11bHRvVHVuaXNpYVR1cmJhcmVUdXJjaGlub1R1dGFUdXRlbGFVYmljYXRvVWNjZWxsb1VjY2lzb3JlVWRpcmVVZGl0aXZvVWZmYVVmZmljaW9VZ3VhbGVVbGlzc2VVbHRpbWF0b1VtYW5vVW1pbGVVbW9yaXNtb1VuY2luZXR0b1VuZ2VyZVVuZ2hlcmVzZVVuaWNvcm5vVW5pZmljYXRvVW5pc29ub1VuaXRhcmlvVW50ZVVvdm9VcHVwYVVyYWdhbm9VcmdlbnphVXJsb1VzYW56YVVzYXRvVXNjaXRvVXNpZ25vbG9Vc3VyYWlvVXRlbnNpbGVVdGlsaXp6b1V0b3BpYVZhY2FudGVWYWNjaW5hdG9WYWdhYm9uZG9WYWdsaWF0b1ZhbGFuZ2FWYWxnb1ZhbGljb1ZhbGxldHRhVmFsb3Jvc29WYWx1dGFyZVZhbHZvbGFWYW1wYXRhVmFuZ2FyZVZhbml0b3NvVmFub1ZhbnRhZ2dpb1ZhbnZlcmFWYXBvcmVWYXJhbm9WYXJjYXRvVmFyaWFudGVWYXNjYVZlZGV0dGFWZWRvdmFWZWR1dG9WZWdldGFsZVZlaWNvbG9WZWxjcm9WZWxpbmFWZWxsdXRvVmVsb2NlVmVuYXRvVmVuZGVtbWlhVmVudG9WZXJhY2VWZXJiYWxlVmVyZ29nbmFWZXJpZmljYVZlcm9WZXJydWNhVmVydGljYWxlVmVzY2ljYVZlc3NpbGxvVmVzdGFsZVZldGVyYW5vVmV0cmluYVZldHVzdG9WaWFuZGFudGVWaWJyYW50ZVZpY2VuZGFWaWNoaW5nb1ZpY2luYW56YVZpZGltYXJlVmlnaWxpYVZpZ25ldG9WaWdvcmVWaWxlVmlsbGFub1ZpbWluaVZpbmNpdG9yZVZpb2xhVmlwZXJhVmlyZ29sYVZpcm9sb2dvVmlydWxlbnRvVmlzY29zb1Zpc2lvbmVWaXNwb1Zpc3N1dG9WaXN1cmFWaXRhVml0ZWxsb1ZpdHRpbWFWaXZhbmRhVml2aWRvVml6aWFyZVZvY2VWb2dhVm9sYXRpbGVWb2xlcmVWb2xwZVZvcmFnaW5lVnVsY2Fub1phbXBvZ25hWmFubmFaYXBwYXRvWmF0dGVyYVphdm9ycmFaZWZpcm9aZWxhbnRlWmVsb1plbnplcm9aZXJiaW5vWmliZXR0b1ppbmNvWmlyY29uZVppdHRvWm9sbGFab3RpY29adWNjaGVyb1p1Zm9sb1p1bHVadXBwYVwiO1xudmFyIHdvcmRsaXN0ID0gbnVsbDtcbmZ1bmN0aW9uIGxvYWRXb3JkcyhsYW5nKSB7XG4gICAgaWYgKHdvcmRsaXN0ICE9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB3b3JkbGlzdCA9IHdvcmRzLnJlcGxhY2UoLyhbQS1aXSkvZywgJyAkMScpLnRvTG93ZXJDYXNlKCkuc3Vic3RyaW5nKDEpLnNwbGl0KCcgJyk7XG4gICAgaWYgKHdvcmRsaXN0XzEuY2hlY2sobGFuZykgIT09ICcweDVjMTM2MmQ4OGZkNGNmNjE0YTk2ZjMyMzQ5NDFkMjlmN2QzN2MwOGM1MjkyZmRlMDNiZjYyYzJkYjZmZjc2MjAnKSB7XG4gICAgICAgIHdvcmRsaXN0ID0gbnVsbDtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdCSVAzOSBXb3JkbGlzdCBmb3IgaXQgKEl0YWxpYW4pIEZBSUxFRCcpO1xuICAgIH1cbn1cbnZhciBMYW5nSXQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKExhbmdJdCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBMYW5nSXQoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCAnaXQnKSB8fCB0aGlzO1xuICAgIH1cbiAgICBMYW5nSXQucHJvdG90eXBlLmdldFdvcmQgPSBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgbG9hZFdvcmRzKHRoaXMpO1xuICAgICAgICByZXR1cm4gd29yZGxpc3RbaW5kZXhdO1xuICAgIH07XG4gICAgTGFuZ0l0LnByb3RvdHlwZS5nZXRXb3JkSW5kZXggPSBmdW5jdGlvbiAod29yZCkge1xuICAgICAgICBsb2FkV29yZHModGhpcyk7XG4gICAgICAgIHJldHVybiB3b3JkbGlzdC5pbmRleE9mKHdvcmQpO1xuICAgIH07XG4gICAgcmV0dXJuIExhbmdJdDtcbn0od29yZGxpc3RfMS5Xb3JkbGlzdCkpO1xudmFyIGxhbmdJdCA9IG5ldyBMYW5nSXQoKTtcbmV4cG9ydHMubGFuZ0l0ID0gbGFuZ0l0O1xud29yZGxpc3RfMS5yZWdpc3RlcihsYW5nSXQpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethers/wordlists/lang-it.js\n");

/***/ }),

/***/ "./node_modules/ethers/wordlists/lang-ja.js":
/*!**************************************************!*\
  !*** ./node_modules/ethers/wordlists/lang-ja.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar wordlist_1 = __webpack_require__(/*! ../utils/wordlist */ \"./node_modules/ethers/utils/wordlist.js\");\nvar bytes_1 = __webpack_require__(/*! ../utils/bytes */ \"./node_modules/ethers/utils/bytes.js\");\nvar utf8_1 = __webpack_require__(/*! ../utils/utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar errors = __importStar(__webpack_require__(/*! ../errors */ \"./node_modules/ethers/errors.js\"));\nvar data = [\n    // 4-kana words\n    'AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR',\n    // 5-kana words\n    'ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR',\n    // 6-kana words\n    'AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm',\n    // 7-kana words\n    'ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC',\n    // 8-kana words\n    'BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD',\n    // 9-kana words\n    'QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD',\n    // 10-kana words\n    'IJBEJqXZJ'\n];\n// Maps each character into its kana value (the index)\nvar mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\";\nvar wordlist = null;\nfunction hex(word) {\n    return bytes_1.hexlify(utf8_1.toUtf8Bytes(word));\n}\nvar KiYoKu = '0xe3818de38284e3818f';\nvar KyoKu = '0xe3818de38283e3818f';\nfunction loadWords(lang) {\n    if (wordlist !== null) {\n        return;\n    }\n    wordlist = [];\n    // Transforms for normalizing (sort is a not quite UTF-8)\n    var transform = {};\n    // Delete the diacritic marks\n    transform[utf8_1.toUtf8String([227, 130, 154])] = false;\n    transform[utf8_1.toUtf8String([227, 130, 153])] = false;\n    // Some simple transforms that sort out most of the order\n    transform[utf8_1.toUtf8String([227, 130, 133])] = utf8_1.toUtf8String([227, 130, 134]);\n    transform[utf8_1.toUtf8String([227, 129, 163])] = utf8_1.toUtf8String([227, 129, 164]);\n    transform[utf8_1.toUtf8String([227, 130, 131])] = utf8_1.toUtf8String([227, 130, 132]);\n    transform[utf8_1.toUtf8String([227, 130, 135])] = utf8_1.toUtf8String([227, 130, 136]);\n    // Normalize words using the transform\n    function normalize(word) {\n        var result = '';\n        for (var i = 0; i < word.length; i++) {\n            var kana = word[i];\n            var target = transform[kana];\n            if (target === false) {\n                continue;\n            }\n            if (target) {\n                kana = target;\n            }\n            result += kana;\n        }\n        return result;\n    }\n    // Sort how the Japanese list is sorted\n    function sortJapanese(a, b) {\n        a = normalize(a);\n        b = normalize(b);\n        if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n            return 1;\n        }\n        return 0;\n    }\n    // Load all the words\n    for (var length_1 = 3; length_1 <= 9; length_1++) {\n        var d = data[length_1 - 3];\n        for (var offset = 0; offset < d.length; offset += length_1) {\n            var word = [];\n            for (var i = 0; i < length_1; i++) {\n                var k = mapping.indexOf(d[offset + i]);\n                word.push(227);\n                word.push((k & 0x40) ? 130 : 129);\n                word.push((k & 0x3f) + 128);\n            }\n            wordlist.push(utf8_1.toUtf8String(word));\n        }\n    }\n    wordlist.sort(sortJapanese);\n    // For some reason kyoku and kiyoku are flipped in node (!!).\n    // The order SHOULD be:\n    //   - kyoku\n    //   - kiyoku\n    if (hex(wordlist[442]) === KiYoKu && hex(wordlist[443]) === KyoKu) {\n        var tmp = wordlist[442];\n        wordlist[442] = wordlist[443];\n        wordlist[443] = tmp;\n    }\n    if (wordlist_1.check(lang) !== '0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600') {\n        wordlist = null;\n        throw new Error('BIP39 Wordlist for ja (Japanese) FAILED');\n    }\n}\nvar LangJa = /** @class */ (function (_super) {\n    __extends(LangJa, _super);\n    function LangJa() {\n        return _super.call(this, 'ja') || this;\n    }\n    LangJa.prototype.getWord = function (index) {\n        loadWords(this);\n        return wordlist[index];\n    };\n    LangJa.prototype.getWordIndex = function (word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    };\n    LangJa.prototype.split = function (mnemonic) {\n        errors.checkNormalize();\n        return mnemonic.split(/(?:\\u3000| )+/g);\n    };\n    LangJa.prototype.join = function (words) {\n        return words.join('\\u3000');\n    };\n    return LangJa;\n}(wordlist_1.Wordlist));\nvar langJa = new LangJa();\nexports.langJa = langJa;\nwordlist_1.register(langJa);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/wordlists/lang-ja.js\n");

/***/ }),

/***/ "./node_modules/ethers/wordlists/lang-ko.js":
/*!**************************************************!*\
  !*** ./node_modules/ethers/wordlists/lang-ko.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar wordlist_1 = __webpack_require__(/*! ../utils/wordlist */ \"./node_modules/ethers/utils/wordlist.js\");\nvar utf8_1 = __webpack_require__(/*! ../utils/utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar data = [\n    'OYAa',\n    'ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@HgLnrHgMT8HgMX8HgMboHgOnrHgQToHgRg3HgoHgHgrCbHgrFnHgrLVHgvAcHgvAfHnAloHnCTrHnCnvHnGTrHnGZ8HnGnvHnJT8HnLf8HnLkvHnMg8HnRTrITvFUITvFnJTAXrJTCV8JTFT3JTFT8JTFn4JTGgvJTHT8JTJT8JTJXvJTJl3JTJnvJTLX4JTLf8JTLhvJTMT8JTMXrJTMnrJTObrJTQT8JTSlvJT8DUJT8FkJT8MTJT8OXJT8OgJT8QUJT8RfJUHZoJXFT4JXFlrJXGZ8JXGnrJXLV8JXLgvJXMXoJXMX3JXNboJXPlvJXoJTJXoLkJXrAXJXrHUJXrJgJXvJTJXvOnJX4KnJYAl3JYJT8JYLhvJYQToJYrQXJY6NUJbAl3JbCZrJbDloJbGT8JbGgrJbJXvJbJboJbLf8JbLhrJbLl3JbMnvJbRg8JbSZ8JboDbJbrCZJbrSUJb3KnJb8LnJfRn8JgAXrJgCZrJgDTrJgGZrJgGZ8JgHToJgJT8JgJXoJgJgvJgLX4JgLZ3JgLZ8JgLn4JgMgrJgMn4JgOgvJgPX6JgRnvJgSToJgoCZJgoJbJgoMYJgrJXJgrJgJgrLjJg6MTJlCn3JlGgvJlJl8Jl4AnJl8FnJl8HgJnAToJnATrJnAbvJnDUoJnGnrJnJXrJnJXvJnLhvJnLnrJnLnvJnMToJnMT8JnMXvJnMX3JnMg8JnMlrJnMn4JnOX8JnST4JnSX3JnoAgJnoAnJnoJTJnoObJnrAbJnrAkJnrHnJnrJTJnrJYJnrOYJnrScJnvCUJnvFaJnvJgJnvJnJnvOYJnvQUJnvRUJn3FnJn3JTKnFl3KnLT6LTDlvLTMnoLTOn3LTRl3LTSb4LTSlrLToAnLToJgLTrAULTrAcLTrCULTrHgLTrMgLT3JnLULnrLUMX8LUoJgLVATrLVDTrLVLb8LVoJgLV8MgLV8RTLXDg3LXFlrLXrCnLXrLXLX3GTLX4GgLX4OYLZAXrLZAcrLZAgrLZAhrLZDXyLZDlrLZFbrLZFl3LZJX6LZJX8LZLc8LZLnrLZSU8LZoJTLZoJnLZrAgLZrAnLZrJYLZrLULZrMgLZrSkLZvAnLZvGULZvJeLZvOTLZ3FZLZ4JXLZ8STLZ8ScLaAT3LaAl3LaHT8LaJTrLaJT8LaJXrLaJgvLaJl4LaLVoLaMXrLaMXvLaMX8LbClvLbFToLbHlrLbJn4LbLZ3LbLhvLbMXrLbMnoLbvSULcLnrLc8HnLc8MTLdrMnLeAgoLeOgvLeOn3LfAl3LfLnvLfMl3LfOX8Lf8AnLf8JXLf8LXLgJTrLgJXrLgJl8LgMX8LgRZrLhCToLhrAbLhrFULhrJXLhvJYLjHTrLjHX4LjJX8LjLhrLjSX3LjSZ4LkFX4LkGZ8LkGgvLkJTrLkMXoLkSToLkSU8LkSZ8LkoOYLl3FfLl3MgLmAZrLmCbrLmGgrLmHboLmJnoLmJn3LmLfoLmLhrLmSToLnAX6LnAb6LnCZ3LnCb3LnDTvLnDb8LnFl3LnGnrLnHZvLnHgvLnITvLnJT8LnJX8LnJlvLnLf8LnLg6LnLhvLnLnoLnMXrLnMg8LnQlvLnSbrLnrAgLnrAnLnrDbLnrFkLnrJdLnrMULnrOYLnrSTLnvAnLnvDULnvHgLnvOYLnvOnLn3GgLn4DULn4JTLn4JnMTAZoMTAloMTDb8MTFT8MTJnoMTJnrMTLZrMTLhrMTLkvMTMX8MTRTrMToATMTrDnMTrOnMT3JnMT4MnMT8FUMT8FaMT8FlMT8GTMT8GbMT8GnMT8HnMT8JTMT8JbMT8OTMUCl8MUJTrMUJU8MUMX8MURTrMUSToMXAX6MXAb6MXCZoMXFXrMXHXrMXLgvMXOgoMXrAUMXrAnMXrHgMXrJYMXrJnMXrMTMXrMgMXrOYMXrSZMXrSgMXvDUMXvOTMX3JgMX3OTMX4JnMX8DbMX8FnMX8HbMX8HgMX8HnMX8LbMX8MnMX8OnMYAb8MYGboMYHTvMYHX4MYLTrMYLnvMYMToMYOgvMYRg3MYSTrMbAToMbAXrMbAl3MbAn8MbGZ8MbJT8MbJXrMbMXvMbMX8MbMnoMbrMUMb8AfMb8FbMb8FkMcJXoMeLnrMgFl3MgGTvMgGXoMgGgrMgGnrMgHT8MgHZrMgJnoMgLnrMgLnvMgMT8MgQUoMgrHnMgvAnMg8HgMg8JYMg8LfMloJnMl8ATMl8AXMl8JYMnAToMnAT4MnAZ8MnAl3MnAl4MnCl8MnHT8MnHg8MnJnoMnLZoMnLhrMnMXoMnMX3MnMnrMnOgvMnrFbMnrFfMnrFnMnrNTMnvJXNTMl8OTCT3OTFV8OTFn3OTHZvOTJXrOTOl3OT3ATOT3JUOT3LZOT3LeOT3MbOT8ATOT8AbOT8AgOT8MbOUCXvOUMX3OXHXvOXLl3OXrMUOXvDbOX6NUOX8JbOYFZoOYLbrOYLkoOYMg8OYSX3ObHTrObHT4ObJgrObLhrObMX3ObOX8Ob8FnOeAlrOeJT8OeJXrOeJnrOeLToOeMb8OgJXoOgLXoOgMnrOgOXrOgOloOgoAgOgoJbOgoMYOgoSTOg8AbOjLX4OjMnoOjSV8OnLVoOnrAgOn3DUPXQlrPXvFXPbvFTPdAT3PlFn3PnvFbQTLn4QToAgQToMTQULV8QURg8QUoJnQXCXvQbFbrQb8AaQb8AcQb8FbQb8MYQb8ScQeAlrQeLhrQjAn3QlFXoQloJgQloSnRTLnvRTrGURTrJTRUJZrRUoJlRUrQnRZrLmRZrMnRZrSnRZ8ATRZ8JbRZ8ScRbMT8RbST3RfGZrRfMX8RfMgrRfSZrRnAbrRnGT8RnvJgRnvLfRnvMTRn8AaSTClvSTJgrSTOXrSTRg3STRnvSToAcSToAfSToAnSToHnSToLjSToMTSTrAaSTrEUST3BYST8AgST8LmSUAZvSUAgrSUDT4SUDT8SUGgvSUJXoSUJXvSULTrSU8JTSU8LjSV8AnSV8JgSXFToSXLf8SYvAnSZrDUSZrMUSZrMnSZ8HgSZ8JTSZ8JgSZ8MYSZ8QUSaQUoSbCT3SbHToSbQYvSbSl4SboJnSbvFbSb8HbSb8JgSb8OTScGZrScHgrScJTvScMT8ScSToScoHbScrMTScvAnSeAZrSeAcrSeHboSeJUoSeLhrSeMT8SeMXrSe6JgSgHTrSkJnoSkLnvSk8CUSlFl3SlrSnSl8GnSmAboSmGT8SmJU8',\n    'ATLnDlATrAZoATrJX4ATrMT8ATrMX4ATrRTrATvDl8ATvJUoATvMl8AT3AToAT3MX8AT8CT3AT8DT8AT8HZrAT8HgoAUAgFnAUCTFnAXoMX8AXrAT8AXrGgvAXrJXvAXrOgoAXvLl3AZvAgoAZvFbrAZvJXoAZvJl8AZvJn3AZvMX8AZvSbrAZ8FZoAZ8LZ8AZ8MU8AZ8OTvAZ8SV8AZ8SX3AbAgFZAboJnoAbvGboAb8ATrAb8AZoAb8AgrAb8Al4Ab8Db8Ab8JnoAb8LX4Ab8LZrAb8LhrAb8MT8Ab8OUoAb8Qb8Ab8ST8AcrAUoAcrAc8AcrCZ3AcrFT3AcrFZrAcrJl4AcrJn3AcrMX3AcrOTvAc8AZ8Ac8MT8AfAcJXAgoFn4AgoGgvAgoGnrAgoLc8AgoMXoAgrLnrAkrSZ8AlFXCTAloHboAlrHbrAlrLhrAlrLkoAl3CZrAl3LUoAl3LZrAnrAl4AnrMT8An3HT4BT3IToBX4MnvBb!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6',\n    'ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv',\n    'AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo',\n    'AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg',\n    'HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb',\n    'AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl'\n];\nvar codes = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*';\nfunction getHangul(code) {\n    if (code >= 40) {\n        code = code + 168 - 40;\n    }\n    else if (code >= 19) {\n        code = code + 97 - 19;\n    }\n    return utf8_1.toUtf8String([225, (code >> 6) + 132, (code & 0x3f) + 128]);\n}\nvar wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = [];\n    data.forEach(function (data, length) {\n        length += 4;\n        for (var i = 0; i < data.length; i += length) {\n            var word = '';\n            for (var j = 0; j < length; j++) {\n                word += getHangul(codes.indexOf(data[i + j]));\n            }\n            wordlist.push(word);\n        }\n    });\n    wordlist.sort();\n    if (wordlist_1.check(lang) !== '0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a') {\n        wordlist = null;\n        throw new Error('BIP39 Wordlist for ko (Korean) FAILED');\n    }\n}\nvar LangKo = /** @class */ (function (_super) {\n    __extends(LangKo, _super);\n    function LangKo() {\n        return _super.call(this, 'ko') || this;\n    }\n    LangKo.prototype.getWord = function (index) {\n        loadWords(this);\n        return wordlist[index];\n    };\n    LangKo.prototype.getWordIndex = function (word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    };\n    return LangKo;\n}(wordlist_1.Wordlist));\nvar langKo = new LangKo();\nexports.langKo = langKo;\nwordlist_1.register(langKo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/wordlists/lang-ko.js\n");

/***/ }),

/***/ "./node_modules/ethers/wordlists/lang-zh.js":
/*!**************************************************!*\
  !*** ./node_modules/ethers/wordlists/lang-zh.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar wordlist_1 = __webpack_require__(/*! ../utils/wordlist */ \"./node_modules/ethers/utils/wordlist.js\");\nvar utf8_1 = __webpack_require__(/*! ../utils/utf8 */ \"./node_modules/ethers/utils/utf8.js\");\nvar data = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\nvar deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";\n// @TODO: Load lazily\nvar wordlist = {\n    zh_cn: null,\n    zh_tw: null\n};\nvar Checks = {\n    zh_cn: '0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1',\n    zh_tw: '0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d'\n};\nvar codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\";\nfunction loadWords(lang) {\n    if (wordlist[lang.locale] !== null) {\n        return;\n    }\n    wordlist[lang.locale] = [];\n    var deltaOffset = 0;\n    for (var i = 0; i < 2048; i++) {\n        var s = style.indexOf(data[i * 3]);\n        var bytes = [\n            228 + (s >> 2),\n            128 + codes.indexOf(data[i * 3 + 1]),\n            128 + codes.indexOf(data[i * 3 + 2]),\n        ];\n        if (lang.locale === 'zh_tw') {\n            var common = s % 4;\n            for (var i_1 = common; i_1 < 3; i_1++) {\n                bytes[i_1] = codes.indexOf(deltaData[deltaOffset++]) + ((i_1 == 0) ? 228 : 128);\n            }\n        }\n        wordlist[lang.locale].push(utf8_1.toUtf8String(bytes));\n    }\n    if (wordlist_1.check(lang) !== Checks[lang.locale]) {\n        wordlist[lang.locale] = null;\n        throw new Error('BIP39 Wordlist for ' + lang.locale + ' (Chinese) FAILED');\n    }\n}\nvar LangZh = /** @class */ (function (_super) {\n    __extends(LangZh, _super);\n    function LangZh(country) {\n        return _super.call(this, 'zh_' + country) || this;\n    }\n    LangZh.prototype.getWord = function (index) {\n        loadWords(this);\n        return wordlist[this.locale][index];\n    };\n    LangZh.prototype.getWordIndex = function (word) {\n        loadWords(this);\n        return wordlist[this.locale].indexOf(word);\n    };\n    LangZh.prototype.split = function (mnemonic) {\n        mnemonic = mnemonic.replace(/(?:\\u3000| )+/g, '');\n        return mnemonic.split('');\n    };\n    return LangZh;\n}(wordlist_1.Wordlist));\nvar langZhCn = new LangZh('cn');\nexports.langZhCn = langZhCn;\nwordlist_1.register(langZhCn);\nwordlist_1.register(langZhCn, 'zh');\nvar langZhTw = new LangZh('tw');\nexports.langZhTw = langZhTw;\nwordlist_1.register(langZhTw);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethers/wordlists/lang-zh.js\n");

/***/ }),

/***/ "./components/ConnectWalletButton.tsx":
/*!********************************************!*\
  !*** ./components/ConnectWalletButton.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst ConnectWalletButton = ({ connectWallet  })=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        className: \"h-[5rem] text-2xl font-bold py-3 px-12 bg-[#f1c232] rounded-lg mb-10 hover:scale-105 transition duration-500 ease-in-out\",\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\ConnectWalletButton.tsx\",\n        lineNumber: 4,\n        columnNumber: 3\n    }, undefined);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ConnectWalletButton);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0Nvbm5lY3RXYWxsZXRCdXR0b24udHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFBNEI7QUFFNUIsTUFBTUMsbUJBQW1CLEdBQUcsQ0FBQyxFQUFFQyxhQUFhLEdBQUUsaUJBQzVDLDhEQUFDQyxRQUFNO1FBQ0xDLFNBQVMsRUFBQywwSEFBMEg7UUFDcElDLE9BQU8sRUFBRUgsYUFBYTtrQkFDdkIsZ0JBRUQ7Ozs7O2lCQUFTO0FBRVgsaUVBQWVELG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL2NvbXBvbmVudHMvQ29ubmVjdFdhbGxldEJ1dHRvbi50c3g/MTE2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgIFJlYWN0ICBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IENvbm5lY3RXYWxsZXRCdXR0b24gPSAoeyBjb25uZWN0V2FsbGV0IH0pID0+XG4gIDxidXR0b25cbiAgICBjbGFzc05hbWU9J2gtWzVyZW1dIHRleHQtMnhsIGZvbnQtYm9sZCBweS0zIHB4LTEyIGJnLVsjZjFjMjMyXSByb3VuZGVkLWxnIG1iLTEwIGhvdmVyOnNjYWxlLTEwNSB0cmFuc2l0aW9uIGR1cmF0aW9uLTUwMCBlYXNlLWluLW91dCdcbiAgICBvbkNsaWNrPXtjb25uZWN0V2FsbGV0fVxuICA+XG4gICAgQ29ubmVjdCBXYWxsZXRcbiAgPC9idXR0b24+XG5cbmV4cG9ydCBkZWZhdWx0IENvbm5lY3RXYWxsZXRCdXR0b24iXSwibmFtZXMiOlsiUmVhY3QiLCJDb25uZWN0V2FsbGV0QnV0dG9uIiwiY29ubmVjdFdhbGxldCIsImJ1dHRvbiIsImNsYXNzTmFtZSIsIm9uQ2xpY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/ConnectWalletButton.tsx\n");

/***/ }),

/***/ "./components/Navbar.tsx":
/*!*******************************!*\
  !*** ./components/Navbar.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_icons_hi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-icons/hi */ \"react-icons/hi\");\n/* harmony import */ var react_icons_hi__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_icons_hi__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_icons_bi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-icons/bi */ \"react-icons/bi\");\n/* harmony import */ var react_icons_bi__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_icons_bi__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_icons_io__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-icons/io */ \"react-icons/io\");\n/* harmony import */ var react_icons_io__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_icons_io__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nconst Navbar = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-[full] flex px-2 py-8 justify-between\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_hi__WEBPACK_IMPORTED_MODULE_2__.HiMenuAlt4, {\n                className: \"text-[#93aff9] text-3xl cursor-pointer\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\Navbar.tsx\",\n                lineNumber: 9,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 flex place-content-end gap-[30px]\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_bi__WEBPACK_IMPORTED_MODULE_3__.BiSearch, {\n                        className: \"text-[#93aff9] text-3xl cursor-pointer\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\Navbar.tsx\",\n                        lineNumber: 11,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_io__WEBPACK_IMPORTED_MODULE_4__.IoIosNotificationsOutline, {\n                        className: \"text-[#93aff9] text-3xl cursor-pointer\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\Navbar.tsx\",\n                        lineNumber: 12,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\Navbar.tsx\",\n                lineNumber: 10,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\Navbar.tsx\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Navbar);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL05hdmJhci50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUF5QjtBQUNrQjtBQUNGO0FBQ2lCO0FBRTFELE1BQU1JLE1BQU0sR0FBRyxJQUFNO0lBQ25CLHFCQUNFLDhEQUFDQyxLQUFHO1FBQUNDLFNBQVMsRUFBQyx5Q0FBeUM7OzBCQUN0RCw4REFBQ0wsc0RBQVU7Z0JBQUNLLFNBQVMsRUFBQyx3Q0FBd0M7Ozs7O3lCQUFHOzBCQUNqRSw4REFBQ0QsS0FBRztnQkFBQ0MsU0FBUyxFQUFDLDBDQUEwQzs7a0NBQ3ZELDhEQUFDSixvREFBUTt3QkFBQ0ksU0FBUyxFQUFDLHdDQUF3Qzs7Ozs7aUNBQUc7a0NBQy9ELDhEQUFDSCxxRUFBeUI7d0JBQUNHLFNBQVMsRUFBQyx3Q0FBd0M7Ozs7O2lDQUFHOzs7Ozs7eUJBQzVFOzs7Ozs7aUJBQ0YsQ0FDUDtDQUNGO0FBRUQsaUVBQWVGLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9jb21wb25lbnRzL05hdmJhci50c3g/MWI4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBIaU1lbnVBbHQ0IH0gZnJvbSAncmVhY3QtaWNvbnMvaGknXG5pbXBvcnQgeyBCaVNlYXJjaCB9IGZyb20gJ3JlYWN0LWljb25zL2JpJ1xuaW1wb3J0IHsgSW9Jb3NOb3RpZmljYXRpb25zT3V0bGluZSB9IGZyb20gJ3JlYWN0LWljb25zL2lvJ1xuXG5jb25zdCBOYXZiYXIgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9J3ctW2Z1bGxdIGZsZXggcHgtMiBweS04IGp1c3RpZnktYmV0d2Vlbic+XG4gICAgICA8SGlNZW51QWx0NCBjbGFzc05hbWU9J3RleHQtWyM5M2FmZjldIHRleHQtM3hsIGN1cnNvci1wb2ludGVyJyAvPlxuICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXgtMSBmbGV4IHBsYWNlLWNvbnRlbnQtZW5kIGdhcC1bMzBweF0nPlxuICAgICAgICA8QmlTZWFyY2ggY2xhc3NOYW1lPSd0ZXh0LVsjOTNhZmY5XSB0ZXh0LTN4bCBjdXJzb3ItcG9pbnRlcicgLz5cbiAgICAgICAgPElvSW9zTm90aWZpY2F0aW9uc091dGxpbmUgY2xhc3NOYW1lPSd0ZXh0LVsjOTNhZmY5XSB0ZXh0LTN4bCBjdXJzb3ItcG9pbnRlcicgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IE5hdmJhclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiSGlNZW51QWx0NCIsIkJpU2VhcmNoIiwiSW9Jb3NOb3RpZmljYXRpb25zT3V0bGluZSIsIk5hdmJhciIsImRpdiIsImNsYXNzTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/Navbar.tsx\n");

/***/ }),

/***/ "./components/Task.tsx":
/*!*****************************!*\
  !*** ./components/Task.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_icons_bs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-icons/bs */ \"react-icons/bs\");\n/* harmony import */ var react_icons_bs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_icons_bs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst Task = ({ taskText , onClick  })=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center text-white\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \" bg-[#031956] text-[#b6c7db] flex w-[70%] rounded-[15px] mb-[10px] flex-1\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center justify-between w-full p-[20px] text-xl\",\n                    children: taskText\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\Task.tsx\",\n                    lineNumber: 9,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\Task.tsx\",\n                lineNumber: 8,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_bs__WEBPACK_IMPORTED_MODULE_1__.BsFillTrashFill, {\n                className: \"text-2xl cursor-pointer ml-10\",\n                onClick: onClick\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\Task.tsx\",\n                lineNumber: 13,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\Task.tsx\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Task);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1Rhc2sudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUFnRDtBQUNwQjtBQUc1QixNQUFNRSxJQUFJLEdBQUcsQ0FBQyxFQUFFQyxRQUFRLEdBQUdDLE9BQU8sR0FBRSxHQUFNO0lBQ3hDLHFCQUNFLDhEQUFDQyxLQUFHO1FBQUNDLFNBQVMsRUFBQyw4QkFBOEI7OzBCQUMzQyw4REFBQ0QsS0FBRztnQkFBQ0MsU0FBUyxFQUFDLDJFQUEyRTswQkFDeEYsNEVBQUNELEtBQUc7b0JBQUNDLFNBQVMsRUFBQywyREFBMkQ7OEJBQ3ZFSCxRQUFROzs7Ozs2QkFDTDs7Ozs7eUJBQ0Y7MEJBQ04sOERBQUNILDJEQUFlO2dCQUNkTSxTQUFTLEVBQUMsK0JBQStCO2dCQUN6Q0YsT0FBTyxFQUFFQSxPQUFPOzs7Ozt5QkFDaEI7Ozs7OztpQkFDRSxDQUNQO0NBQ0Y7QUFFRCxpRUFBZUYsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL2NvbXBvbmVudHMvVGFzay50c3g/YWNiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCc0ZpbGxUcmFzaEZpbGwgfSBmcm9tICdyZWFjdC1pY29ucy9icydcbmltcG9ydCAgUmVhY3QgIGZyb20gJ3JlYWN0JztcblxuXG5jb25zdCBUYXNrID0gKHsgdGFza1RleHQgLCBvbkNsaWNrIH0gKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggaXRlbXMtY2VudGVyIHRleHQtd2hpdGUnPlxuICAgICAgPGRpdiBjbGFzc05hbWU9JyBiZy1bIzAzMTk1Nl0gdGV4dC1bI2I2YzdkYl0gZmxleCB3LVs3MCVdIHJvdW5kZWQtWzE1cHhdIG1iLVsxMHB4XSBmbGV4LTEnPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHctZnVsbCBwLVsyMHB4XSB0ZXh0LXhsJz5cbiAgICAgICAgICB7dGFza1RleHR9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8QnNGaWxsVHJhc2hGaWxsXG4gICAgICAgIGNsYXNzTmFtZT0ndGV4dC0yeGwgY3Vyc29yLXBvaW50ZXIgbWwtMTAnXG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFRhc2tcbiJdLCJuYW1lcyI6WyJCc0ZpbGxUcmFzaEZpbGwiLCJSZWFjdCIsIlRhc2siLCJ0YXNrVGV4dCIsIm9uQ2xpY2siLCJkaXYiLCJjbGFzc05hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Task.tsx\n");

/***/ }),

/***/ "./components/TodoList.tsx":
/*!*********************************!*\
  !*** ./components/TodoList.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Navbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Navbar */ \"./components/Navbar.tsx\");\n/* harmony import */ var react_icons_io__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-icons/io */ \"react-icons/io\");\n/* harmony import */ var react_icons_io__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_icons_io__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Task__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Task */ \"./components/Task.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nconst TodoList = ({ tasks , input , setInput , addTask , deleteTask  })=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-[70%] bg-[#354ea3] py-4 px-9 rounded-[30px] overflow-y-scroll\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Navbar__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\TodoList.tsx\",\n                lineNumber: 8,\n                columnNumber: 3\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                className: \"text-4xl bolder text-white pb-8\",\n                children: \"What's up, Kevin!\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\TodoList.tsx\",\n                lineNumber: 9,\n                columnNumber: 3\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"py-3 text-[#7d99e9]\",\n                children: \"TODAY'S TASKS\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\TodoList.tsx\",\n                lineNumber: 12,\n                columnNumber: 3\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                className: \"flex items-center justify-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        className: \"rounded-[10px] w-full p-[10px] border-none outline-none bg-[#031956] text-white mb-[10px]\",\n                        placeholder: \"Add a task for today...\",\n                        // take input from the form here\n                        value: input,\n                        onChange: (e)=>setInput(e.target.value)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\TodoList.tsx\",\n                        lineNumber: 14,\n                        columnNumber: 5\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_io__WEBPACK_IMPORTED_MODULE_2__.IoMdAddCircle, {\n                        // Add an onClick method\n                        onClick: addTask,\n                        className: \"text-[#ea0aff] text-[50px] cursor-pointer ml-[20px] mb-[10px]\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\TodoList.tsx\",\n                        lineNumber: 21,\n                        columnNumber: 5\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\TodoList.tsx\",\n                lineNumber: 13,\n                columnNumber: 3\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                children: tasks.map((item)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Task__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        taskText: item.taskText,\n                        onClick: deleteTask(item.id)\n                    }, item.id, false, {\n                        fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\TodoList.tsx\",\n                        lineNumber: 29,\n                        columnNumber: 7\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\TodoList.tsx\",\n                lineNumber: 27,\n                columnNumber: 3\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\TodoList.tsx\",\n        lineNumber: 7,\n        columnNumber: 75\n    }, undefined);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TodoList);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1RvZG9MaXN0LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUE2QjtBQUNpQjtBQUNyQjtBQUNFO0FBRzNCLE1BQU1JLFFBQVEsR0FBRyxDQUFDLEVBQUVDLEtBQUssR0FBR0MsS0FBSyxHQUFHQyxRQUFRLEdBQUdDLE9BQU8sR0FBR0MsVUFBVSxHQUFFLGlCQUFLLDhEQUFDQyxLQUFHO1FBQUNDLFNBQVMsRUFBQyxpRUFBaUU7OzBCQUN4Siw4REFBQ1gsK0NBQU07Ozs7eUJBQUc7MEJBQ1YsOERBQUNZLElBQUU7Z0JBQUNELFNBQVMsRUFBQyxpQ0FBaUM7MEJBQUMsbUJBRWhEOzs7Ozt5QkFBSzswQkFDTCw4REFBQ0QsS0FBRztnQkFBQ0MsU0FBUyxFQUFDLHFCQUFxQjswQkFBQyxlQUFrQjs7Ozs7eUJBQU07MEJBQzdELDhEQUFDRSxNQUFJO2dCQUFDRixTQUFTLEVBQUMsa0NBQWtDOztrQ0FDaEQsOERBQUNMLE9BQUs7d0JBQ0pLLFNBQVMsRUFBQywyRkFBMkY7d0JBQ3JHRyxXQUFXLEVBQUMseUJBQXlCO3dCQUNyQyxnQ0FBZ0M7d0JBQ2hDQyxLQUFLLEVBQUVULEtBQUs7d0JBQ1pVLFFBQVEsRUFBRUMsQ0FBQUEsQ0FBQyxHQUFJVixRQUFRLENBQUNVLENBQUMsQ0FBQ0MsTUFBTSxDQUFDSCxLQUFLLENBQUM7Ozs7O2lDQUN2QztrQ0FDRiw4REFBQ2QseURBQWE7d0JBQ1osd0JBQXdCO3dCQUN4QmtCLE9BQU8sRUFBRVgsT0FBTzt3QkFDaEJHLFNBQVMsRUFBQywrREFBK0Q7Ozs7O2lDQUN6RTs7Ozs7O3lCQUNHOzBCQUNQLDhEQUFDUyxJQUFFOzBCQUNBZixLQUFLLENBQUNnQixHQUFHLENBQUNDLENBQUFBLElBQUksaUJBQ2IsOERBQUNwQiw2Q0FBSTt3QkFFSHFCLFFBQVEsRUFBRUQsSUFBSSxDQUFDQyxRQUFRO3dCQUN2QkosT0FBTyxFQUFFVixVQUFVLENBQUNhLElBQUksQ0FBQ0UsRUFBRSxDQUFDO3VCQUZ2QkYsSUFBSSxDQUFDRSxFQUFFOzs7O2lDQUdWLENBQ0o7Ozs7O3lCQUNDOzs7Ozs7aUJBQ0Q7QUFFTixpRUFBZXBCLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9jb21wb25lbnRzL1RvZG9MaXN0LnRzeD8xYzhjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOYXZiYXIgZnJvbSAnLi9OYXZiYXInXG5pbXBvcnQgeyBJb01kQWRkQ2lyY2xlIH0gZnJvbSAncmVhY3QtaWNvbnMvaW8nXG5pbXBvcnQgVGFzayBmcm9tICcuL1Rhc2snXG5pbXBvcnQgIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuXG5jb25zdCBUb2RvTGlzdCA9ICh7IHRhc2tzICwgaW5wdXQgLCBzZXRJbnB1dCAsIGFkZFRhc2sgLCBkZWxldGVUYXNrIH0pID0+IDxkaXYgY2xhc3NOYW1lPSd3LVs3MCVdIGJnLVsjMzU0ZWEzXSBweS00IHB4LTkgcm91bmRlZC1bMzBweF0gb3ZlcmZsb3cteS1zY3JvbGwnPlxuICA8TmF2YmFyIC8+XG4gIDxoMiBjbGFzc05hbWU9J3RleHQtNHhsIGJvbGRlciB0ZXh0LXdoaXRlIHBiLTgnPlxuICAgIFdoYXQmYXBvcztzIHVwLCBLZXZpbiFcbiAgPC9oMj5cbiAgPGRpdiBjbGFzc05hbWU9J3B5LTMgdGV4dC1bIzdkOTllOV0nPlRPREFZJmFwb3M7UyBUQVNLUzwvZGl2PlxuICA8Zm9ybSBjbGFzc05hbWU9J2ZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyJz5cbiAgICA8aW5wdXRcbiAgICAgIGNsYXNzTmFtZT0ncm91bmRlZC1bMTBweF0gdy1mdWxsIHAtWzEwcHhdIGJvcmRlci1ub25lIG91dGxpbmUtbm9uZSBiZy1bIzAzMTk1Nl0gdGV4dC13aGl0ZSBtYi1bMTBweF0nXG4gICAgICBwbGFjZWhvbGRlcj0nQWRkIGEgdGFzayBmb3IgdG9kYXkuLi4nXG4gICAgICAvLyB0YWtlIGlucHV0IGZyb20gdGhlIGZvcm0gaGVyZVxuICAgICAgdmFsdWU9e2lucHV0fVxuICAgICAgb25DaGFuZ2U9e2UgPT4gc2V0SW5wdXQoZS50YXJnZXQudmFsdWUpfVxuICAgIC8+XG4gICAgPElvTWRBZGRDaXJjbGVcbiAgICAgIC8vIEFkZCBhbiBvbkNsaWNrIG1ldGhvZFxuICAgICAgb25DbGljaz17YWRkVGFza31cbiAgICAgIGNsYXNzTmFtZT0ndGV4dC1bI2VhMGFmZl0gdGV4dC1bNTBweF0gY3Vyc29yLXBvaW50ZXIgbWwtWzIwcHhdIG1iLVsxMHB4XSdcbiAgICAvPlxuICA8L2Zvcm0+XG4gIDx1bD5cbiAgICB7dGFza3MubWFwKGl0ZW0gPT4gKFxuICAgICAgPFRhc2tcbiAgICAgICAga2V5PXtpdGVtLmlkfVxuICAgICAgICB0YXNrVGV4dD17aXRlbS50YXNrVGV4dH1cbiAgICAgICAgb25DbGljaz17ZGVsZXRlVGFzayhpdGVtLmlkKX1cbiAgICAgICAgLz5cbiAgICApKX1cbiAgPC91bD5cbjwvZGl2PlxuXG5leHBvcnQgZGVmYXVsdCBUb2RvTGlzdCJdLCJuYW1lcyI6WyJOYXZiYXIiLCJJb01kQWRkQ2lyY2xlIiwiVGFzayIsIlJlYWN0IiwiVG9kb0xpc3QiLCJ0YXNrcyIsImlucHV0Iiwic2V0SW5wdXQiLCJhZGRUYXNrIiwiZGVsZXRlVGFzayIsImRpdiIsImNsYXNzTmFtZSIsImgyIiwiZm9ybSIsInBsYWNlaG9sZGVyIiwidmFsdWUiLCJvbkNoYW5nZSIsImUiLCJ0YXJnZXQiLCJvbkNsaWNrIiwidWwiLCJtYXAiLCJpdGVtIiwidGFza1RleHQiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/TodoList.tsx\n");

/***/ }),

/***/ "./components/WrongNetworkMessage.tsx":
/*!********************************************!*\
  !*** ./components/WrongNetworkMessage.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst WrongNetworkMessage = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col justify-center items-center mb-20 font-bold text-2xl gap-y-3\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"----------------------------------------\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\WrongNetworkMessage.tsx\",\n                lineNumber: 6,\n                columnNumber: 3\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"Please connect to the Rinkeby Testnet\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\WrongNetworkMessage.tsx\",\n                lineNumber: 7,\n                columnNumber: 3\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"and reload the page\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\WrongNetworkMessage.tsx\",\n                lineNumber: 8,\n                columnNumber: 3\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"----------------------------------------\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\WrongNetworkMessage.tsx\",\n                lineNumber: 9,\n                columnNumber: 3\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\components\\\\WrongNetworkMessage.tsx\",\n        lineNumber: 4,\n        columnNumber: 35\n    }, undefined);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WrongNetworkMessage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1dyb25nTmV0d29ya01lc3NhZ2UudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFBNEI7QUFHNUIsTUFBTUMsbUJBQW1CLEdBQUcsa0JBQU0sOERBQUNDLEtBQUc7UUFBQ0MsU0FBUyxFQUFDLDRFQUE0RTs7MEJBRTNILDhEQUFDRCxLQUFHOzBCQUFDLDBDQUF3Qzs7Ozs7eUJBQU07MEJBQ25ELDhEQUFDQSxLQUFHOzBCQUFDLHVDQUFxQzs7Ozs7eUJBQU07MEJBQ2hELDhEQUFDQSxLQUFHOzBCQUFDLHFCQUFtQjs7Ozs7eUJBQU07MEJBQzlCLDhEQUFDQSxLQUFHOzBCQUFDLDBDQUF3Qzs7Ozs7eUJBQU07Ozs7OztpQkFDL0M7QUFFTixpRUFBZUQsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vY29tcG9uZW50cy9Xcm9uZ05ldHdvcmtNZXNzYWdlLnRzeD84MjQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAgUmVhY3QgIGZyb20gJ3JlYWN0JztcblxuXG5jb25zdCBXcm9uZ05ldHdvcmtNZXNzYWdlID0gKCkgPT4gPGRpdiBjbGFzc05hbWU9J2ZsZXggZmxleC1jb2wganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyIG1iLTIwIGZvbnQtYm9sZCB0ZXh0LTJ4bCBnYXAteS0zJz5cbiAgey8qIFByb21wdCB0byBjaGFuZ2UgbmV0d29yayB0byBSaW5rZWJ5ICovfVxuICA8ZGl2Pi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS08L2Rpdj5cbiAgPGRpdj5QbGVhc2UgY29ubmVjdCB0byB0aGUgUmlua2VieSBUZXN0bmV0PC9kaXY+XG4gIDxkaXY+YW5kIHJlbG9hZCB0aGUgcGFnZTwvZGl2PlxuICA8ZGl2Pi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS08L2Rpdj5cbjwvZGl2PlxuXG5leHBvcnQgZGVmYXVsdCBXcm9uZ05ldHdvcmtNZXNzYWdlIl0sIm5hbWVzIjpbIlJlYWN0IiwiV3JvbmdOZXR3b3JrTWVzc2FnZSIsImRpdiIsImNsYXNzTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/WrongNetworkMessage.tsx\n");

/***/ }),

/***/ "./config.tsx":
/*!********************!*\
  !*** ./config.tsx ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TaskContractAddress\": () => (/* binding */ TaskContractAddress)\n/* harmony export */ });\nconst TaskContractAddress = \"0xfDE148f09C92Dfbed2BeAFb6c026c80B679e63C8\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb25maWcudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxtQkFBbUIsR0FBRyw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9jb25maWcudHN4PzBmYTAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFRhc2tDb250cmFjdEFkZHJlc3MgPSAnMHhmREUxNDhmMDlDOTJEZmJlZDJCZUFGYjZjMDI2YzgwQjY3OWU2M0M4JyJdLCJuYW1lcyI6WyJUYXNrQ29udHJhY3RBZGRyZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./config.tsx\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_WrongNetworkMessage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/WrongNetworkMessage */ \"./components/WrongNetworkMessage.tsx\");\n/* harmony import */ var _components_ConnectWalletButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/ConnectWalletButton */ \"./components/ConnectWalletButton.tsx\");\n/* harmony import */ var _components_TodoList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/TodoList */ \"./components/TodoList.tsx\");\n/* harmony import */ var _contractsAbi_TaskContract_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../contractsAbi/TaskContract.json */ \"./contractsAbi/TaskContract.json\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../config */ \"./config.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _node_modules_ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../node_modules/ethers */ \"./node_modules/ethers/index.js\");\n/* harmony import */ var _node_modules_ethers__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_node_modules_ethers__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\n\nfunction Home() {\n    const { 0: isLoggedIn , 1: setIsLoggedIn  } = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(false);\n    const { 0: isCurrentAccount , 1: setIsCurrentAccount  } = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(\"\");\n    const { 0: input , 1: setInput  } = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(\"\");\n    const { 0: tasks , 1: setTasks  } = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_6__.useEffect)(()=>{\n        connectWallet();\n        getAllTasks();\n    });\n    const connectWallet = async ()=>{\n        try {\n            const ethereum = window.ethereum;\n            if (!ethereum) {\n                console.log(\"Metamask Not Found\");\n                return;\n            }\n            let chainId = await ethereum.request({\n                method: \"eth_chainId\"\n            });\n            console.log(\"connected to chainId :\", chainId);\n            const accounts = await ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            console.log(\"found Account :\", accounts[0]);\n            setIsLoggedIn(true);\n            setIsCurrentAccount(accounts[0]);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const getAllTasks = async ()=>{\n        try {\n            const ethereum = window.ethereum;\n            if (ethereum) {\n                const provider = new (_node_modules_ethers__WEBPACK_IMPORTED_MODULE_7___default().providers.Web3Provider)(ethereum);\n                const signer = provider.getSigner();\n                const TaskContract = new (_node_modules_ethers__WEBPACK_IMPORTED_MODULE_7___default().Contract)(_config__WEBPACK_IMPORTED_MODULE_5__.TaskContractAddress, _contractsAbi_TaskContract_json__WEBPACK_IMPORTED_MODULE_4__.abi, signer);\n                let allTasks = await TaskContract.getMyTasks();\n                setTasks(allTasks);\n                console.log(allTasks);\n            } else {\n                console.log(\"ethereum object does not exist\");\n            }\n        } catch (error) {\n            console.log(\"error:\", error);\n        }\n    };\n    const addTask = async (e)=>{\n        e.preventDefault();\n        let task = {\n            taskText: input,\n            isDeleted: false\n        };\n        try {\n            const ethereum = window.ethereum;\n            if (ethereum) {\n                const provider = new (_node_modules_ethers__WEBPACK_IMPORTED_MODULE_7___default().providers.Web3Provider)(ethereum);\n                const signer = provider.getSigner();\n                const TaskContract = new (_node_modules_ethers__WEBPACK_IMPORTED_MODULE_7___default().Contract)(_config__WEBPACK_IMPORTED_MODULE_5__.TaskContractAddress, _contractsAbi_TaskContract_json__WEBPACK_IMPORTED_MODULE_4__.abi, signer);\n                TaskContract.addTask(task.taskText, task.isDeleted).then((res)=>{\n                    setTasks([\n                        ...tasks,\n                        task\n                    ]);\n                    console.log(\"Added Task\");\n                }).catch((err)=>{\n                    console.log(err);\n                });\n            } else {\n                console.log(\"Ethereum Object Does Not Exist ! :3 \");\n            }\n        } catch (error) {\n            console.log(\"error:\", error);\n        }\n        setInput(\"\");\n    };\n    const deleteTask = (key)=>async ()=>{\n            try {\n                const ethereum = window.ethereum;\n                if (ethereum) {\n                    const provider = new (_node_modules_ethers__WEBPACK_IMPORTED_MODULE_7___default().providers.Web3Provider)(ethereum);\n                    const signer = provider.getSigner();\n                    const TaskContract = new (_node_modules_ethers__WEBPACK_IMPORTED_MODULE_7___default().Contract)(_config__WEBPACK_IMPORTED_MODULE_5__.TaskContractAddress, _contractsAbi_TaskContract_json__WEBPACK_IMPORTED_MODULE_4__.abi, signer);\n                    const deleteTaskTX = await TaskContract.deleteTask(key, true);\n                    console.log(\"Task Deleted Succesfully: \", deleteTaskTX);\n                    let allTasks = await TaskContract.getMyTasks();\n                    setTasks(allTasks);\n                } else {\n                    console.log(\"ethereum does not exist :3\");\n                }\n            } catch (error) {\n                console.log(\"error:\", error);\n            }\n        };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-[#97b5fe] h-screen w-screen flex justify-center py-6\",\n        children: !isLoggedIn ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ConnectWalletButton__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n            connectWallet: connectWallet\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\pages\\\\index.tsx\",\n            lineNumber: 134,\n            columnNumber: 22\n        }, this) :  true ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_TodoList__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            tasks: tasks,\n            setInput: setInput,\n            addTask: addTask,\n            input: input,\n            deleteTask: deleteTask\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\pages\\\\index.tsx\",\n            lineNumber: 135,\n            columnNumber: 42\n        }, this) : /*#__PURE__*/ 0\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\User\\\\my-builds\\\\spudo\\\\client\\\\pages\\\\index.tsx\",\n        lineNumber: 133,\n        columnNumber: 5\n    }, this);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBbUU7QUFDQTtBQUN0QjtBQUNVO0FBQ1I7QUFDbkI7QUFHaUI7QUFDRjtBQVc1QixTQUFTUyxJQUFJLEdBQUc7SUFFN0IsTUFBTSxLQUFDQyxVQUFVLE1BQUVDLGFBQWEsTUFBSUgsK0NBQVEsQ0FBQyxLQUFLLENBQUM7SUFDbkQsTUFBTSxLQUFDSSxnQkFBZ0IsTUFBRUMsbUJBQW1CLE1BQUlMLCtDQUFRLENBQUMsRUFBRSxDQUFDO0lBQzVELE1BQU0sS0FBQ00sS0FBSyxNQUFFQyxRQUFRLE1BQUlQLCtDQUFRLENBQUMsRUFBRSxDQUFDO0lBQ3RDLE1BQU0sS0FBQ1EsS0FBSyxNQUFFQyxRQUFRLE1BQUlULCtDQUFRLENBQUMsRUFBRSxDQUFDO0lBRXRDRCxnREFBUyxDQUFDLElBQU07UUFDZFcsYUFBYSxFQUFFO1FBQ2ZDLFdBQVcsRUFBRTtLQUNkLENBQUM7SUFHRixNQUFNRCxhQUFhLEdBQUcsVUFBWTtRQUNoQyxJQUFJO1lBQ0YsTUFBTUUsUUFBUSxHQUFJQyxNQUFNLENBQUNELFFBQVE7WUFDakMsSUFBSSxDQUFDQSxRQUFRLEVBQUU7Z0JBQ2JFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG9CQUFvQixDQUFDO2dCQUNqQyxPQUFNO2FBQ1A7WUFDRCxJQUFJQyxPQUFPLEdBQUcsTUFBTUosUUFBUSxDQUFDSyxPQUFPLENBQUM7Z0JBQUVDLE1BQU0sRUFBRSxhQUFhO2FBQUUsQ0FBQztZQUMvREosT0FBTyxDQUFDQyxHQUFHLENBQUMsd0JBQXdCLEVBQUVDLE9BQU8sQ0FBQztZQUM5QyxNQUFNRyxRQUFRLEdBQUcsTUFBTVAsUUFBUSxDQUFDSyxPQUFPLENBQUM7Z0JBQUVDLE1BQU0sRUFBRSxxQkFBcUI7YUFBRSxDQUFDO1lBQzFFSixPQUFPLENBQUNDLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRUksUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzNDaEIsYUFBYSxDQUFDLElBQUksQ0FBQztZQUNuQkUsbUJBQW1CLENBQUNjLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqQyxDQUFDLE9BQU9DLEtBQUssRUFBRTtZQUNkTixPQUFPLENBQUNDLEdBQUcsQ0FBQ0ssS0FBSyxDQUFDO1NBQ25CO0tBQ0Y7SUFFRCxNQUFNVCxXQUFXLEdBQUcsVUFBWTtRQUM5QixJQUFJO1lBQ0YsTUFBTUMsUUFBUSxHQUFHQyxNQUFNLENBQUNELFFBQVE7WUFDaEMsSUFBSUEsUUFBUSxFQUFFO2dCQUNaLE1BQU1TLFFBQVEsR0FBRyxJQUFJdkIsb0ZBQTZCLENBQUNjLFFBQVEsQ0FBQztnQkFDNUQsTUFBTVksTUFBTSxHQUFHSCxRQUFRLENBQUNJLFNBQVMsRUFBRTtnQkFDbkMsTUFBTUMsWUFBWSxHQUFHLElBQUk1QixzRUFBZSxDQUN0Q0Ysd0RBQW1CLEVBQ25CRCxnRUFBVyxFQUNYNkIsTUFBTSxDQUNQO2dCQUNELElBQUlLLFFBQVEsR0FBRyxNQUFNSCxZQUFZLENBQUNJLFVBQVUsRUFBRTtnQkFDOUNyQixRQUFRLENBQUNvQixRQUFRLENBQUM7Z0JBQ2xCZixPQUFPLENBQUNDLEdBQUcsQ0FBQ2MsUUFBUSxDQUFDO2FBQ3RCLE1BQU07Z0JBQ0xmLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGdDQUFnQyxDQUFDO2FBQzlDO1NBQ0YsQ0FBQyxPQUFPSyxLQUFLLEVBQUU7WUFDZE4sT0FBTyxDQUFDQyxHQUFHLENBQUMsUUFBUSxFQUFFSyxLQUFLLENBQUM7U0FDN0I7S0FDRjtJQUdELE1BQU1XLE9BQU8sR0FBRyxPQUFNQyxDQUFDLEdBQUk7UUFDekJBLENBQUMsQ0FBQ0MsY0FBYyxFQUFFO1FBQ2xCLElBQUlDLElBQUksR0FBRztZQUNUQyxRQUFRLEVBQUU3QixLQUFLO1lBQ2Y4QixTQUFTLEVBQUUsS0FBSztTQUNqQjtRQUNELElBQUk7WUFDRixNQUFNeEIsUUFBUSxHQUFHQyxNQUFNLENBQUNELFFBQVE7WUFDaEMsSUFBSUEsUUFBUSxFQUFFO2dCQUNaLE1BQU1TLFFBQVEsR0FBRyxJQUFJdkIsb0ZBQTZCLENBQUNjLFFBQVEsQ0FBQztnQkFDNUQsTUFBTVksTUFBTSxHQUFHSCxRQUFRLENBQUNJLFNBQVMsRUFBRTtnQkFDbkMsTUFBTUMsWUFBWSxHQUFHLElBQUk1QixzRUFBZSxDQUN0Q0Ysd0RBQW1CLEVBQ25CRCxnRUFBVyxFQUNYNkIsTUFBTSxDQUNQO2dCQUNERSxZQUFZLENBQUNLLE9BQU8sQ0FBQ0csSUFBSSxDQUFDQyxRQUFRLEVBQUVELElBQUksQ0FBQ0UsU0FBUyxDQUFDLENBQ2hEQyxJQUFJLENBQUNDLENBQUFBLEdBQUcsR0FBSTtvQkFDWDdCLFFBQVEsQ0FBQzsyQkFBSUQsS0FBSzt3QkFBRTBCLElBQUk7cUJBQUMsQ0FBQztvQkFDMUJwQixPQUFPLENBQUNDLEdBQUcsQ0FBQyxZQUFZLENBQUM7aUJBQzFCLENBQUMsQ0FDRHdCLEtBQUssQ0FBQ0MsQ0FBQUEsR0FBRyxHQUFJO29CQUNaMUIsT0FBTyxDQUFDQyxHQUFHLENBQUN5QixHQUFHLENBQUM7aUJBQ2pCLENBQUM7YUFDTCxNQUFNO2dCQUNMMUIsT0FBTyxDQUFDQyxHQUFHLENBQUMsc0NBQXNDLENBQUM7YUFDcEQ7U0FDRixDQUFDLE9BQU9LLEtBQUssRUFBRTtZQUNkTixPQUFPLENBQUNDLEdBQUcsQ0FBQyxRQUFRLEVBQUVLLEtBQUssQ0FBQztTQUM3QjtRQUNEYixRQUFRLENBQUMsRUFBRSxDQUFDO0tBQ2I7SUFHRCxNQUFNa0MsVUFBVSxHQUFHQyxDQUFBQSxHQUFHLEdBQUksVUFBWTtZQUNwQyxJQUFJO2dCQUNGLE1BQU05QixRQUFRLEdBQUdDLE1BQU0sQ0FBQ0QsUUFBUTtnQkFDaEMsSUFBSUEsUUFBUSxFQUFFO29CQUNaLE1BQU1TLFFBQVEsR0FBRyxJQUFJdkIsb0ZBQTZCLENBQUNjLFFBQVEsQ0FBQztvQkFDNUQsTUFBTVksTUFBTSxHQUFHSCxRQUFRLENBQUNJLFNBQVMsRUFBRTtvQkFDbkMsTUFBTUMsWUFBWSxHQUFHLElBQUk1QixzRUFBZSxDQUN0Q0Ysd0RBQW1CLEVBQ25CRCxnRUFBVyxFQUNYNkIsTUFBTSxDQUNQO29CQUNGLE1BQU1tQixZQUFZLEdBQUcsTUFBTWpCLFlBQVksQ0FBQ2UsVUFBVSxDQUFDQyxHQUFHLEVBQUcsSUFBSSxDQUFDO29CQUM5RDVCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDRCQUE0QixFQUFHNEIsWUFBWSxDQUFFO29CQUN6RCxJQUFJZCxRQUFRLEdBQUcsTUFBTUgsWUFBWSxDQUFDSSxVQUFVLEVBQUU7b0JBQzlDckIsUUFBUSxDQUFDb0IsUUFBUSxDQUFDO2lCQUNsQixNQUFNO29CQUNMZixPQUFPLENBQUNDLEdBQUcsQ0FBQyw0QkFBNEIsQ0FBQztpQkFDMUM7YUFDRixDQUFDLE9BQU1LLEtBQUssRUFBRTtnQkFDYk4sT0FBTyxDQUFDQyxHQUFHLENBQUMsUUFBUSxFQUFFSyxLQUFLLENBQUM7YUFDN0I7U0FDRjtJQUVELHFCQUNFLDhEQUFDd0IsS0FBRztRQUFDQyxTQUFTLEVBQUMseURBQXlEO2tCQUNyRSxDQUFDM0MsVUFBVSxpQkFBRyw4REFBQ1QsdUVBQW1CO1lBQUNpQixhQUFhLEVBQUVBLGFBQWE7Ozs7O2dCQUFJLEdBQ2xFLEtBQThCLGlCQUFHLDhEQUFDaEIsNERBQVE7WUFBQ2MsS0FBSyxFQUFFQSxLQUFLO1lBQUVELFFBQVEsRUFBRUEsUUFBUTtZQUFFd0IsT0FBTyxFQUFFQSxPQUFPO1lBQUV6QixLQUFLLEVBQUVBLEtBQUs7WUFBRW1DLFVBQVUsRUFBRUEsVUFBVTs7Ozs7Z0JBQUksaUJBQUcsQ0FBdUI7Ozs7O1lBQy9KLENBQ1A7Q0FDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL3BhZ2VzL2luZGV4LnRzeD8wN2ZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXcm9uZ05ldHdvcmtNZXNzYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvV3JvbmdOZXR3b3JrTWVzc2FnZSdcbmltcG9ydCBDb25uZWN0V2FsbGV0QnV0dG9uIGZyb20gJy4uL2NvbXBvbmVudHMvQ29ubmVjdFdhbGxldEJ1dHRvbidcbmltcG9ydCBUb2RvTGlzdCBmcm9tICcuLi9jb21wb25lbnRzL1RvZG9MaXN0J1xuaW1wb3J0IFRhc2tBYmkgZnJvbSAnLi4vY29udHJhY3RzQWJpL1Rhc2tDb250cmFjdC5qc29uJ1xuaW1wb3J0IHsgVGFza0NvbnRyYWN0QWRkcmVzcyB9IGZyb20gJy4uL2NvbmZpZydcbmltcG9ydCAgUmVhY3QgIGZyb20gJ3JlYWN0JztcblxuXG5pbXBvcnQgIGV0aGVycyAgZnJvbSAnLi4vbm9kZV9tb2R1bGVzL2V0aGVycycgXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7XG4gICAgZXRoZXJldW0/OiBhbnk7XG4gIH1cbn1cblxuXG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSG9tZSgpIHtcblxuICBjb25zdCBbaXNMb2dnZWRJbiwgc2V0SXNMb2dnZWRJbl0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2lzQ3VycmVudEFjY291bnQsIHNldElzQ3VycmVudEFjY291bnRdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFtpbnB1dCwgc2V0SW5wdXRdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFt0YXNrcywgc2V0VGFza3NdID0gdXNlU3RhdGUoW10pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25uZWN0V2FsbGV0KClcbiAgICBnZXRBbGxUYXNrcygpXG4gIH0pXG5cblxuICBjb25zdCBjb25uZWN0V2FsbGV0ID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldGhlcmV1bSAgPSB3aW5kb3cuZXRoZXJldW0gXG4gICAgICBpZiAoIWV0aGVyZXVtKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdNZXRhbWFzayBOb3QgRm91bmQnKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIGxldCBjaGFpbklkID0gYXdhaXQgZXRoZXJldW0ucmVxdWVzdCh7IG1ldGhvZDogJ2V0aF9jaGFpbklkJyB9KVxuICAgICAgY29uc29sZS5sb2coJ2Nvbm5lY3RlZCB0byBjaGFpbklkIDonLCBjaGFpbklkKVxuICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCBldGhlcmV1bS5yZXF1ZXN0KHsgbWV0aG9kOiAnZXRoX3JlcXVlc3RBY2NvdW50cycgfSlcbiAgICAgIGNvbnNvbGUubG9nKCdmb3VuZCBBY2NvdW50IDonLCBhY2NvdW50c1swXSlcbiAgICAgIHNldElzTG9nZ2VkSW4odHJ1ZSlcbiAgICAgIHNldElzQ3VycmVudEFjY291bnQoYWNjb3VudHNbMF0pXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGdldEFsbFRhc2tzID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldGhlcmV1bSA9IHdpbmRvdy5ldGhlcmV1bVxuICAgICAgaWYgKGV0aGVyZXVtKSB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuV2ViM1Byb3ZpZGVyKGV0aGVyZXVtKVxuICAgICAgICBjb25zdCBzaWduZXIgPSBwcm92aWRlci5nZXRTaWduZXIoKVxuICAgICAgICBjb25zdCBUYXNrQ29udHJhY3QgPSBuZXcgZXRoZXJzLkNvbnRyYWN0KFxuICAgICAgICAgIFRhc2tDb250cmFjdEFkZHJlc3MsXG4gICAgICAgICAgVGFza0FiaS5hYmksXG4gICAgICAgICAgc2lnbmVyXG4gICAgICAgIClcbiAgICAgICAgbGV0IGFsbFRhc2tzID0gYXdhaXQgVGFza0NvbnRyYWN0LmdldE15VGFza3MoKVxuICAgICAgICBzZXRUYXNrcyhhbGxUYXNrcylcbiAgICAgICAgY29uc29sZS5sb2coYWxsVGFza3MpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZygnZXRoZXJldW0gb2JqZWN0IGRvZXMgbm90IGV4aXN0JylcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coJ2Vycm9yOicsIGVycm9yKVxuICAgIH1cbiAgfVxuXG5cbiAgY29uc3QgYWRkVGFzayA9IGFzeW5jIGUgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIGxldCB0YXNrID0ge1xuICAgICAgdGFza1RleHQ6IGlucHV0LFxuICAgICAgaXNEZWxldGVkOiBmYWxzZVxuICAgIH1cbiAgICB0cnkge1xuICAgICAgY29uc3QgZXRoZXJldW0gPSB3aW5kb3cuZXRoZXJldW1cbiAgICAgIGlmIChldGhlcmV1bSkge1xuICAgICAgICBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLldlYjNQcm92aWRlcihldGhlcmV1bSlcbiAgICAgICAgY29uc3Qgc2lnbmVyID0gcHJvdmlkZXIuZ2V0U2lnbmVyKClcbiAgICAgICAgY29uc3QgVGFza0NvbnRyYWN0ID0gbmV3IGV0aGVycy5Db250cmFjdChcbiAgICAgICAgICBUYXNrQ29udHJhY3RBZGRyZXNzLFxuICAgICAgICAgIFRhc2tBYmkuYWJpLFxuICAgICAgICAgIHNpZ25lclxuICAgICAgICApXG4gICAgICAgIFRhc2tDb250cmFjdC5hZGRUYXNrKHRhc2sudGFza1RleHQsIHRhc2suaXNEZWxldGVkKVxuICAgICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBzZXRUYXNrcyhbLi4udGFza3MsIHRhc2tdKVxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0FkZGVkIFRhc2snKVxuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICAgICAgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdFdGhlcmV1bSBPYmplY3QgRG9lcyBOb3QgRXhpc3QgISA6MyAnKVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZygnZXJyb3I6JywgZXJyb3IpXG4gICAgfVxuICAgIHNldElucHV0KCcnKVxuICB9XG5cblxuICBjb25zdCBkZWxldGVUYXNrID0ga2V5ID0+IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXRoZXJldW0gPSB3aW5kb3cuZXRoZXJldW1cbiAgICAgIGlmIChldGhlcmV1bSkge1xuICAgICAgICBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLldlYjNQcm92aWRlcihldGhlcmV1bSlcbiAgICAgICAgY29uc3Qgc2lnbmVyID0gcHJvdmlkZXIuZ2V0U2lnbmVyKClcbiAgICAgICAgY29uc3QgVGFza0NvbnRyYWN0ID0gbmV3IGV0aGVycy5Db250cmFjdChcbiAgICAgICAgICBUYXNrQ29udHJhY3RBZGRyZXNzLFxuICAgICAgICAgIFRhc2tBYmkuYWJpLFxuICAgICAgICAgIHNpZ25lclxuICAgICAgICApXG4gICAgICAgY29uc3QgZGVsZXRlVGFza1RYID0gYXdhaXQgVGFza0NvbnRyYWN0LmRlbGV0ZVRhc2soa2V5ICwgdHJ1ZSlcbiAgICAgICBjb25zb2xlLmxvZygnVGFzayBEZWxldGVkIFN1Y2Nlc2Z1bGx5OiAnICwgZGVsZXRlVGFza1RYIClcbiAgICAgICBsZXQgYWxsVGFza3MgPSBhd2FpdCBUYXNrQ29udHJhY3QuZ2V0TXlUYXNrcygpIFxuICAgICAgIHNldFRhc2tzKGFsbFRhc2tzKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2V0aGVyZXVtIGRvZXMgbm90IGV4aXN0IDozJylcbiAgICAgIH1cbiAgICB9IGNhdGNoKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZygnZXJyb3I6JywgZXJyb3IpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT0nYmctWyM5N2I1ZmVdIGgtc2NyZWVuIHctc2NyZWVuIGZsZXgganVzdGlmeS1jZW50ZXIgcHktNic+XG4gICAgICB7IWlzTG9nZ2VkSW4gPyA8Q29ubmVjdFdhbGxldEJ1dHRvbiBjb25uZWN0V2FsbGV0PXtjb25uZWN0V2FsbGV0fSAvPiA6XG4gICAgICAgICdpcyB0aGlzIHRoZSBjb3JyZWN0IG5ldHdvcms/JyA/IDxUb2RvTGlzdCB0YXNrcz17dGFza3N9IHNldElucHV0PXtzZXRJbnB1dH0gYWRkVGFzaz17YWRkVGFza30gaW5wdXQ9e2lucHV0fSBkZWxldGVUYXNrPXtkZWxldGVUYXNrfSAvPiA6IDxXcm9uZ05ldHdvcmtNZXNzYWdlIC8+fVxuICAgIDwvZGl2PlxuICApXG59XG5cbiJdLCJuYW1lcyI6WyJXcm9uZ05ldHdvcmtNZXNzYWdlIiwiQ29ubmVjdFdhbGxldEJ1dHRvbiIsIlRvZG9MaXN0IiwiVGFza0FiaSIsIlRhc2tDb250cmFjdEFkZHJlc3MiLCJSZWFjdCIsImV0aGVycyIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiSG9tZSIsImlzTG9nZ2VkSW4iLCJzZXRJc0xvZ2dlZEluIiwiaXNDdXJyZW50QWNjb3VudCIsInNldElzQ3VycmVudEFjY291bnQiLCJpbnB1dCIsInNldElucHV0IiwidGFza3MiLCJzZXRUYXNrcyIsImNvbm5lY3RXYWxsZXQiLCJnZXRBbGxUYXNrcyIsImV0aGVyZXVtIiwid2luZG93IiwiY29uc29sZSIsImxvZyIsImNoYWluSWQiLCJyZXF1ZXN0IiwibWV0aG9kIiwiYWNjb3VudHMiLCJlcnJvciIsInByb3ZpZGVyIiwicHJvdmlkZXJzIiwiV2ViM1Byb3ZpZGVyIiwic2lnbmVyIiwiZ2V0U2lnbmVyIiwiVGFza0NvbnRyYWN0IiwiQ29udHJhY3QiLCJhYmkiLCJhbGxUYXNrcyIsImdldE15VGFza3MiLCJhZGRUYXNrIiwiZSIsInByZXZlbnREZWZhdWx0IiwidGFzayIsInRhc2tUZXh0IiwiaXNEZWxldGVkIiwidGhlbiIsInJlcyIsImNhdGNoIiwiZXJyIiwiZGVsZXRlVGFzayIsImtleSIsImRlbGV0ZVRhc2tUWCIsImRpdiIsImNsYXNzTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "aes-js":
/*!*************************!*\
  !*** external "aes-js" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("aes-js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "elliptic":
/*!***************************!*\
  !*** external "elliptic" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("elliptic");

/***/ }),

/***/ "ethers/utils/properties":
/*!******************************************!*\
  !*** external "ethers/utils/properties" ***!
  \******************************************/
/***/ ((module) => {

"use strict";
module.exports = require("ethers/utils/properties");

/***/ }),

/***/ "hash.js":
/*!**************************!*\
  !*** external "hash.js" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("hash.js");

/***/ }),

/***/ "js-sha3":
/*!**************************!*\
  !*** external "js-sha3" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("js-sha3");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-icons/bi":
/*!*********************************!*\
  !*** external "react-icons/bi" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-icons/bi");

/***/ }),

/***/ "react-icons/bs":
/*!*********************************!*\
  !*** external "react-icons/bs" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-icons/bs");

/***/ }),

/***/ "react-icons/hi":
/*!*********************************!*\
  !*** external "react-icons/hi" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-icons/hi");

/***/ }),

/***/ "react-icons/io":
/*!*********************************!*\
  !*** external "react-icons/io" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-icons/io");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "scrypt-js":
/*!****************************!*\
  !*** external "scrypt-js" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("scrypt-js");

/***/ }),

/***/ "xmlhttprequest":
/*!*********************************!*\
  !*** external "xmlhttprequest" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("xmlhttprequest");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "./contractsAbi/TaskContract.json":
/*!****************************************!*\
  !*** ./contractsAbi/TaskContract.json ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"contractName":"TaskContract","abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"taskId","type":"uint256"}],"name":"Addtask","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"taskId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isDeleted","type":"bool"}],"name":"Deletetask","type":"event"},{"inputs":[{"internalType":"string","name":"taskText","type":"string"},{"internalType":"bool","name":"isDeleted","type":"bool"}],"name":"addTask","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getMyTasks","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"taskText","type":"string"},{"internalType":"bool","name":"isDeleted","type":"bool"}],"internalType":"struct TaskContract.Task[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"taskId","type":"uint256"},{"internalType":"bool","name":"isDeleted","type":"bool"}],"name":"deleteTask","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.15+commit.e14f2714\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"taskId\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Addtask\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"taskId\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"bool\\",\\"name\\":\\"isDeleted\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"Deletetask\\",\\"type\\":\\"event\\"},{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"taskText\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"isDeleted\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"addTask\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"taskId\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"isDeleted\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"deleteTask\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getMyTasks\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"taskText\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"isDeleted\\",\\"type\\":\\"bool\\"}],\\"internalType\\":\\"struct TaskContract.Task[]\\",\\"name\\":\\"\\",\\"type\\":\\"tuple[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/TaskContract.sol\\":\\"TaskContract\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"project:/contracts/TaskContract.sol\\":{\\"keccak256\\":\\"0x84ec19c5a96d58b822242f0ceea85ce5b35497292dac41ecefcb8a6789114798\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://d330ea4c721797823e845e3b772409bf2c24de0e4eeb9da69ad8080c25983704\\",\\"dweb:/ipfs/Qmbnd7XNCqJqEWCs16broHreAUw2MEXC9pPrCZwegBB39i\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b50610e62806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806320df4581146100465780636e13f81814610062578063aaba290714610080575b600080fd5b610060600480360381019061005b919061074b565b61009c565b005b61006a6101bf565b6040516100779190610969565b60405180910390f35b61009a600480360381019061009591906109b7565b6104b5565b005b60008080549050905060006040518060600160405280838152602001858152602001841515815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101908161010c9190610c03565b5060408201518160020160006101000a81548160ff0219169083151502179055505050336001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbd50403b181867045f89f93dd82eed5344ec3647874fb94afaaee58a0aba014633826040516101b2929190610d25565b60405180910390a1505050565b60606000808054905067ffffffffffffffff8111156101e1576101e06105e8565b5b60405190808252806020026020018201604052801561021a57816020015b610207610596565b8152602001906001900390816101ff5790505b5090506000805b6000805490508110156103fb573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156102d2575060001515600082815481106102af576102ae610d4e565b5b906000526020600020906003020160020160009054906101000a900460ff161515145b156103e857600081815481106102eb576102ea610d4e565b5b90600052602060002090600302016040518060600160405290816000820154815260200160018201805461031e90610a26565b80601f016020809104026020016040519081016040528092919081815260200182805461034a90610a26565b80156103975780601f1061036c57610100808354040283529160200191610397565b820191906000526020600020905b81548152906001019060200180831161037a57829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815250508383815181106103ce576103cd610d4e565b5b602002602001018190525081806103e490610dac565b9250505b80806103f390610dac565b915050610221565b5060008167ffffffffffffffff811115610418576104176105e8565b5b60405190808252806020026020018201604052801561045157816020015b61043e610596565b8152602001906001900390816104365790505b50905060005b828110156104ab5783818151811061047257610471610d4e565b5b602002602001015182828151811061048d5761048c610d4e565b5b602002602001018190525080806104a390610dac565b915050610457565b5080935050505090565b3373ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105925780600083815481106105305761052f610d4e565b5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055507fa5db3a7d80758c134866bfcfb8c2ef411f2d7129c8998d04780c5fd827d48ecf8282604051610589929190610e03565b60405180910390a15b5050565b604051806060016040528060008152602001606081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610620826105d7565b810181811067ffffffffffffffff8211171561063f5761063e6105e8565b5b80604052505050565b60006106526105b9565b905061065e8282610617565b919050565b600067ffffffffffffffff82111561067e5761067d6105e8565b5b610687826105d7565b9050602081019050919050565b82818337600083830152505050565b60006106b66106b184610663565b610648565b9050828152602081018484840111156106d2576106d16105d2565b5b6106dd848285610694565b509392505050565b600082601f8301126106fa576106f96105cd565b5b813561070a8482602086016106a3565b91505092915050565b60008115159050919050565b61072881610713565b811461073357600080fd5b50565b6000813590506107458161071f565b92915050565b60008060408385031215610762576107616105c3565b5b600083013567ffffffffffffffff8111156107805761077f6105c8565b5b61078c858286016106e5565b925050602061079d85828601610736565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6107e6816107d3565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561082657808201518184015260208101905061080b565b83811115610835576000848401525b50505050565b6000610846826107ec565b61085081856107f7565b9350610860818560208601610808565b610869816105d7565b840191505092915050565b61087d81610713565b82525050565b600060608301600083015161089b60008601826107dd565b50602083015184820360208601526108b3828261083b565b91505060408301516108c86040860182610874565b508091505092915050565b60006108df8383610883565b905092915050565b6000602082019050919050565b60006108ff826107a7565b61090981856107b2565b93508360208202850161091b856107c3565b8060005b85811015610957578484038952815161093885826108d3565b9450610943836108e7565b925060208a0199505060018101905061091f565b50829750879550505050505092915050565b6000602082019050818103600083015261098381846108f4565b905092915050565b610994816107d3565b811461099f57600080fd5b50565b6000813590506109b18161098b565b92915050565b600080604083850312156109ce576109cd6105c3565b5b60006109dc858286016109a2565b92505060206109ed85828601610736565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a3e57607f821691505b602082108103610a5157610a506109f7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ab97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a7c565b610ac38683610a7c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610b00610afb610af6846107d3565b610adb565b6107d3565b9050919050565b6000819050919050565b610b1a83610ae5565b610b2e610b2682610b07565b848454610a89565b825550505050565b600090565b610b43610b36565b610b4e818484610b11565b505050565b5b81811015610b7257610b67600082610b3b565b600181019050610b54565b5050565b601f821115610bb757610b8881610a57565b610b9184610a6c565b81016020851015610ba0578190505b610bb4610bac85610a6c565b830182610b53565b50505b505050565b600082821c905092915050565b6000610bda60001984600802610bbc565b1980831691505092915050565b6000610bf38383610bc9565b9150826002028217905092915050565b610c0c826107ec565b67ffffffffffffffff811115610c2557610c246105e8565b5b610c2f8254610a26565b610c3a828285610b76565b600060209050601f831160018114610c6d5760008415610c5b578287015190505b610c658582610be7565b865550610ccd565b601f198416610c7b86610a57565b60005b82811015610ca357848901518255600182019150602085019450602081019050610c7e565b86831015610cc05784890151610cbc601f891682610bc9565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d0082610cd5565b9050919050565b610d1081610cf5565b82525050565b610d1f816107d3565b82525050565b6000604082019050610d3a6000830185610d07565b610d476020830184610d16565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db7826107d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610de957610de8610d7d565b5b600182019050919050565b610dfd81610713565b82525050565b6000604082019050610e186000830185610d16565b610e256020830184610df4565b939250505056fea26469706673582212209d38cd2d957178253edfb42c734b418acbec1a594638dbce8f2c5694eb14ced764736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100415760003560e01c806320df4581146100465780636e13f81814610062578063aaba290714610080575b600080fd5b610060600480360381019061005b919061074b565b61009c565b005b61006a6101bf565b6040516100779190610969565b60405180910390f35b61009a600480360381019061009591906109b7565b6104b5565b005b60008080549050905060006040518060600160405280838152602001858152602001841515815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101908161010c9190610c03565b5060408201518160020160006101000a81548160ff0219169083151502179055505050336001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbd50403b181867045f89f93dd82eed5344ec3647874fb94afaaee58a0aba014633826040516101b2929190610d25565b60405180910390a1505050565b60606000808054905067ffffffffffffffff8111156101e1576101e06105e8565b5b60405190808252806020026020018201604052801561021a57816020015b610207610596565b8152602001906001900390816101ff5790505b5090506000805b6000805490508110156103fb573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156102d2575060001515600082815481106102af576102ae610d4e565b5b906000526020600020906003020160020160009054906101000a900460ff161515145b156103e857600081815481106102eb576102ea610d4e565b5b90600052602060002090600302016040518060600160405290816000820154815260200160018201805461031e90610a26565b80601f016020809104026020016040519081016040528092919081815260200182805461034a90610a26565b80156103975780601f1061036c57610100808354040283529160200191610397565b820191906000526020600020905b81548152906001019060200180831161037a57829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815250508383815181106103ce576103cd610d4e565b5b602002602001018190525081806103e490610dac565b9250505b80806103f390610dac565b915050610221565b5060008167ffffffffffffffff811115610418576104176105e8565b5b60405190808252806020026020018201604052801561045157816020015b61043e610596565b8152602001906001900390816104365790505b50905060005b828110156104ab5783818151811061047257610471610d4e565b5b602002602001015182828151811061048d5761048c610d4e565b5b602002602001018190525080806104a390610dac565b915050610457565b5080935050505090565b3373ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105925780600083815481106105305761052f610d4e565b5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055507fa5db3a7d80758c134866bfcfb8c2ef411f2d7129c8998d04780c5fd827d48ecf8282604051610589929190610e03565b60405180910390a15b5050565b604051806060016040528060008152602001606081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610620826105d7565b810181811067ffffffffffffffff8211171561063f5761063e6105e8565b5b80604052505050565b60006106526105b9565b905061065e8282610617565b919050565b600067ffffffffffffffff82111561067e5761067d6105e8565b5b610687826105d7565b9050602081019050919050565b82818337600083830152505050565b60006106b66106b184610663565b610648565b9050828152602081018484840111156106d2576106d16105d2565b5b6106dd848285610694565b509392505050565b600082601f8301126106fa576106f96105cd565b5b813561070a8482602086016106a3565b91505092915050565b60008115159050919050565b61072881610713565b811461073357600080fd5b50565b6000813590506107458161071f565b92915050565b60008060408385031215610762576107616105c3565b5b600083013567ffffffffffffffff8111156107805761077f6105c8565b5b61078c858286016106e5565b925050602061079d85828601610736565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6107e6816107d3565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561082657808201518184015260208101905061080b565b83811115610835576000848401525b50505050565b6000610846826107ec565b61085081856107f7565b9350610860818560208601610808565b610869816105d7565b840191505092915050565b61087d81610713565b82525050565b600060608301600083015161089b60008601826107dd565b50602083015184820360208601526108b3828261083b565b91505060408301516108c86040860182610874565b508091505092915050565b60006108df8383610883565b905092915050565b6000602082019050919050565b60006108ff826107a7565b61090981856107b2565b93508360208202850161091b856107c3565b8060005b85811015610957578484038952815161093885826108d3565b9450610943836108e7565b925060208a0199505060018101905061091f565b50829750879550505050505092915050565b6000602082019050818103600083015261098381846108f4565b905092915050565b610994816107d3565b811461099f57600080fd5b50565b6000813590506109b18161098b565b92915050565b600080604083850312156109ce576109cd6105c3565b5b60006109dc858286016109a2565b92505060206109ed85828601610736565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a3e57607f821691505b602082108103610a5157610a506109f7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ab97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a7c565b610ac38683610a7c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610b00610afb610af6846107d3565b610adb565b6107d3565b9050919050565b6000819050919050565b610b1a83610ae5565b610b2e610b2682610b07565b848454610a89565b825550505050565b600090565b610b43610b36565b610b4e818484610b11565b505050565b5b81811015610b7257610b67600082610b3b565b600181019050610b54565b5050565b601f821115610bb757610b8881610a57565b610b9184610a6c565b81016020851015610ba0578190505b610bb4610bac85610a6c565b830182610b53565b50505b505050565b600082821c905092915050565b6000610bda60001984600802610bbc565b1980831691505092915050565b6000610bf38383610bc9565b9150826002028217905092915050565b610c0c826107ec565b67ffffffffffffffff811115610c2557610c246105e8565b5b610c2f8254610a26565b610c3a828285610b76565b600060209050601f831160018114610c6d5760008415610c5b578287015190505b610c658582610be7565b865550610ccd565b601f198416610c7b86610a57565b60005b82811015610ca357848901518255600182019150602085019450602081019050610c7e565b86831015610cc05784890151610cbc601f891682610bc9565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d0082610cd5565b9050919050565b610d1081610cf5565b82525050565b610d1f816107d3565b82525050565b6000604082019050610d3a6000830185610d07565b610d476020830184610d16565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db7826107d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610de957610de8610d7d565b5b600182019050919050565b610dfd81610713565b82525050565b6000604082019050610e186000830185610d16565b610e256020830184610df4565b939250505056fea26469706673582212209d38cd2d957178253edfb42c734b418acbec1a594638dbce8f2c5694eb14ced764736f6c634300080f0033","immutableReferences":{},"generatedSources":[],"deployedGeneratedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15579:2","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:2","statements":[{"nodeType":"YulAssignment","src":"57:19:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:2","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:2"},"nodeType":"YulFunctionCall","src":"67:9:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:2"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:2","type":""}],"src":"7:75:2"},{"body":{"nodeType":"YulBlock","src":"177:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:2"},"nodeType":"YulFunctionCall","src":"187:12:2"},"nodeType":"YulExpressionStatement","src":"187:12:2"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:2"},{"body":{"nodeType":"YulBlock","src":"300:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:2"},"nodeType":"YulFunctionCall","src":"310:12:2"},"nodeType":"YulExpressionStatement","src":"310:12:2"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:2"},{"body":{"nodeType":"YulBlock","src":"423:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:2"},"nodeType":"YulFunctionCall","src":"433:12:2"},"nodeType":"YulExpressionStatement","src":"433:12:2"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:2"},{"body":{"nodeType":"YulBlock","src":"546:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:2"},"nodeType":"YulFunctionCall","src":"556:12:2"},"nodeType":"YulExpressionStatement","src":"556:12:2"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:2"},{"body":{"nodeType":"YulBlock","src":"628:54:2","statements":[{"nodeType":"YulAssignment","src":"638:38:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:2","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:2"},"nodeType":"YulFunctionCall","src":"652:14:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:2","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:2"},"nodeType":"YulFunctionCall","src":"668:7:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:2"},"nodeType":"YulFunctionCall","src":"648:28:2"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:2"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:2","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:2","type":""}],"src":"580:102:2"},{"body":{"nodeType":"YulBlock","src":"716:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:2"},"nodeType":"YulFunctionCall","src":"726:88:2"},"nodeType":"YulExpressionStatement","src":"726:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:2","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:2"},"nodeType":"YulFunctionCall","src":"823:15:2"},"nodeType":"YulExpressionStatement","src":"823:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:2"},"nodeType":"YulFunctionCall","src":"847:15:2"},"nodeType":"YulExpressionStatement","src":"847:15:2"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:2"},{"body":{"nodeType":"YulBlock","src":"917:238:2","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:2","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:2"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:2"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:2"},"nodeType":"YulFunctionCall","src":"957:27:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:2"},"nodeType":"YulFunctionCall","src":"945:40:2"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:2"},"nodeType":"YulFunctionCall","src":"1098:18:2"},"nodeType":"YulExpressionStatement","src":"1098:18:2"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:2"},"nodeType":"YulFunctionCall","src":"1036:34:2"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:2"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:2"},"nodeType":"YulFunctionCall","src":"1072:22:2"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:2"},"nodeType":"YulFunctionCall","src":"1033:62:2"},"nodeType":"YulIf","src":"1030:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:2","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:2"},"nodeType":"YulFunctionCall","src":"1127:22:2"},"nodeType":"YulExpressionStatement","src":"1127:22:2"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:2","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:2","type":""}],"src":"874:281:2"},{"body":{"nodeType":"YulBlock","src":"1202:88:2","statements":[{"nodeType":"YulAssignment","src":"1212:30:2","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:2"},"nodeType":"YulFunctionCall","src":"1222:20:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:2"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:2"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:2"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:2"},"nodeType":"YulFunctionCall","src":"1251:33:2"},"nodeType":"YulExpressionStatement","src":"1251:33:2"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:2","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:2","type":""}],"src":"1161:129:2"},{"body":{"nodeType":"YulBlock","src":"1363:241:2","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:2"},"nodeType":"YulFunctionCall","src":"1470:18:2"},"nodeType":"YulExpressionStatement","src":"1470:18:2"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:2"},"nodeType":"YulFunctionCall","src":"1437:30:2"},"nodeType":"YulIf","src":"1434:56:2"},{"nodeType":"YulAssignment","src":"1500:37:2","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:2"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:2"},"nodeType":"YulFunctionCall","src":"1508:29:2"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:2"}]},{"nodeType":"YulAssignment","src":"1574:23:2","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:2"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:2"},"nodeType":"YulFunctionCall","src":"1582:15:2"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:2"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:2","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:2","type":""}],"src":"1296:308:2"},{"body":{"nodeType":"YulBlock","src":"1661:103:2","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1684:3:2"},{"name":"src","nodeType":"YulIdentifier","src":"1689:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"1694:6:2"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1671:12:2"},"nodeType":"YulFunctionCall","src":"1671:30:2"},"nodeType":"YulExpressionStatement","src":"1671:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1742:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"1747:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1738:3:2"},"nodeType":"YulFunctionCall","src":"1738:16:2"},{"kind":"number","nodeType":"YulLiteral","src":"1756:1:2","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1731:6:2"},"nodeType":"YulFunctionCall","src":"1731:27:2"},"nodeType":"YulExpressionStatement","src":"1731:27:2"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1643:3:2","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1648:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"1653:6:2","type":""}],"src":"1610:154:2"},{"body":{"nodeType":"YulBlock","src":"1854:328:2","statements":[{"nodeType":"YulAssignment","src":"1864:75:2","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1931:6:2"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1889:41:2"},"nodeType":"YulFunctionCall","src":"1889:49:2"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1873:15:2"},"nodeType":"YulFunctionCall","src":"1873:66:2"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1864:5:2"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1955:5:2"},{"name":"length","nodeType":"YulIdentifier","src":"1962:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1948:6:2"},"nodeType":"YulFunctionCall","src":"1948:21:2"},"nodeType":"YulExpressionStatement","src":"1948:21:2"},{"nodeType":"YulVariableDeclaration","src":"1978:27:2","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1993:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"2000:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1989:3:2"},"nodeType":"YulFunctionCall","src":"1989:16:2"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1982:3:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"2043:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2045:77:2"},"nodeType":"YulFunctionCall","src":"2045:79:2"},"nodeType":"YulExpressionStatement","src":"2045:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2024:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"2029:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2020:3:2"},"nodeType":"YulFunctionCall","src":"2020:16:2"},{"name":"end","nodeType":"YulIdentifier","src":"2038:3:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2017:2:2"},"nodeType":"YulFunctionCall","src":"2017:25:2"},"nodeType":"YulIf","src":"2014:112:2"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2159:3:2"},{"name":"dst","nodeType":"YulIdentifier","src":"2164:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"2169:6:2"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"2135:23:2"},"nodeType":"YulFunctionCall","src":"2135:41:2"},"nodeType":"YulExpressionStatement","src":"2135:41:2"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1827:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"1832:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"1840:3:2","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1848:5:2","type":""}],"src":"1770:412:2"},{"body":{"nodeType":"YulBlock","src":"2264:278:2","statements":[{"body":{"nodeType":"YulBlock","src":"2313:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2315:77:2"},"nodeType":"YulFunctionCall","src":"2315:79:2"},"nodeType":"YulExpressionStatement","src":"2315:79:2"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2292:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"2300:4:2","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2288:3:2"},"nodeType":"YulFunctionCall","src":"2288:17:2"},{"name":"end","nodeType":"YulIdentifier","src":"2307:3:2"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2284:3:2"},"nodeType":"YulFunctionCall","src":"2284:27:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2277:6:2"},"nodeType":"YulFunctionCall","src":"2277:35:2"},"nodeType":"YulIf","src":"2274:122:2"},{"nodeType":"YulVariableDeclaration","src":"2405:34:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2432:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2419:12:2"},"nodeType":"YulFunctionCall","src":"2419:20:2"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2409:6:2","type":""}]},{"nodeType":"YulAssignment","src":"2448:88:2","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2509:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"2517:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2505:3:2"},"nodeType":"YulFunctionCall","src":"2505:17:2"},{"name":"length","nodeType":"YulIdentifier","src":"2524:6:2"},{"name":"end","nodeType":"YulIdentifier","src":"2532:3:2"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2457:47:2"},"nodeType":"YulFunctionCall","src":"2457:79:2"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2448:5:2"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2242:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"2250:3:2","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2258:5:2","type":""}],"src":"2202:340:2"},{"body":{"nodeType":"YulBlock","src":"2590:48:2","statements":[{"nodeType":"YulAssignment","src":"2600:32:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2625:5:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2618:6:2"},"nodeType":"YulFunctionCall","src":"2618:13:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2611:6:2"},"nodeType":"YulFunctionCall","src":"2611:21:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2600:7:2"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2572:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2582:7:2","type":""}],"src":"2548:90:2"},{"body":{"nodeType":"YulBlock","src":"2684:76:2","statements":[{"body":{"nodeType":"YulBlock","src":"2738:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2750:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2740:6:2"},"nodeType":"YulFunctionCall","src":"2740:12:2"},"nodeType":"YulExpressionStatement","src":"2740:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2707:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2729:5:2"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2714:14:2"},"nodeType":"YulFunctionCall","src":"2714:21:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2704:2:2"},"nodeType":"YulFunctionCall","src":"2704:32:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2697:6:2"},"nodeType":"YulFunctionCall","src":"2697:40:2"},"nodeType":"YulIf","src":"2694:60:2"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2677:5:2","type":""}],"src":"2644:116:2"},{"body":{"nodeType":"YulBlock","src":"2815:84:2","statements":[{"nodeType":"YulAssignment","src":"2825:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2847:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2834:12:2"},"nodeType":"YulFunctionCall","src":"2834:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2825:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2887:5:2"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"2863:23:2"},"nodeType":"YulFunctionCall","src":"2863:30:2"},"nodeType":"YulExpressionStatement","src":"2863:30:2"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2793:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"2801:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2809:5:2","type":""}],"src":"2766:133:2"},{"body":{"nodeType":"YulBlock","src":"2995:558:2","statements":[{"body":{"nodeType":"YulBlock","src":"3041:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3043:77:2"},"nodeType":"YulFunctionCall","src":"3043:79:2"},"nodeType":"YulExpressionStatement","src":"3043:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3016:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"3025:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3012:3:2"},"nodeType":"YulFunctionCall","src":"3012:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"3037:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3008:3:2"},"nodeType":"YulFunctionCall","src":"3008:32:2"},"nodeType":"YulIf","src":"3005:119:2"},{"nodeType":"YulBlock","src":"3134:287:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3149:45:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3180:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3191:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3176:3:2"},"nodeType":"YulFunctionCall","src":"3176:17:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3163:12:2"},"nodeType":"YulFunctionCall","src":"3163:31:2"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3153:6:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"3241:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3243:77:2"},"nodeType":"YulFunctionCall","src":"3243:79:2"},"nodeType":"YulExpressionStatement","src":"3243:79:2"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3213:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"3221:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3210:2:2"},"nodeType":"YulFunctionCall","src":"3210:30:2"},"nodeType":"YulIf","src":"3207:117:2"},{"nodeType":"YulAssignment","src":"3338:73:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3383:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"3394:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3379:3:2"},"nodeType":"YulFunctionCall","src":"3379:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3403:7:2"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3348:30:2"},"nodeType":"YulFunctionCall","src":"3348:63:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3338:6:2"}]}]},{"nodeType":"YulBlock","src":"3431:115:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3446:16:2","value":{"kind":"number","nodeType":"YulLiteral","src":"3460:2:2","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3450:6:2","type":""}]},{"nodeType":"YulAssignment","src":"3476:60:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3508:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"3519:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3504:3:2"},"nodeType":"YulFunctionCall","src":"3504:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3528:7:2"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"3486:17:2"},"nodeType":"YulFunctionCall","src":"3486:50:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3476:6:2"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2957:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2968:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2980:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2988:6:2","type":""}],"src":"2905:648:2"},{"body":{"nodeType":"YulBlock","src":"3653:40:2","statements":[{"nodeType":"YulAssignment","src":"3664:22:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3680:5:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3674:5:2"},"nodeType":"YulFunctionCall","src":"3674:12:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3664:6:2"}]}]},"name":"array_length_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3636:5:2","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3646:6:2","type":""}],"src":"3559:134:2"},{"body":{"nodeType":"YulBlock","src":"3830:73:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3847:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"3852:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3840:6:2"},"nodeType":"YulFunctionCall","src":"3840:19:2"},"nodeType":"YulExpressionStatement","src":"3840:19:2"},{"nodeType":"YulAssignment","src":"3868:29:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3887:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3892:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3883:3:2"},"nodeType":"YulFunctionCall","src":"3883:14:2"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3868:11:2"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3802:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"3807:6:2","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3818:11:2","type":""}],"src":"3699:204:2"},{"body":{"nodeType":"YulBlock","src":"4001:60:2","statements":[{"nodeType":"YulAssignment","src":"4011:11:2","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4019:3:2"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4011:4:2"}]},{"nodeType":"YulAssignment","src":"4032:22:2","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4044:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"4049:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4040:3:2"},"nodeType":"YulFunctionCall","src":"4040:14:2"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4032:4:2"}]}]},"name":"array_dataslot_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3988:3:2","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3996:4:2","type":""}],"src":"3909:152:2"},{"body":{"nodeType":"YulBlock","src":"4112:32:2","statements":[{"nodeType":"YulAssignment","src":"4122:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"4133:5:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4122:7:2"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4094:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4104:7:2","type":""}],"src":"4067:77:2"},{"body":{"nodeType":"YulBlock","src":"4205:53:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4222:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4245:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4227:17:2"},"nodeType":"YulFunctionCall","src":"4227:24:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4215:6:2"},"nodeType":"YulFunctionCall","src":"4215:37:2"},"nodeType":"YulExpressionStatement","src":"4215:37:2"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4193:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4200:3:2","type":""}],"src":"4150:108:2"},{"body":{"nodeType":"YulBlock","src":"4323:40:2","statements":[{"nodeType":"YulAssignment","src":"4334:22:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4350:5:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4344:5:2"},"nodeType":"YulFunctionCall","src":"4344:12:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4334:6:2"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4306:5:2","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4316:6:2","type":""}],"src":"4264:99:2"},{"body":{"nodeType":"YulBlock","src":"4455:73:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4472:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"4477:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4465:6:2"},"nodeType":"YulFunctionCall","src":"4465:19:2"},"nodeType":"YulExpressionStatement","src":"4465:19:2"},{"nodeType":"YulAssignment","src":"4493:29:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4512:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"4517:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4508:3:2"},"nodeType":"YulFunctionCall","src":"4508:14:2"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4493:11:2"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4427:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"4432:6:2","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4443:11:2","type":""}],"src":"4369:159:2"},{"body":{"nodeType":"YulBlock","src":"4583:258:2","statements":[{"nodeType":"YulVariableDeclaration","src":"4593:10:2","value":{"kind":"number","nodeType":"YulLiteral","src":"4602:1:2","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4597:1:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"4662:63:2","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4687:3:2"},{"name":"i","nodeType":"YulIdentifier","src":"4692:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4683:3:2"},"nodeType":"YulFunctionCall","src":"4683:11:2"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4706:3:2"},{"name":"i","nodeType":"YulIdentifier","src":"4711:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4702:3:2"},"nodeType":"YulFunctionCall","src":"4702:11:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4696:5:2"},"nodeType":"YulFunctionCall","src":"4696:18:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4676:6:2"},"nodeType":"YulFunctionCall","src":"4676:39:2"},"nodeType":"YulExpressionStatement","src":"4676:39:2"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4623:1:2"},{"name":"length","nodeType":"YulIdentifier","src":"4626:6:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4620:2:2"},"nodeType":"YulFunctionCall","src":"4620:13:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4634:19:2","statements":[{"nodeType":"YulAssignment","src":"4636:15:2","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4645:1:2"},{"kind":"number","nodeType":"YulLiteral","src":"4648:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4641:3:2"},"nodeType":"YulFunctionCall","src":"4641:10:2"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4636:1:2"}]}]},"pre":{"nodeType":"YulBlock","src":"4616:3:2","statements":[]},"src":"4612:113:2"},{"body":{"nodeType":"YulBlock","src":"4759:76:2","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4809:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"4814:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4805:3:2"},"nodeType":"YulFunctionCall","src":"4805:16:2"},{"kind":"number","nodeType":"YulLiteral","src":"4823:1:2","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4798:6:2"},"nodeType":"YulFunctionCall","src":"4798:27:2"},"nodeType":"YulExpressionStatement","src":"4798:27:2"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4740:1:2"},{"name":"length","nodeType":"YulIdentifier","src":"4743:6:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4737:2:2"},"nodeType":"YulFunctionCall","src":"4737:13:2"},"nodeType":"YulIf","src":"4734:101:2"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4565:3:2","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4570:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"4575:6:2","type":""}],"src":"4534:307:2"},{"body":{"nodeType":"YulBlock","src":"4929:262:2","statements":[{"nodeType":"YulVariableDeclaration","src":"4939:53:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4986:5:2"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4953:32:2"},"nodeType":"YulFunctionCall","src":"4953:39:2"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4943:6:2","type":""}]},{"nodeType":"YulAssignment","src":"5001:68:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5057:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"5062:6:2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5008:48:2"},"nodeType":"YulFunctionCall","src":"5008:61:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5001:3:2"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5104:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"5111:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5100:3:2"},"nodeType":"YulFunctionCall","src":"5100:16:2"},{"name":"pos","nodeType":"YulIdentifier","src":"5118:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"5123:6:2"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5078:21:2"},"nodeType":"YulFunctionCall","src":"5078:52:2"},"nodeType":"YulExpressionStatement","src":"5078:52:2"},{"nodeType":"YulAssignment","src":"5139:46:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5150:3:2"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5177:6:2"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5155:21:2"},"nodeType":"YulFunctionCall","src":"5155:29:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5146:3:2"},"nodeType":"YulFunctionCall","src":"5146:39:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5139:3:2"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4910:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4917:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4925:3:2","type":""}],"src":"4847:344:2"},{"body":{"nodeType":"YulBlock","src":"5246:50:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5263:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5283:5:2"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5268:14:2"},"nodeType":"YulFunctionCall","src":"5268:21:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5256:6:2"},"nodeType":"YulFunctionCall","src":"5256:34:2"},"nodeType":"YulExpressionStatement","src":"5256:34:2"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5234:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5241:3:2","type":""}],"src":"5197:99:2"},{"body":{"nodeType":"YulBlock","src":"5466:657:2","statements":[{"nodeType":"YulVariableDeclaration","src":"5476:26:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5492:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"5497:4:2","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5488:3:2"},"nodeType":"YulFunctionCall","src":"5488:14:2"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5480:4:2","type":""}]},{"nodeType":"YulBlock","src":"5512:162:2","statements":[{"nodeType":"YulVariableDeclaration","src":"5545:43:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5575:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"5582:4:2","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:2"},"nodeType":"YulFunctionCall","src":"5571:16:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5565:5:2"},"nodeType":"YulFunctionCall","src":"5565:23:2"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5549:12:2","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5635:12:2"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5653:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"5658:4:2","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5649:3:2"},"nodeType":"YulFunctionCall","src":"5649:14:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5601:33:2"},"nodeType":"YulFunctionCall","src":"5601:63:2"},"nodeType":"YulExpressionStatement","src":"5601:63:2"}]},{"nodeType":"YulBlock","src":"5684:239:2","statements":[{"nodeType":"YulVariableDeclaration","src":"5723:43:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5753:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"5760:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5749:3:2"},"nodeType":"YulFunctionCall","src":"5749:16:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5743:5:2"},"nodeType":"YulFunctionCall","src":"5743:23:2"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5727:12:2","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5791:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"5796:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5787:3:2"},"nodeType":"YulFunctionCall","src":"5787:14:2"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5807:4:2"},{"name":"pos","nodeType":"YulIdentifier","src":"5813:3:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5803:3:2"},"nodeType":"YulFunctionCall","src":"5803:14:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5780:6:2"},"nodeType":"YulFunctionCall","src":"5780:38:2"},"nodeType":"YulExpressionStatement","src":"5780:38:2"},{"nodeType":"YulAssignment","src":"5831:81:2","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5893:12:2"},{"name":"tail","nodeType":"YulIdentifier","src":"5907:4:2"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5839:53:2"},"nodeType":"YulFunctionCall","src":"5839:73:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5831:4:2"}]}]},{"nodeType":"YulBlock","src":"5933:163:2","statements":[{"nodeType":"YulVariableDeclaration","src":"5973:43:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"6010:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5999:3:2"},"nodeType":"YulFunctionCall","src":"5999:16:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5993:5:2"},"nodeType":"YulFunctionCall","src":"5993:23:2"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5977:12:2","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6057:12:2"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6075:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"6080:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6071:3:2"},"nodeType":"YulFunctionCall","src":"6071:14:2"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"6029:27:2"},"nodeType":"YulFunctionCall","src":"6029:57:2"},"nodeType":"YulExpressionStatement","src":"6029:57:2"}]},{"nodeType":"YulAssignment","src":"6106:11:2","value":{"name":"tail","nodeType":"YulIdentifier","src":"6113:4:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6106:3:2"}]}]},"name":"abi_encode_t_struct$_Task_$53_memory_ptr_to_t_struct$_Task_$53_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5445:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5452:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5461:3:2","type":""}],"src":"5362:761:2"},{"body":{"nodeType":"YulBlock","src":"6249:116:2","statements":[{"nodeType":"YulAssignment","src":"6259:100:2","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6347:6:2"},{"name":"pos","nodeType":"YulIdentifier","src":"6355:3:2"}],"functionName":{"name":"abi_encode_t_struct$_Task_$53_memory_ptr_to_t_struct$_Task_$53_memory_ptr","nodeType":"YulIdentifier","src":"6273:73:2"},"nodeType":"YulFunctionCall","src":"6273:86:2"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"6259:10:2"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Task_$53_memory_ptr_to_t_struct$_Task_$53_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"6222:6:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6230:3:2","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"6238:10:2","type":""}],"src":"6129:236:2"},{"body":{"nodeType":"YulBlock","src":"6466:38:2","statements":[{"nodeType":"YulAssignment","src":"6476:22:2","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6488:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"6493:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6484:3:2"},"nodeType":"YulFunctionCall","src":"6484:14:2"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"6476:4:2"}]}]},"name":"array_nextElement_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6453:3:2","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"6461:4:2","type":""}],"src":"6371:133:2"},{"body":{"nodeType":"YulBlock","src":"6738:907:2","statements":[{"nodeType":"YulVariableDeclaration","src":"6748:88:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6830:5:2"}],"functionName":{"name":"array_length_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6762:67:2"},"nodeType":"YulFunctionCall","src":"6762:74:2"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6752:6:2","type":""}]},{"nodeType":"YulAssignment","src":"6845:113:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6946:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"6951:6:2"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6852:93:2"},"nodeType":"YulFunctionCall","src":"6852:106:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6845:3:2"}]},{"nodeType":"YulVariableDeclaration","src":"6967:20:2","value":{"name":"pos","nodeType":"YulIdentifier","src":"6984:3:2"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"6971:9:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6996:39:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7012:3:2"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7021:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"7029:4:2","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7017:3:2"},"nodeType":"YulFunctionCall","src":"7017:17:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7008:3:2"},"nodeType":"YulFunctionCall","src":"7008:27:2"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"7000:4:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7044:91:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7129:5:2"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7059:69:2"},"nodeType":"YulFunctionCall","src":"7059:76:2"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"7048:7:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7144:21:2","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"7158:7:2"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7148:6:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"7234:366:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7255:3:2"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7264:4:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"7270:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7260:3:2"},"nodeType":"YulFunctionCall","src":"7260:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7248:6:2"},"nodeType":"YulFunctionCall","src":"7248:33:2"},"nodeType":"YulExpressionStatement","src":"7248:33:2"},{"nodeType":"YulVariableDeclaration","src":"7294:34:2","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7321:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7315:5:2"},"nodeType":"YulFunctionCall","src":"7315:13:2"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"7298:13:2","type":""}]},{"nodeType":"YulAssignment","src":"7341:112:2","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"7433:13:2"},{"name":"tail","nodeType":"YulIdentifier","src":"7448:4:2"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Task_$53_memory_ptr_to_t_struct$_Task_$53_memory_ptr","nodeType":"YulIdentifier","src":"7349:83:2"},"nodeType":"YulFunctionCall","src":"7349:104:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7341:4:2"}]},{"nodeType":"YulAssignment","src":"7466:90:2","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7549:6:2"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7476:72:2"},"nodeType":"YulFunctionCall","src":"7476:80:2"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7466:6:2"}]},{"nodeType":"YulAssignment","src":"7569:21:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7580:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7585:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7576:3:2"},"nodeType":"YulFunctionCall","src":"7576:14:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7569:3:2"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7196:1:2"},{"name":"length","nodeType":"YulIdentifier","src":"7199:6:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7193:2:2"},"nodeType":"YulFunctionCall","src":"7193:13:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7207:18:2","statements":[{"nodeType":"YulAssignment","src":"7209:14:2","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7218:1:2"},{"kind":"number","nodeType":"YulLiteral","src":"7221:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7214:3:2"},"nodeType":"YulFunctionCall","src":"7214:9:2"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7209:1:2"}]}]},"pre":{"nodeType":"YulBlock","src":"7178:14:2","statements":[{"nodeType":"YulVariableDeclaration","src":"7180:10:2","value":{"kind":"number","nodeType":"YulLiteral","src":"7189:1:2","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7184:1:2","type":""}]}]},"src":"7174:426:2"},{"nodeType":"YulAssignment","src":"7609:11:2","value":{"name":"tail","nodeType":"YulIdentifier","src":"7616:4:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7609:3:2"}]},{"nodeType":"YulAssignment","src":"7629:10:2","value":{"name":"pos","nodeType":"YulIdentifier","src":"7636:3:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7629:3:2"}]}]},"name":"abi_encode_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6717:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6724:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6733:3:2","type":""}],"src":"6574:1071:2"},{"body":{"nodeType":"YulBlock","src":"7839:265:2","statements":[{"nodeType":"YulAssignment","src":"7849:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7861:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"7872:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7857:3:2"},"nodeType":"YulFunctionCall","src":"7857:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7849:4:2"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7896:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"7907:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7892:3:2"},"nodeType":"YulFunctionCall","src":"7892:17:2"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7915:4:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"7921:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7911:3:2"},"nodeType":"YulFunctionCall","src":"7911:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7885:6:2"},"nodeType":"YulFunctionCall","src":"7885:47:2"},"nodeType":"YulExpressionStatement","src":"7885:47:2"},{"nodeType":"YulAssignment","src":"7941:156:2","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8083:6:2"},{"name":"tail","nodeType":"YulIdentifier","src":"8092:4:2"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7949:133:2"},"nodeType":"YulFunctionCall","src":"7949:148:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7941:4:2"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7811:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7823:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7834:4:2","type":""}],"src":"7651:453:2"},{"body":{"nodeType":"YulBlock","src":"8153:79:2","statements":[{"body":{"nodeType":"YulBlock","src":"8210:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8219:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8222:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8212:6:2"},"nodeType":"YulFunctionCall","src":"8212:12:2"},"nodeType":"YulExpressionStatement","src":"8212:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8176:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8201:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8183:17:2"},"nodeType":"YulFunctionCall","src":"8183:24:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8173:2:2"},"nodeType":"YulFunctionCall","src":"8173:35:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8166:6:2"},"nodeType":"YulFunctionCall","src":"8166:43:2"},"nodeType":"YulIf","src":"8163:63:2"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8146:5:2","type":""}],"src":"8110:122:2"},{"body":{"nodeType":"YulBlock","src":"8290:87:2","statements":[{"nodeType":"YulAssignment","src":"8300:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8322:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8309:12:2"},"nodeType":"YulFunctionCall","src":"8309:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8300:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8365:5:2"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"8338:26:2"},"nodeType":"YulFunctionCall","src":"8338:33:2"},"nodeType":"YulExpressionStatement","src":"8338:33:2"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8268:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"8276:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8284:5:2","type":""}],"src":"8238:139:2"},{"body":{"nodeType":"YulBlock","src":"8463:388:2","statements":[{"body":{"nodeType":"YulBlock","src":"8509:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8511:77:2"},"nodeType":"YulFunctionCall","src":"8511:79:2"},"nodeType":"YulExpressionStatement","src":"8511:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8484:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"8493:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8480:3:2"},"nodeType":"YulFunctionCall","src":"8480:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"8505:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8476:3:2"},"nodeType":"YulFunctionCall","src":"8476:32:2"},"nodeType":"YulIf","src":"8473:119:2"},{"nodeType":"YulBlock","src":"8602:117:2","statements":[{"nodeType":"YulVariableDeclaration","src":"8617:15:2","value":{"kind":"number","nodeType":"YulLiteral","src":"8631:1:2","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8621:6:2","type":""}]},{"nodeType":"YulAssignment","src":"8646:63:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8681:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"8692:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8677:3:2"},"nodeType":"YulFunctionCall","src":"8677:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8701:7:2"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8656:20:2"},"nodeType":"YulFunctionCall","src":"8656:53:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8646:6:2"}]}]},{"nodeType":"YulBlock","src":"8729:115:2","statements":[{"nodeType":"YulVariableDeclaration","src":"8744:16:2","value":{"kind":"number","nodeType":"YulLiteral","src":"8758:2:2","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8748:6:2","type":""}]},{"nodeType":"YulAssignment","src":"8774:60:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8806:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"8817:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8802:3:2"},"nodeType":"YulFunctionCall","src":"8802:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8826:7:2"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"8784:17:2"},"nodeType":"YulFunctionCall","src":"8784:50:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8774:6:2"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8425:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8436:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8448:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8456:6:2","type":""}],"src":"8383:468:2"},{"body":{"nodeType":"YulBlock","src":"8885:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8902:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8905:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8895:6:2"},"nodeType":"YulFunctionCall","src":"8895:88:2"},"nodeType":"YulExpressionStatement","src":"8895:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8999:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9002:4:2","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8992:6:2"},"nodeType":"YulFunctionCall","src":"8992:15:2"},"nodeType":"YulExpressionStatement","src":"8992:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9023:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9026:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9016:6:2"},"nodeType":"YulFunctionCall","src":"9016:15:2"},"nodeType":"YulExpressionStatement","src":"9016:15:2"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"8857:180:2"},{"body":{"nodeType":"YulBlock","src":"9094:269:2","statements":[{"nodeType":"YulAssignment","src":"9104:22:2","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9118:4:2"},{"kind":"number","nodeType":"YulLiteral","src":"9124:1:2","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9114:3:2"},"nodeType":"YulFunctionCall","src":"9114:12:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9104:6:2"}]},{"nodeType":"YulVariableDeclaration","src":"9135:38:2","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9165:4:2"},{"kind":"number","nodeType":"YulLiteral","src":"9171:1:2","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9161:3:2"},"nodeType":"YulFunctionCall","src":"9161:12:2"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"9139:18:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"9212:51:2","statements":[{"nodeType":"YulAssignment","src":"9226:27:2","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9240:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"9248:4:2","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9236:3:2"},"nodeType":"YulFunctionCall","src":"9236:17:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9226:6:2"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9192:18:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9185:6:2"},"nodeType":"YulFunctionCall","src":"9185:26:2"},"nodeType":"YulIf","src":"9182:81:2"},{"body":{"nodeType":"YulBlock","src":"9315:42:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"9329:16:2"},"nodeType":"YulFunctionCall","src":"9329:18:2"},"nodeType":"YulExpressionStatement","src":"9329:18:2"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9279:18:2"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9302:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"9310:2:2","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9299:2:2"},"nodeType":"YulFunctionCall","src":"9299:14:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9276:2:2"},"nodeType":"YulFunctionCall","src":"9276:38:2"},"nodeType":"YulIf","src":"9273:84:2"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9078:4:2","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9087:6:2","type":""}],"src":"9043:320:2"},{"body":{"nodeType":"YulBlock","src":"9423:87:2","statements":[{"nodeType":"YulAssignment","src":"9433:11:2","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9441:3:2"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9433:4:2"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9461:1:2","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"9464:3:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9454:6:2"},"nodeType":"YulFunctionCall","src":"9454:14:2"},"nodeType":"YulExpressionStatement","src":"9454:14:2"},{"nodeType":"YulAssignment","src":"9477:26:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9495:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9498:4:2","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9485:9:2"},"nodeType":"YulFunctionCall","src":"9485:18:2"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9477:4:2"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9410:3:2","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9418:4:2","type":""}],"src":"9369:141:2"},{"body":{"nodeType":"YulBlock","src":"9560:49:2","statements":[{"nodeType":"YulAssignment","src":"9570:33:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9588:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"9595:2:2","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9584:3:2"},"nodeType":"YulFunctionCall","src":"9584:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"9600:2:2","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9580:3:2"},"nodeType":"YulFunctionCall","src":"9580:23:2"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9570:6:2"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9543:5:2","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9553:6:2","type":""}],"src":"9516:93:2"},{"body":{"nodeType":"YulBlock","src":"9668:54:2","statements":[{"nodeType":"YulAssignment","src":"9678:37:2","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"9703:4:2"},{"name":"value","nodeType":"YulIdentifier","src":"9709:5:2"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9699:3:2"},"nodeType":"YulFunctionCall","src":"9699:16:2"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"9678:8:2"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"9643:4:2","type":""},{"name":"value","nodeType":"YulTypedName","src":"9649:5:2","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"9659:8:2","type":""}],"src":"9615:107:2"},{"body":{"nodeType":"YulBlock","src":"9804:317:2","statements":[{"nodeType":"YulVariableDeclaration","src":"9814:35:2","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"9835:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"9847:1:2","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9831:3:2"},"nodeType":"YulFunctionCall","src":"9831:18:2"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"9818:9:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9858:109:2","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"9889:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"9900:66:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"9870:18:2"},"nodeType":"YulFunctionCall","src":"9870:97:2"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"9862:4:2","type":""}]},{"nodeType":"YulAssignment","src":"9976:51:2","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"10007:9:2"},{"name":"toInsert","nodeType":"YulIdentifier","src":"10018:8:2"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"9988:18:2"},"nodeType":"YulFunctionCall","src":"9988:39:2"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"9976:8:2"}]},{"nodeType":"YulAssignment","src":"10036:30:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10049:5:2"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"10060:4:2"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10056:3:2"},"nodeType":"YulFunctionCall","src":"10056:9:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10045:3:2"},"nodeType":"YulFunctionCall","src":"10045:21:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10036:5:2"}]},{"nodeType":"YulAssignment","src":"10075:40:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10088:5:2"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"10099:8:2"},{"name":"mask","nodeType":"YulIdentifier","src":"10109:4:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10095:3:2"},"nodeType":"YulFunctionCall","src":"10095:19:2"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10085:2:2"},"nodeType":"YulFunctionCall","src":"10085:30:2"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10075:6:2"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9765:5:2","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"9772:10:2","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"9784:8:2","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9797:6:2","type":""}],"src":"9728:393:2"},{"body":{"nodeType":"YulBlock","src":"10159:28:2","statements":[{"nodeType":"YulAssignment","src":"10169:12:2","value":{"name":"value","nodeType":"YulIdentifier","src":"10176:5:2"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10169:3:2"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10145:5:2","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10155:3:2","type":""}],"src":"10127:60:2"},{"body":{"nodeType":"YulBlock","src":"10253:82:2","statements":[{"nodeType":"YulAssignment","src":"10263:66:2","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10321:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10303:17:2"},"nodeType":"YulFunctionCall","src":"10303:24:2"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"10294:8:2"},"nodeType":"YulFunctionCall","src":"10294:34:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10276:17:2"},"nodeType":"YulFunctionCall","src":"10276:53:2"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10263:9:2"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10233:5:2","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10243:9:2","type":""}],"src":"10193:142:2"},{"body":{"nodeType":"YulBlock","src":"10388:28:2","statements":[{"nodeType":"YulAssignment","src":"10398:12:2","value":{"name":"value","nodeType":"YulIdentifier","src":"10405:5:2"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10398:3:2"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10374:5:2","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10384:3:2","type":""}],"src":"10341:75:2"},{"body":{"nodeType":"YulBlock","src":"10498:193:2","statements":[{"nodeType":"YulVariableDeclaration","src":"10508:63:2","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"10563:7:2"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10532:30:2"},"nodeType":"YulFunctionCall","src":"10532:39:2"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"10512:16:2","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10587:4:2"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10627:4:2"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10621:5:2"},"nodeType":"YulFunctionCall","src":"10621:11:2"},{"name":"offset","nodeType":"YulIdentifier","src":"10634:6:2"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"10666:16:2"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"10642:23:2"},"nodeType":"YulFunctionCall","src":"10642:41:2"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"10593:27:2"},"nodeType":"YulFunctionCall","src":"10593:91:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10580:6:2"},"nodeType":"YulFunctionCall","src":"10580:105:2"},"nodeType":"YulExpressionStatement","src":"10580:105:2"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"10475:4:2","type":""},{"name":"offset","nodeType":"YulTypedName","src":"10481:6:2","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"10489:7:2","type":""}],"src":"10422:269:2"},{"body":{"nodeType":"YulBlock","src":"10746:24:2","statements":[{"nodeType":"YulAssignment","src":"10756:8:2","value":{"kind":"number","nodeType":"YulLiteral","src":"10763:1:2","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10756:3:2"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10742:3:2","type":""}],"src":"10697:73:2"},{"body":{"nodeType":"YulBlock","src":"10829:136:2","statements":[{"nodeType":"YulVariableDeclaration","src":"10839:46:2","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"10853:30:2"},"nodeType":"YulFunctionCall","src":"10853:32:2"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"10843:6:2","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10938:4:2"},{"name":"offset","nodeType":"YulIdentifier","src":"10944:6:2"},{"name":"zero_0","nodeType":"YulIdentifier","src":"10952:6:2"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10894:43:2"},"nodeType":"YulFunctionCall","src":"10894:65:2"},"nodeType":"YulExpressionStatement","src":"10894:65:2"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"10815:4:2","type":""},{"name":"offset","nodeType":"YulTypedName","src":"10821:6:2","type":""}],"src":"10776:189:2"},{"body":{"nodeType":"YulBlock","src":"11021:136:2","statements":[{"body":{"nodeType":"YulBlock","src":"11088:63:2","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11132:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"11139:1:2","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"11102:29:2"},"nodeType":"YulFunctionCall","src":"11102:39:2"},"nodeType":"YulExpressionStatement","src":"11102:39:2"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11041:5:2"},{"name":"end","nodeType":"YulIdentifier","src":"11048:3:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11038:2:2"},"nodeType":"YulFunctionCall","src":"11038:14:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11053:26:2","statements":[{"nodeType":"YulAssignment","src":"11055:22:2","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11068:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"11075:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11064:3:2"},"nodeType":"YulFunctionCall","src":"11064:13:2"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"11055:5:2"}]}]},"pre":{"nodeType":"YulBlock","src":"11035:2:2","statements":[]},"src":"11031:120:2"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"11009:5:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"11016:3:2","type":""}],"src":"10971:186:2"},{"body":{"nodeType":"YulBlock","src":"11242:464:2","statements":[{"body":{"nodeType":"YulBlock","src":"11268:431:2","statements":[{"nodeType":"YulVariableDeclaration","src":"11282:54:2","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11330:5:2"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"11298:31:2"},"nodeType":"YulFunctionCall","src":"11298:38:2"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"11286:8:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11349:63:2","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"11372:8:2"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11400:10:2"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"11382:17:2"},"nodeType":"YulFunctionCall","src":"11382:29:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11368:3:2"},"nodeType":"YulFunctionCall","src":"11368:44:2"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"11353:11:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"11569:27:2","statements":[{"nodeType":"YulAssignment","src":"11571:23:2","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"11586:8:2"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"11571:11:2"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11553:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"11565:2:2","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11550:2:2"},"nodeType":"YulFunctionCall","src":"11550:18:2"},"nodeType":"YulIf","src":"11547:49:2"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"11638:11:2"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"11655:8:2"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11683:3:2"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"11665:17:2"},"nodeType":"YulFunctionCall","src":"11665:22:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11651:3:2"},"nodeType":"YulFunctionCall","src":"11651:37:2"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"11609:28:2"},"nodeType":"YulFunctionCall","src":"11609:80:2"},"nodeType":"YulExpressionStatement","src":"11609:80:2"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11259:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"11264:2:2","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11256:2:2"},"nodeType":"YulFunctionCall","src":"11256:11:2"},"nodeType":"YulIf","src":"11253:446:2"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"11218:5:2","type":""},{"name":"len","nodeType":"YulTypedName","src":"11225:3:2","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"11230:10:2","type":""}],"src":"11163:543:2"},{"body":{"nodeType":"YulBlock","src":"11775:54:2","statements":[{"nodeType":"YulAssignment","src":"11785:37:2","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"11810:4:2"},{"name":"value","nodeType":"YulIdentifier","src":"11816:5:2"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11806:3:2"},"nodeType":"YulFunctionCall","src":"11806:16:2"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"11785:8:2"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"11750:4:2","type":""},{"name":"value","nodeType":"YulTypedName","src":"11756:5:2","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"11766:8:2","type":""}],"src":"11712:117:2"},{"body":{"nodeType":"YulBlock","src":"11886:118:2","statements":[{"nodeType":"YulVariableDeclaration","src":"11896:68:2","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11945:1:2","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"11948:5:2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11941:3:2"},"nodeType":"YulFunctionCall","src":"11941:13:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11960:1:2","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11956:3:2"},"nodeType":"YulFunctionCall","src":"11956:6:2"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"11912:28:2"},"nodeType":"YulFunctionCall","src":"11912:51:2"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11908:3:2"},"nodeType":"YulFunctionCall","src":"11908:56:2"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"11900:4:2","type":""}]},{"nodeType":"YulAssignment","src":"11973:25:2","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11987:4:2"},{"name":"mask","nodeType":"YulIdentifier","src":"11993:4:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11983:3:2"},"nodeType":"YulFunctionCall","src":"11983:15:2"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11973:6:2"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11863:4:2","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"11869:5:2","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11879:6:2","type":""}],"src":"11835:169:2"},{"body":{"nodeType":"YulBlock","src":"12090:214:2","statements":[{"nodeType":"YulAssignment","src":"12223:37:2","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12250:4:2"},{"name":"len","nodeType":"YulIdentifier","src":"12256:3:2"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"12231:18:2"},"nodeType":"YulFunctionCall","src":"12231:29:2"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12223:4:2"}]},{"nodeType":"YulAssignment","src":"12269:29:2","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12280:4:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12290:1:2","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"12293:3:2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12286:3:2"},"nodeType":"YulFunctionCall","src":"12286:11:2"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12277:2:2"},"nodeType":"YulFunctionCall","src":"12277:21:2"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"12269:4:2"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12071:4:2","type":""},{"name":"len","nodeType":"YulTypedName","src":"12077:3:2","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"12085:4:2","type":""}],"src":"12009:295:2"},{"body":{"nodeType":"YulBlock","src":"12401:1303:2","statements":[{"nodeType":"YulVariableDeclaration","src":"12412:51:2","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12459:3:2"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12426:32:2"},"nodeType":"YulFunctionCall","src":"12426:37:2"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"12416:6:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"12548:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12550:16:2"},"nodeType":"YulFunctionCall","src":"12550:18:2"},"nodeType":"YulExpressionStatement","src":"12550:18:2"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12520:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"12528:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12517:2:2"},"nodeType":"YulFunctionCall","src":"12517:30:2"},"nodeType":"YulIf","src":"12514:56:2"},{"nodeType":"YulVariableDeclaration","src":"12580:52:2","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12626:4:2"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12620:5:2"},"nodeType":"YulFunctionCall","src":"12620:11:2"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12594:25:2"},"nodeType":"YulFunctionCall","src":"12594:38:2"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"12584:6:2","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12725:4:2"},{"name":"oldLen","nodeType":"YulIdentifier","src":"12731:6:2"},{"name":"newLen","nodeType":"YulIdentifier","src":"12739:6:2"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"12679:45:2"},"nodeType":"YulFunctionCall","src":"12679:67:2"},"nodeType":"YulExpressionStatement","src":"12679:67:2"},{"nodeType":"YulVariableDeclaration","src":"12756:18:2","value":{"kind":"number","nodeType":"YulLiteral","src":"12773:1:2","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"12760:9:2","type":""}]},{"nodeType":"YulAssignment","src":"12784:17:2","value":{"kind":"number","nodeType":"YulLiteral","src":"12797:4:2","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12784:9:2"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"12848:611:2","statements":[{"nodeType":"YulVariableDeclaration","src":"12862:37:2","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12881:6:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12893:4:2","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12889:3:2"},"nodeType":"YulFunctionCall","src":"12889:9:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12877:3:2"},"nodeType":"YulFunctionCall","src":"12877:22:2"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"12866:7:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12913:51:2","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12959:4:2"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"12927:31:2"},"nodeType":"YulFunctionCall","src":"12927:37:2"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"12917:6:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12977:10:2","value":{"kind":"number","nodeType":"YulLiteral","src":"12986:1:2","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12981:1:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"13045:163:2","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13070:6:2"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13088:3:2"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13093:9:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13084:3:2"},"nodeType":"YulFunctionCall","src":"13084:19:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13078:5:2"},"nodeType":"YulFunctionCall","src":"13078:26:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13063:6:2"},"nodeType":"YulFunctionCall","src":"13063:42:2"},"nodeType":"YulExpressionStatement","src":"13063:42:2"},{"nodeType":"YulAssignment","src":"13122:24:2","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13136:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"13144:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13132:3:2"},"nodeType":"YulFunctionCall","src":"13132:14:2"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13122:6:2"}]},{"nodeType":"YulAssignment","src":"13163:31:2","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13180:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"13191:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13176:3:2"},"nodeType":"YulFunctionCall","src":"13176:18:2"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13163:9:2"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13011:1:2"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"13014:7:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13008:2:2"},"nodeType":"YulFunctionCall","src":"13008:14:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13023:21:2","statements":[{"nodeType":"YulAssignment","src":"13025:17:2","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13034:1:2"},{"kind":"number","nodeType":"YulLiteral","src":"13037:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13030:3:2"},"nodeType":"YulFunctionCall","src":"13030:12:2"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13025:1:2"}]}]},"pre":{"nodeType":"YulBlock","src":"13004:3:2","statements":[]},"src":"13000:208:2"},{"body":{"nodeType":"YulBlock","src":"13244:156:2","statements":[{"nodeType":"YulVariableDeclaration","src":"13262:43:2","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13289:3:2"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13294:9:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13285:3:2"},"nodeType":"YulFunctionCall","src":"13285:19:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13279:5:2"},"nodeType":"YulFunctionCall","src":"13279:26:2"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"13266:9:2","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13329:6:2"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"13356:9:2"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13371:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"13379:4:2","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13367:3:2"},"nodeType":"YulFunctionCall","src":"13367:17:2"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"13337:18:2"},"nodeType":"YulFunctionCall","src":"13337:48:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13322:6:2"},"nodeType":"YulFunctionCall","src":"13322:64:2"},"nodeType":"YulExpressionStatement","src":"13322:64:2"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"13227:7:2"},{"name":"newLen","nodeType":"YulIdentifier","src":"13236:6:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13224:2:2"},"nodeType":"YulFunctionCall","src":"13224:19:2"},"nodeType":"YulIf","src":"13221:179:2"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13420:4:2"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13434:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"13442:1:2","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13430:3:2"},"nodeType":"YulFunctionCall","src":"13430:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"13446:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13426:3:2"},"nodeType":"YulFunctionCall","src":"13426:22:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13413:6:2"},"nodeType":"YulFunctionCall","src":"13413:36:2"},"nodeType":"YulExpressionStatement","src":"13413:36:2"}]},"nodeType":"YulCase","src":"12841:618:2","value":{"kind":"number","nodeType":"YulLiteral","src":"12846:1:2","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"13476:222:2","statements":[{"nodeType":"YulVariableDeclaration","src":"13490:14:2","value":{"kind":"number","nodeType":"YulLiteral","src":"13503:1:2","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13494:5:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"13527:67:2","statements":[{"nodeType":"YulAssignment","src":"13545:35:2","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13564:3:2"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13569:9:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13560:3:2"},"nodeType":"YulFunctionCall","src":"13560:19:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13554:5:2"},"nodeType":"YulFunctionCall","src":"13554:26:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13545:5:2"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"13520:6:2"},"nodeType":"YulIf","src":"13517:77:2"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13614:4:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13673:5:2"},{"name":"newLen","nodeType":"YulIdentifier","src":"13680:6:2"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"13620:52:2"},"nodeType":"YulFunctionCall","src":"13620:67:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13607:6:2"},"nodeType":"YulFunctionCall","src":"13607:81:2"},"nodeType":"YulExpressionStatement","src":"13607:81:2"}]},"nodeType":"YulCase","src":"13468:230:2","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12821:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"12829:2:2","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12818:2:2"},"nodeType":"YulFunctionCall","src":"12818:14:2"},"nodeType":"YulSwitch","src":"12811:887:2"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12390:4:2","type":""},{"name":"src","nodeType":"YulTypedName","src":"12396:3:2","type":""}],"src":"12309:1395:2"},{"body":{"nodeType":"YulBlock","src":"13755:81:2","statements":[{"nodeType":"YulAssignment","src":"13765:65:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13780:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"13787:42:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13776:3:2"},"nodeType":"YulFunctionCall","src":"13776:54:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13765:7:2"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13737:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13747:7:2","type":""}],"src":"13710:126:2"},{"body":{"nodeType":"YulBlock","src":"13887:51:2","statements":[{"nodeType":"YulAssignment","src":"13897:35:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13926:5:2"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"13908:17:2"},"nodeType":"YulFunctionCall","src":"13908:24:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13897:7:2"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13869:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13879:7:2","type":""}],"src":"13842:96:2"},{"body":{"nodeType":"YulBlock","src":"14009:53:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14026:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14049:5:2"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14031:17:2"},"nodeType":"YulFunctionCall","src":"14031:24:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14019:6:2"},"nodeType":"YulFunctionCall","src":"14019:37:2"},"nodeType":"YulExpressionStatement","src":"14019:37:2"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13997:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14004:3:2","type":""}],"src":"13944:118:2"},{"body":{"nodeType":"YulBlock","src":"14133:53:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14150:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14173:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14155:17:2"},"nodeType":"YulFunctionCall","src":"14155:24:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14143:6:2"},"nodeType":"YulFunctionCall","src":"14143:37:2"},"nodeType":"YulExpressionStatement","src":"14143:37:2"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14121:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14128:3:2","type":""}],"src":"14068:118:2"},{"body":{"nodeType":"YulBlock","src":"14318:206:2","statements":[{"nodeType":"YulAssignment","src":"14328:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14340:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"14351:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14336:3:2"},"nodeType":"YulFunctionCall","src":"14336:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14328:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14408:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14421:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"14432:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14417:3:2"},"nodeType":"YulFunctionCall","src":"14417:17:2"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14364:43:2"},"nodeType":"YulFunctionCall","src":"14364:71:2"},"nodeType":"YulExpressionStatement","src":"14364:71:2"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14489:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14502:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"14513:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14498:3:2"},"nodeType":"YulFunctionCall","src":"14498:18:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14445:43:2"},"nodeType":"YulFunctionCall","src":"14445:72:2"},"nodeType":"YulExpressionStatement","src":"14445:72:2"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14282:9:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14294:6:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14302:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14313:4:2","type":""}],"src":"14192:332:2"},{"body":{"nodeType":"YulBlock","src":"14558:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14575:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14578:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14568:6:2"},"nodeType":"YulFunctionCall","src":"14568:88:2"},"nodeType":"YulExpressionStatement","src":"14568:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14672:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14675:4:2","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14665:6:2"},"nodeType":"YulFunctionCall","src":"14665:15:2"},"nodeType":"YulExpressionStatement","src":"14665:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14696:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14699:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14689:6:2"},"nodeType":"YulFunctionCall","src":"14689:15:2"},"nodeType":"YulExpressionStatement","src":"14689:15:2"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14530:180:2"},{"body":{"nodeType":"YulBlock","src":"14744:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14761:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14764:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14754:6:2"},"nodeType":"YulFunctionCall","src":"14754:88:2"},"nodeType":"YulExpressionStatement","src":"14754:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14858:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14861:4:2","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14851:6:2"},"nodeType":"YulFunctionCall","src":"14851:15:2"},"nodeType":"YulExpressionStatement","src":"14851:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14882:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14885:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14875:6:2"},"nodeType":"YulFunctionCall","src":"14875:15:2"},"nodeType":"YulExpressionStatement","src":"14875:15:2"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14716:180:2"},{"body":{"nodeType":"YulBlock","src":"14945:190:2","statements":[{"nodeType":"YulAssignment","src":"14955:33:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14982:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14964:17:2"},"nodeType":"YulFunctionCall","src":"14964:24:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14955:5:2"}]},{"body":{"nodeType":"YulBlock","src":"15078:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15080:16:2"},"nodeType":"YulFunctionCall","src":"15080:18:2"},"nodeType":"YulExpressionStatement","src":"15080:18:2"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15003:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"15010:66:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15000:2:2"},"nodeType":"YulFunctionCall","src":"15000:77:2"},"nodeType":"YulIf","src":"14997:103:2"},{"nodeType":"YulAssignment","src":"15109:20:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15120:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"15127:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15116:3:2"},"nodeType":"YulFunctionCall","src":"15116:13:2"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15109:3:2"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14931:5:2","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14941:3:2","type":""}],"src":"14902:233:2"},{"body":{"nodeType":"YulBlock","src":"15200:50:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15217:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15237:5:2"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15222:14:2"},"nodeType":"YulFunctionCall","src":"15222:21:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15210:6:2"},"nodeType":"YulFunctionCall","src":"15210:34:2"},"nodeType":"YulExpressionStatement","src":"15210:34:2"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15188:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15195:3:2","type":""}],"src":"15141:109:2"},{"body":{"nodeType":"YulBlock","src":"15376:200:2","statements":[{"nodeType":"YulAssignment","src":"15386:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15398:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"15409:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15394:3:2"},"nodeType":"YulFunctionCall","src":"15394:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15386:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15466:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15479:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"15490:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15475:3:2"},"nodeType":"YulFunctionCall","src":"15475:17:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15422:43:2"},"nodeType":"YulFunctionCall","src":"15422:71:2"},"nodeType":"YulExpressionStatement","src":"15422:71:2"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15541:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15554:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"15565:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15550:3:2"},"nodeType":"YulFunctionCall","src":"15550:18:2"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"15503:37:2"},"nodeType":"YulFunctionCall","src":"15503:66:2"},"nodeType":"YulExpressionStatement","src":"15503:66:2"}]},"name":"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15340:9:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15352:6:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15360:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15371:4:2","type":""}],"src":"15256:320:2"}]},"contents":"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\\n        revert(0, 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := round_up_to_mul_of_32(length)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function copy_calldata_to_memory(src, dst, length) {\\n        calldatacopy(dst, src, length)\\n        // clear end\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\\n        mstore(array, length)\\n        let dst := add(array, 0x20)\\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\\n        copy_calldata_to_memory(src, dst, length)\\n    }\\n\\n    // string\\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := calldataload(offset)\\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\\n    }\\n\\n    function cleanup_t_bool(value) -> cleaned {\\n        cleaned := iszero(iszero(value))\\n    }\\n\\n    function validator_revert_t_bool(value) {\\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_bool(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_bool(value)\\n    }\\n\\n    function abi_decode_tuple_t_string_memory_ptrt_bool(headStart, dataEnd) -> value0, value1 {\\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 0))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 32\\n\\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function array_length_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function array_dataslot_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr(ptr) -> data {\\n        data := ptr\\n\\n        data := add(ptr, 0x20)\\n\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\\n        mstore(pos, cleanup_t_uint256(value))\\n    }\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function copy_memory_to_memory(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        if gt(i, length)\\n        {\\n            // clear end\\n            mstore(add(dst, length), 0)\\n        }\\n    }\\n\\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\\n        let length := array_length_t_string_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\\n        copy_memory_to_memory(add(value, 0x20), pos, length)\\n        end := add(pos, round_up_to_mul_of_32(length))\\n    }\\n\\n    function abi_encode_t_bool_to_t_bool(value, pos) {\\n        mstore(pos, cleanup_t_bool(value))\\n    }\\n\\n    // struct TaskContract.Task -> struct TaskContract.Task\\n    function abi_encode_t_struct$_Task_$53_memory_ptr_to_t_struct$_Task_$53_memory_ptr(value, pos)  -> end  {\\n        let tail := add(pos, 0x60)\\n\\n        {\\n            // id\\n\\n            let memberValue0 := mload(add(value, 0x00))\\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\\n        }\\n\\n        {\\n            // taskText\\n\\n            let memberValue0 := mload(add(value, 0x20))\\n\\n            mstore(add(pos, 0x20), sub(tail, pos))\\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\\n\\n        }\\n\\n        {\\n            // isDeleted\\n\\n            let memberValue0 := mload(add(value, 0x40))\\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\\n        }\\n\\n        end := tail\\n    }\\n\\n    function abi_encodeUpdatedPos_t_struct$_Task_$53_memory_ptr_to_t_struct$_Task_$53_memory_ptr(value0, pos) -> updatedPos {\\n        updatedPos := abi_encode_t_struct$_Task_$53_memory_ptr_to_t_struct$_Task_$53_memory_ptr(value0, pos)\\n    }\\n\\n    function array_nextElement_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr(ptr) -> next {\\n        next := add(ptr, 0x20)\\n    }\\n\\n    // struct TaskContract.Task[] -> struct TaskContract.Task[]\\n    function abi_encode_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\\n        let length := array_length_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\\n        let headStart := pos\\n        let tail := add(pos, mul(length, 0x20))\\n        let baseRef := array_dataslot_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr(value)\\n        let srcPtr := baseRef\\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\\n        {\\n            mstore(pos, sub(tail, headStart))\\n            let elementValue0 := mload(srcPtr)\\n            tail := abi_encodeUpdatedPos_t_struct$_Task_$53_memory_ptr_to_t_struct$_Task_$53_memory_ptr(elementValue0, tail)\\n            srcPtr := array_nextElement_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr(srcPtr)\\n            pos := add(pos, 0x20)\\n        }\\n        pos := tail\\n        end := pos\\n    }\\n\\n    function abi_encode_tuple_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\\n\\n    }\\n\\n    function validator_revert_t_uint256(value) {\\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint256(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint256(value)\\n    }\\n\\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 32\\n\\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function panic_error_0x22() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x22)\\n        revert(0, 0x24)\\n    }\\n\\n    function extract_byte_array_length(data) -> length {\\n        length := div(data, 2)\\n        let outOfPlaceEncoding := and(data, 1)\\n        if iszero(outOfPlaceEncoding) {\\n            length := and(length, 0x7f)\\n        }\\n\\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\\n            panic_error_0x22()\\n        }\\n    }\\n\\n    function array_dataslot_t_string_storage(ptr) -> data {\\n        data := ptr\\n\\n        mstore(0, ptr)\\n        data := keccak256(0, 0x20)\\n\\n    }\\n\\n    function divide_by_32_ceil(value) -> result {\\n        result := div(add(value, 31), 32)\\n    }\\n\\n    function shift_left_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shl(bits, value)\\n\\n    }\\n\\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\\n        let shiftBits := mul(shiftBytes, 8)\\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\\n        value := and(value, not(mask))\\n        result := or(value, and(toInsert, mask))\\n    }\\n\\n    function identity(value) -> ret {\\n        ret := value\\n    }\\n\\n    function convert_t_uint256_to_t_uint256(value) -> converted {\\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\\n    }\\n\\n    function prepare_store_t_uint256(value) -> ret {\\n        ret := value\\n    }\\n\\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\\n    }\\n\\n    function zero_value_for_split_t_uint256() -> ret {\\n        ret := 0\\n    }\\n\\n    function storage_set_to_zero_t_uint256(slot, offset) {\\n        let zero_0 := zero_value_for_split_t_uint256()\\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\\n    }\\n\\n    function clear_storage_range_t_bytes1(start, end) {\\n        for {} lt(start, end) { start := add(start, 1) }\\n        {\\n            storage_set_to_zero_t_uint256(start, 0)\\n        }\\n    }\\n\\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\\n\\n        if gt(len, 31) {\\n            let dataArea := array_dataslot_t_string_storage(array)\\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\\n            if lt(startIndex, 32) { deleteStart := dataArea }\\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\\n        }\\n\\n    }\\n\\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shr(bits, value)\\n\\n    }\\n\\n    function mask_bytes_dynamic(data, bytes) -> result {\\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\\n        result := and(data, mask)\\n    }\\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\\n        // we want to save only elements that are part of the array after resizing\\n        // others should be set to zero\\n        data := mask_bytes_dynamic(data, len)\\n        used := or(data, mul(2, len))\\n    }\\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\\n\\n        let newLen := array_length_t_string_memory_ptr(src)\\n        // Make sure array length is sane\\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        let oldLen := extract_byte_array_length(sload(slot))\\n\\n        // potentially truncate data\\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\\n\\n        let srcOffset := 0\\n\\n        srcOffset := 0x20\\n\\n        switch gt(newLen, 31)\\n        case 1 {\\n            let loopEnd := and(newLen, not(0x1f))\\n\\n            let dstPtr := array_dataslot_t_string_storage(slot)\\n            let i := 0\\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\\n                sstore(dstPtr, mload(add(src, srcOffset)))\\n                dstPtr := add(dstPtr, 1)\\n                srcOffset := add(srcOffset, 32)\\n            }\\n            if lt(loopEnd, newLen) {\\n                let lastValue := mload(add(src, srcOffset))\\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\\n            }\\n            sstore(slot, add(mul(newLen, 2), 1))\\n        }\\n        default {\\n            let value := 0\\n            if newLen {\\n                value := mload(add(src, srcOffset))\\n            }\\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\\n        }\\n    }\\n\\n    function cleanup_t_uint160(value) -> cleaned {\\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\\n    }\\n\\n    function cleanup_t_address(value) -> cleaned {\\n        cleaned := cleanup_t_uint160(value)\\n    }\\n\\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_address(value))\\n    }\\n\\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_uint256(value))\\n    }\\n\\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\\n        tail := add(headStart, 64)\\n\\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\\n\\n    }\\n\\n    function panic_error_0x32() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x32)\\n        revert(0, 0x24)\\n    }\\n\\n    function panic_error_0x11() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x11)\\n        revert(0, 0x24)\\n    }\\n\\n    function increment_t_uint256(value) -> ret {\\n        value := cleanup_t_uint256(value)\\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\\n        ret := add(value, 1)\\n    }\\n\\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_bool(value))\\n    }\\n\\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\\n        tail := add(headStart, 64)\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\\n\\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\\n\\n    }\\n\\n}\\n","id":2,"language":"Yul","name":"#utility.yul"}],"sourceMap":"57:1250:1:-:0;;;;;;;;;;;;;;;;;;;","deployedSourceMap":"57:1250:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;350:232;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;588:499;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1093:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;350:232;424:11;438:5;:12;;;;424:26;;456:5;467:33;;;;;;;;472:6;467:33;;;;480:8;467:33;;;;490:9;467:33;;;;;456:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:10;507:11;:19;519:6;507:19;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;550:27;558:10;570:6;550:27;;;;;;;:::i;:::-;;;;;;;;418:164;350:232;;:::o;588:499::-;633:13;656:23;693:5;:12;;;;682:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;656:50;;714:12;743:6;738:191;755:5;:12;;;;753:1;:14;738:191;;;805:10;787:28;;:11;:14;799:1;787:14;;;;;;;;;;;;;;;;;;;;;:28;;;:59;;;;;841:5;819:27;;:5;825:1;819:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:18;;;;;;;;;;;;:27;;;787:59;784:137;;;881:5;887:1;881:8;;;;;;;;:::i;:::-;;;;;;;;;;;;860:29;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;870:7;860:18;;;;;;;;:::i;:::-;;;;;;;:29;;;;901:9;;;;;:::i;:::-;;;;784:137;769:3;;;;;:::i;:::-;;;;738:191;;;;936:20;970:7;959:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;936:42;;991:6;986:74;1003:7;1001:1;:9;986:74;;;1039:9;1049:1;1039:12;;;;;;;;:::i;:::-;;;;;;;;1027:6;1034:1;1027:9;;;;;;;;:::i;:::-;;;;;;;:24;;;;1012:3;;;;;:::i;:::-;;;;986:74;;;;1074:6;1067:13;;;;;588:499;:::o;1093:209::-;1185:10;1162:33;;:11;:19;1174:6;1162:19;;;;;;;;;;;;;;;;;;;;;:33;;;1159:137;;1233:9;1207:5;1213:6;1207:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:23;;;:35;;;;;;;;;;;;;;;;;;1257:29;1268:6;1276:9;1257:29;;;;;;;:::i;:::-;;;;;;;;1159:137;1093:209;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:2:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:154::-;1694:6;1689:3;1684;1671:30;1756:1;1747:6;1742:3;1738:16;1731:27;1610:154;;;:::o;1770:412::-;1848:5;1873:66;1889:49;1931:6;1889:49;:::i;:::-;1873:66;:::i;:::-;1864:75;;1962:6;1955:5;1948:21;2000:4;1993:5;1989:16;2038:3;2029:6;2024:3;2020:16;2017:25;2014:112;;;2045:79;;:::i;:::-;2014:112;2135:41;2169:6;2164:3;2159;2135:41;:::i;:::-;1854:328;1770:412;;;;;:::o;2202:340::-;2258:5;2307:3;2300:4;2292:6;2288:17;2284:27;2274:122;;2315:79;;:::i;:::-;2274:122;2432:6;2419:20;2457:79;2532:3;2524:6;2517:4;2509:6;2505:17;2457:79;:::i;:::-;2448:88;;2264:278;2202:340;;;;:::o;2548:90::-;2582:7;2625:5;2618:13;2611:21;2600:32;;2548:90;;;:::o;2644:116::-;2714:21;2729:5;2714:21;:::i;:::-;2707:5;2704:32;2694:60;;2750:1;2747;2740:12;2694:60;2644:116;:::o;2766:133::-;2809:5;2847:6;2834:20;2825:29;;2863:30;2887:5;2863:30;:::i;:::-;2766:133;;;;:::o;2905:648::-;2980:6;2988;3037:2;3025:9;3016:7;3012:23;3008:32;3005:119;;;3043:79;;:::i;:::-;3005:119;3191:1;3180:9;3176:17;3163:31;3221:18;3213:6;3210:30;3207:117;;;3243:79;;:::i;:::-;3207:117;3348:63;3403:7;3394:6;3383:9;3379:22;3348:63;:::i;:::-;3338:73;;3134:287;3460:2;3486:50;3528:7;3519:6;3508:9;3504:22;3486:50;:::i;:::-;3476:60;;3431:115;2905:648;;;;;:::o;3559:134::-;3646:6;3680:5;3674:12;3664:22;;3559:134;;;:::o;3699:204::-;3818:11;3852:6;3847:3;3840:19;3892:4;3887:3;3883:14;3868:29;;3699:204;;;;:::o;3909:152::-;3996:4;4019:3;4011:11;;4049:4;4044:3;4040:14;4032:22;;3909:152;;;:::o;4067:77::-;4104:7;4133:5;4122:16;;4067:77;;;:::o;4150:108::-;4227:24;4245:5;4227:24;:::i;:::-;4222:3;4215:37;4150:108;;:::o;4264:99::-;4316:6;4350:5;4344:12;4334:22;;4264:99;;;:::o;4369:159::-;4443:11;4477:6;4472:3;4465:19;4517:4;4512:3;4508:14;4493:29;;4369:159;;;;:::o;4534:307::-;4602:1;4612:113;4626:6;4623:1;4620:13;4612:113;;;4711:1;4706:3;4702:11;4696:18;4692:1;4687:3;4683:11;4676:39;4648:2;4645:1;4641:10;4636:15;;4612:113;;;4743:6;4740:1;4737:13;4734:101;;;4823:1;4814:6;4809:3;4805:16;4798:27;4734:101;4583:258;4534:307;;;:::o;4847:344::-;4925:3;4953:39;4986:5;4953:39;:::i;:::-;5008:61;5062:6;5057:3;5008:61;:::i;:::-;5001:68;;5078:52;5123:6;5118:3;5111:4;5104:5;5100:16;5078:52;:::i;:::-;5155:29;5177:6;5155:29;:::i;:::-;5150:3;5146:39;5139:46;;4929:262;4847:344;;;;:::o;5197:99::-;5268:21;5283:5;5268:21;:::i;:::-;5263:3;5256:34;5197:99;;:::o;5362:761::-;5461:3;5497:4;5492:3;5488:14;5582:4;5575:5;5571:16;5565:23;5601:63;5658:4;5653:3;5649:14;5635:12;5601:63;:::i;:::-;5512:162;5760:4;5753:5;5749:16;5743:23;5813:3;5807:4;5803:14;5796:4;5791:3;5787:14;5780:38;5839:73;5907:4;5893:12;5839:73;:::i;:::-;5831:81;;5684:239;6010:4;6003:5;5999:16;5993:23;6029:57;6080:4;6075:3;6071:14;6057:12;6029:57;:::i;:::-;5933:163;6113:4;6106:11;;5466:657;5362:761;;;;:::o;6129:236::-;6238:10;6273:86;6355:3;6347:6;6273:86;:::i;:::-;6259:100;;6129:236;;;;:::o;6371:133::-;6461:4;6493;6488:3;6484:14;6476:22;;6371:133;;;:::o;6574:1071::-;6733:3;6762:74;6830:5;6762:74;:::i;:::-;6852:106;6951:6;6946:3;6852:106;:::i;:::-;6845:113;;6984:3;7029:4;7021:6;7017:17;7012:3;7008:27;7059:76;7129:5;7059:76;:::i;:::-;7158:7;7189:1;7174:426;7199:6;7196:1;7193:13;7174:426;;;7270:9;7264:4;7260:20;7255:3;7248:33;7321:6;7315:13;7349:104;7448:4;7433:13;7349:104;:::i;:::-;7341:112;;7476:80;7549:6;7476:80;:::i;:::-;7466:90;;7585:4;7580:3;7576:14;7569:21;;7234:366;7221:1;7218;7214:9;7209:14;;7174:426;;;7178:14;7616:4;7609:11;;7636:3;7629:10;;6738:907;;;;;6574:1071;;;;:::o;7651:453::-;7834:4;7872:2;7861:9;7857:18;7849:26;;7921:9;7915:4;7911:20;7907:1;7896:9;7892:17;7885:47;7949:148;8092:4;8083:6;7949:148;:::i;:::-;7941:156;;7651:453;;;;:::o;8110:122::-;8183:24;8201:5;8183:24;:::i;:::-;8176:5;8173:35;8163:63;;8222:1;8219;8212:12;8163:63;8110:122;:::o;8238:139::-;8284:5;8322:6;8309:20;8300:29;;8338:33;8365:5;8338:33;:::i;:::-;8238:139;;;;:::o;8383:468::-;8448:6;8456;8505:2;8493:9;8484:7;8480:23;8476:32;8473:119;;;8511:79;;:::i;:::-;8473:119;8631:1;8656:53;8701:7;8692:6;8681:9;8677:22;8656:53;:::i;:::-;8646:63;;8602:117;8758:2;8784:50;8826:7;8817:6;8806:9;8802:22;8784:50;:::i;:::-;8774:60;;8729:115;8383:468;;;;;:::o;8857:180::-;8905:77;8902:1;8895:88;9002:4;8999:1;8992:15;9026:4;9023:1;9016:15;9043:320;9087:6;9124:1;9118:4;9114:12;9104:22;;9171:1;9165:4;9161:12;9192:18;9182:81;;9248:4;9240:6;9236:17;9226:27;;9182:81;9310:2;9302:6;9299:14;9279:18;9276:38;9273:84;;9329:18;;:::i;:::-;9273:84;9094:269;9043:320;;;:::o;9369:141::-;9418:4;9441:3;9433:11;;9464:3;9461:1;9454:14;9498:4;9495:1;9485:18;9477:26;;9369:141;;;:::o;9516:93::-;9553:6;9600:2;9595;9588:5;9584:14;9580:23;9570:33;;9516:93;;;:::o;9615:107::-;9659:8;9709:5;9703:4;9699:16;9678:37;;9615:107;;;;:::o;9728:393::-;9797:6;9847:1;9835:10;9831:18;9870:97;9900:66;9889:9;9870:97;:::i;:::-;9988:39;10018:8;10007:9;9988:39;:::i;:::-;9976:51;;10060:4;10056:9;10049:5;10045:21;10036:30;;10109:4;10099:8;10095:19;10088:5;10085:30;10075:40;;9804:317;;9728:393;;;;;:::o;10127:60::-;10155:3;10176:5;10169:12;;10127:60;;;:::o;10193:142::-;10243:9;10276:53;10294:34;10303:24;10321:5;10303:24;:::i;:::-;10294:34;:::i;:::-;10276:53;:::i;:::-;10263:66;;10193:142;;;:::o;10341:75::-;10384:3;10405:5;10398:12;;10341:75;;;:::o;10422:269::-;10532:39;10563:7;10532:39;:::i;:::-;10593:91;10642:41;10666:16;10642:41;:::i;:::-;10634:6;10627:4;10621:11;10593:91;:::i;:::-;10587:4;10580:105;10498:193;10422:269;;;:::o;10697:73::-;10742:3;10697:73;:::o;10776:189::-;10853:32;;:::i;:::-;10894:65;10952:6;10944;10938:4;10894:65;:::i;:::-;10829:136;10776:189;;:::o;10971:186::-;11031:120;11048:3;11041:5;11038:14;11031:120;;;11102:39;11139:1;11132:5;11102:39;:::i;:::-;11075:1;11068:5;11064:13;11055:22;;11031:120;;;10971:186;;:::o;11163:543::-;11264:2;11259:3;11256:11;11253:446;;;11298:38;11330:5;11298:38;:::i;:::-;11382:29;11400:10;11382:29;:::i;:::-;11372:8;11368:44;11565:2;11553:10;11550:18;11547:49;;;11586:8;11571:23;;11547:49;11609:80;11665:22;11683:3;11665:22;:::i;:::-;11655:8;11651:37;11638:11;11609:80;:::i;:::-;11268:431;;11253:446;11163:543;;;:::o;11712:117::-;11766:8;11816:5;11810:4;11806:16;11785:37;;11712:117;;;;:::o;11835:169::-;11879:6;11912:51;11960:1;11956:6;11948:5;11945:1;11941:13;11912:51;:::i;:::-;11908:56;11993:4;11987;11983:15;11973:25;;11886:118;11835:169;;;;:::o;12009:295::-;12085:4;12231:29;12256:3;12250:4;12231:29;:::i;:::-;12223:37;;12293:3;12290:1;12286:11;12280:4;12277:21;12269:29;;12009:295;;;;:::o;12309:1395::-;12426:37;12459:3;12426:37;:::i;:::-;12528:18;12520:6;12517:30;12514:56;;;12550:18;;:::i;:::-;12514:56;12594:38;12626:4;12620:11;12594:38;:::i;:::-;12679:67;12739:6;12731;12725:4;12679:67;:::i;:::-;12773:1;12797:4;12784:17;;12829:2;12821:6;12818:14;12846:1;12841:618;;;;13503:1;13520:6;13517:77;;;13569:9;13564:3;13560:19;13554:26;13545:35;;13517:77;13620:67;13680:6;13673:5;13620:67;:::i;:::-;13614:4;13607:81;13476:222;12811:887;;12841:618;12893:4;12889:9;12881:6;12877:22;12927:37;12959:4;12927:37;:::i;:::-;12986:1;13000:208;13014:7;13011:1;13008:14;13000:208;;;13093:9;13088:3;13084:19;13078:26;13070:6;13063:42;13144:1;13136:6;13132:14;13122:24;;13191:2;13180:9;13176:18;13163:31;;13037:4;13034:1;13030:12;13025:17;;13000:208;;;13236:6;13227:7;13224:19;13221:179;;;13294:9;13289:3;13285:19;13279:26;13337:48;13379:4;13371:6;13367:17;13356:9;13337:48;:::i;:::-;13329:6;13322:64;13244:156;13221:179;13446:1;13442;13434:6;13430:14;13426:22;13420:4;13413:36;12848:611;;;12811:887;;12401:1303;;;12309:1395;;:::o;13710:126::-;13747:7;13787:42;13780:5;13776:54;13765:65;;13710:126;;;:::o;13842:96::-;13879:7;13908:24;13926:5;13908:24;:::i;:::-;13897:35;;13842:96;;;:::o;13944:118::-;14031:24;14049:5;14031:24;:::i;:::-;14026:3;14019:37;13944:118;;:::o;14068:::-;14155:24;14173:5;14155:24;:::i;:::-;14150:3;14143:37;14068:118;;:::o;14192:332::-;14313:4;14351:2;14340:9;14336:18;14328:26;;14364:71;14432:1;14421:9;14417:17;14408:6;14364:71;:::i;:::-;14445:72;14513:2;14502:9;14498:18;14489:6;14445:72;:::i;:::-;14192:332;;;;;:::o;14530:180::-;14578:77;14575:1;14568:88;14675:4;14672:1;14665:15;14699:4;14696:1;14689:15;14716:180;14764:77;14761:1;14754:88;14861:4;14858:1;14851:15;14885:4;14882:1;14875:15;14902:233;14941:3;14964:24;14982:5;14964:24;:::i;:::-;14955:33;;15010:66;15003:5;15000:77;14997:103;;15080:18;;:::i;:::-;14997:103;15127:1;15120:5;15116:13;15109:20;;14902:233;;;:::o;15141:109::-;15222:21;15237:5;15222:21;:::i;:::-;15217:3;15210:34;15141:109;;:::o;15256:320::-;15371:4;15409:2;15398:9;15394:18;15386:26;;15422:71;15490:1;15479:9;15475:17;15466:6;15422:71;:::i;:::-;15503:66;15565:2;15554:9;15550:18;15541:6;15503:66;:::i;:::-;15256:320;;;;;:::o","source":"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\ncontract TaskContract {\\n    event Addtask(address recipient , uint taskId);\\n    event Deletetask(uint taskId , bool isDeleted);\\n\\n    struct Task {\\n      uint id;\\n      string taskText;\\n      bool isDeleted;\\n      }\\n\\n    Task[] private tasks;\\n    mapping(uint256 => address) taskToOwner; \\n\\n    function addTask(string memory taskText, bool isDeleted)\\n  external {\\n    uint taskId = tasks.length;\\n    tasks.push(Task(taskId, taskText, isDeleted));\\n    taskToOwner[taskId] = msg.sender;\\n    emit Addtask(msg.sender, taskId);\\n  }\\n\\n    function getMyTasks() external view returns (Task[] memory) {\\n      Task[] memory temporary = new Task[](tasks.length);\\n      uint counter = 0;\\n      for (uint i=0; i<tasks.length; i++) {\\n        if(taskToOwner[i] == msg.sender && tasks[i].isDeleted == false) {\\n          temporary[counter] = tasks[i];\\n          counter++;\\n        }\\n      }\\n      Task[] memory result = new Task[](counter);\\n      for (uint i=0; i<counter; i++) {\\n        result[i] = temporary[i];\\n      }\\n      return result;\\n    }\\n\\n    function deleteTask(uint taskId, bool isDeleted) external {\\n      if(taskToOwner[taskId] == msg.sender) {\\n        tasks[taskId].isDeleted = isDeleted;\\n        emit Deletetask(taskId, isDeleted); \\n      }\\n    }\\n  \\n}","sourcePath":"/home/runner/Solidity-Todo-List-with-Nextjs-Tailwind-CSS-Template/blockchain/contracts/TaskContract.sol","ast":{"absolutePath":"project:/contracts/TaskContract.sol","exportedSymbols":{"TaskContract":[224]},"id":225,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":34,"literals":["solidity","0.8",".15"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"TaskContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":224,"linearizedBaseContracts":[224],"name":"TaskContract","nameLocation":"66:12:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"bd50403b181867045f89f93dd82eed5344ec3647874fb94afaaee58a0aba0146","id":40,"name":"Addtask","nameLocation":"91:7:1","nodeType":"EventDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"107:9:1","nodeType":"VariableDeclaration","scope":40,"src":"99:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35,"name":"address","nodeType":"ElementaryTypeName","src":"99:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":38,"indexed":false,"mutability":"mutable","name":"taskId","nameLocation":"124:6:1","nodeType":"VariableDeclaration","scope":40,"src":"119:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint","nodeType":"ElementaryTypeName","src":"119:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98:33:1"},"src":"85:47:1"},{"anonymous":false,"eventSelector":"a5db3a7d80758c134866bfcfb8c2ef411f2d7129c8998d04780c5fd827d48ecf","id":46,"name":"Deletetask","nameLocation":"143:10:1","nodeType":"EventDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"indexed":false,"mutability":"mutable","name":"taskId","nameLocation":"159:6:1","nodeType":"VariableDeclaration","scope":46,"src":"154:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint","nodeType":"ElementaryTypeName","src":"154:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":44,"indexed":false,"mutability":"mutable","name":"isDeleted","nameLocation":"173:9:1","nodeType":"VariableDeclaration","scope":46,"src":"168:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"168:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"153:30:1"},"src":"137:47:1"},{"canonicalName":"TaskContract.Task","id":53,"members":[{"constant":false,"id":48,"mutability":"mutable","name":"id","nameLocation":"215:2:1","nodeType":"VariableDeclaration","scope":53,"src":"210:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint","nodeType":"ElementaryTypeName","src":"210:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"taskText","nameLocation":"232:8:1","nodeType":"VariableDeclaration","scope":53,"src":"225:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":49,"name":"string","nodeType":"ElementaryTypeName","src":"225:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":52,"mutability":"mutable","name":"isDeleted","nameLocation":"253:9:1","nodeType":"VariableDeclaration","scope":53,"src":"248:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":51,"name":"bool","nodeType":"ElementaryTypeName","src":"248:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Task","nameLocation":"197:4:1","nodeType":"StructDefinition","scope":224,"src":"190:81:1","visibility":"public"},{"constant":false,"id":57,"mutability":"mutable","name":"tasks","nameLocation":"292:5:1","nodeType":"VariableDeclaration","scope":224,"src":"277:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage","typeString":"struct TaskContract.Task[]"},"typeName":{"baseType":{"id":55,"nodeType":"UserDefinedTypeName","pathNode":{"id":54,"name":"Task","nodeType":"IdentifierPath","referencedDeclaration":53,"src":"277:4:1"},"referencedDeclaration":53,"src":"277:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_storage_ptr","typeString":"struct TaskContract.Task"}},"id":56,"nodeType":"ArrayTypeName","src":"277:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage_ptr","typeString":"struct TaskContract.Task[]"}},"visibility":"private"},{"constant":false,"id":61,"mutability":"mutable","name":"taskToOwner","nameLocation":"331:11:1","nodeType":"VariableDeclaration","scope":224,"src":"303:39:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":60,"keyType":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"303:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"322:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"body":{"id":96,"nodeType":"Block","src":"418:164:1","statements":[{"assignments":[69],"declarations":[{"constant":false,"id":69,"mutability":"mutable","name":"taskId","nameLocation":"429:6:1","nodeType":"VariableDeclaration","scope":96,"src":"424:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint","nodeType":"ElementaryTypeName","src":"424:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":72,"initialValue":{"expression":{"id":70,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"438:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage","typeString":"struct TaskContract.Task storage ref[] storage ref"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"438:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"424:26:1"},{"expression":{"arguments":[{"arguments":[{"id":77,"name":"taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"472:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":78,"name":"taskText","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"480:8:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":79,"name":"isDeleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"490:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":76,"name":"Task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"467:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Task_$53_storage_ptr_$","typeString":"type(struct TaskContract.Task storage pointer)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"467:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_memory_ptr","typeString":"struct TaskContract.Task memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Task_$53_memory_ptr","typeString":"struct TaskContract.Task memory"}],"expression":{"id":73,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"456:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage","typeString":"struct TaskContract.Task storage ref[] storage ref"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"456:10:1","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Task_$53_storage_$dyn_storage_ptr_$_t_struct$_Task_$53_storage_$returns$__$bound_to$_t_array$_t_struct$_Task_$53_storage_$dyn_storage_ptr_$","typeString":"function (struct TaskContract.Task storage ref[] storage pointer,struct TaskContract.Task storage ref)"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"456:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":82,"nodeType":"ExpressionStatement","src":"456:45:1"},{"expression":{"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":83,"name":"taskToOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"507:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":85,"indexExpression":{"id":84,"name":"taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"519:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"507:19:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":86,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"529:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"529:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"507:32:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":89,"nodeType":"ExpressionStatement","src":"507:32:1"},{"eventCall":{"arguments":[{"expression":{"id":91,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"558:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"558:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":93,"name":"taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"570:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":90,"name":"Addtask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"550:7:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"550:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":95,"nodeType":"EmitStatement","src":"545:32:1"}]},"functionSelector":"20df4581","id":97,"implemented":true,"kind":"function","modifiers":[],"name":"addTask","nameLocation":"359:7:1","nodeType":"FunctionDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"taskText","nameLocation":"381:8:1","nodeType":"VariableDeclaration","scope":97,"src":"367:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":62,"name":"string","nodeType":"ElementaryTypeName","src":"367:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"isDeleted","nameLocation":"396:9:1","nodeType":"VariableDeclaration","scope":97,"src":"391:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":64,"name":"bool","nodeType":"ElementaryTypeName","src":"391:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"366:40:1"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"418:0:1"},"scope":224,"src":"350:232:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":194,"nodeType":"Block","src":"648:439:1","statements":[{"assignments":[108],"declarations":[{"constant":false,"id":108,"mutability":"mutable","name":"temporary","nameLocation":"670:9:1","nodeType":"VariableDeclaration","scope":194,"src":"656:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct TaskContract.Task[]"},"typeName":{"baseType":{"id":106,"nodeType":"UserDefinedTypeName","pathNode":{"id":105,"name":"Task","nodeType":"IdentifierPath","referencedDeclaration":53,"src":"656:4:1"},"referencedDeclaration":53,"src":"656:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_storage_ptr","typeString":"struct TaskContract.Task"}},"id":107,"nodeType":"ArrayTypeName","src":"656:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage_ptr","typeString":"struct TaskContract.Task[]"}},"visibility":"internal"}],"id":116,"initialValue":{"arguments":[{"expression":{"id":113,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"693:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage","typeString":"struct TaskContract.Task storage ref[] storage ref"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"693:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"682:10:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct TaskContract.Task memory[] memory)"},"typeName":{"baseType":{"id":110,"nodeType":"UserDefinedTypeName","pathNode":{"id":109,"name":"Task","nodeType":"IdentifierPath","referencedDeclaration":53,"src":"686:4:1"},"referencedDeclaration":53,"src":"686:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_storage_ptr","typeString":"struct TaskContract.Task"}},"id":111,"nodeType":"ArrayTypeName","src":"686:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage_ptr","typeString":"struct TaskContract.Task[]"}}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"682:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct TaskContract.Task memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"656:50:1"},{"assignments":[118],"declarations":[{"constant":false,"id":118,"mutability":"mutable","name":"counter","nameLocation":"719:7:1","nodeType":"VariableDeclaration","scope":194,"src":"714:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint","nodeType":"ElementaryTypeName","src":"714:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":120,"initialValue":{"hexValue":"30","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"729:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"714:16:1"},{"body":{"id":158,"nodeType":"Block","src":"774:155:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":132,"name":"taskToOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"787:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":134,"indexExpression":{"id":133,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"799:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"787:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"805:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"805:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"787:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":138,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"819:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage","typeString":"struct TaskContract.Task storage ref[] storage ref"}},"id":140,"indexExpression":{"id":139,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"825:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"819:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_storage","typeString":"struct TaskContract.Task storage ref"}},"id":141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isDeleted","nodeType":"MemberAccess","referencedDeclaration":52,"src":"819:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"841:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"819:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"787:59:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":157,"nodeType":"IfStatement","src":"784:137:1","trueBody":{"id":156,"nodeType":"Block","src":"848:73:1","statements":[{"expression":{"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":145,"name":"temporary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"860:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct TaskContract.Task memory[] memory"}},"id":147,"indexExpression":{"id":146,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"860:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_memory_ptr","typeString":"struct TaskContract.Task memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":148,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"881:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage","typeString":"struct TaskContract.Task storage ref[] storage ref"}},"id":150,"indexExpression":{"id":149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"887:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"881:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_storage","typeString":"struct TaskContract.Task storage ref"}},"src":"860:29:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_memory_ptr","typeString":"struct TaskContract.Task memory"}},"id":152,"nodeType":"ExpressionStatement","src":"860:29:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"901:9:1","subExpression":{"id":153,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"901:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":155,"nodeType":"ExpressionStatement","src":"901:9:1"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"753:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":126,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"755:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage","typeString":"struct TaskContract.Task storage ref[] storage ref"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"755:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"753:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":159,"initializationExpression":{"assignments":[122],"declarations":[{"constant":false,"id":122,"mutability":"mutable","name":"i","nameLocation":"748:1:1","nodeType":"VariableDeclaration","scope":159,"src":"743:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint","nodeType":"ElementaryTypeName","src":"743:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":124,"initialValue":{"hexValue":"30","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"750:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"743:8:1"},"loopExpression":{"expression":{"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"769:3:1","subExpression":{"id":129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"769:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":131,"nodeType":"ExpressionStatement","src":"769:3:1"},"nodeType":"ForStatement","src":"738:191:1"},{"assignments":[164],"declarations":[{"constant":false,"id":164,"mutability":"mutable","name":"result","nameLocation":"950:6:1","nodeType":"VariableDeclaration","scope":194,"src":"936:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct TaskContract.Task[]"},"typeName":{"baseType":{"id":162,"nodeType":"UserDefinedTypeName","pathNode":{"id":161,"name":"Task","nodeType":"IdentifierPath","referencedDeclaration":53,"src":"936:4:1"},"referencedDeclaration":53,"src":"936:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_storage_ptr","typeString":"struct TaskContract.Task"}},"id":163,"nodeType":"ArrayTypeName","src":"936:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage_ptr","typeString":"struct TaskContract.Task[]"}},"visibility":"internal"}],"id":171,"initialValue":{"arguments":[{"id":169,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"970:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"959:10:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct TaskContract.Task memory[] memory)"},"typeName":{"baseType":{"id":166,"nodeType":"UserDefinedTypeName","pathNode":{"id":165,"name":"Task","nodeType":"IdentifierPath","referencedDeclaration":53,"src":"963:4:1"},"referencedDeclaration":53,"src":"963:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_storage_ptr","typeString":"struct TaskContract.Task"}},"id":167,"nodeType":"ArrayTypeName","src":"963:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage_ptr","typeString":"struct TaskContract.Task[]"}}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"959:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct TaskContract.Task memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"936:42:1"},{"body":{"id":190,"nodeType":"Block","src":"1017:43:1","statements":[{"expression":{"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1027:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct TaskContract.Task memory[] memory"}},"id":184,"indexExpression":{"id":183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1034:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1027:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_memory_ptr","typeString":"struct TaskContract.Task memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":185,"name":"temporary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"1039:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct TaskContract.Task memory[] memory"}},"id":187,"indexExpression":{"id":186,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1049:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1039:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_memory_ptr","typeString":"struct TaskContract.Task memory"}},"src":"1027:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_memory_ptr","typeString":"struct TaskContract.Task memory"}},"id":189,"nodeType":"ExpressionStatement","src":"1027:24:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":176,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1001:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":177,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1003:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1001:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":191,"initializationExpression":{"assignments":[173],"declarations":[{"constant":false,"id":173,"mutability":"mutable","name":"i","nameLocation":"996:1:1","nodeType":"VariableDeclaration","scope":191,"src":"991:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint","nodeType":"ElementaryTypeName","src":"991:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":175,"initialValue":{"hexValue":"30","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"998:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"991:8:1"},"loopExpression":{"expression":{"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1012:3:1","subExpression":{"id":179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1012:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":181,"nodeType":"ExpressionStatement","src":"1012:3:1"},"nodeType":"ForStatement","src":"986:74:1"},{"expression":{"id":192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1074:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct TaskContract.Task memory[] memory"}},"functionReturnParameters":103,"id":193,"nodeType":"Return","src":"1067:13:1"}]},"functionSelector":"6e13f818","id":195,"implemented":true,"kind":"function","modifiers":[],"name":"getMyTasks","nameLocation":"597:10:1","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[],"src":"607:2:1"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":195,"src":"633:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct TaskContract.Task[]"},"typeName":{"baseType":{"id":100,"nodeType":"UserDefinedTypeName","pathNode":{"id":99,"name":"Task","nodeType":"IdentifierPath","referencedDeclaration":53,"src":"633:4:1"},"referencedDeclaration":53,"src":"633:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_storage_ptr","typeString":"struct TaskContract.Task"}},"id":101,"nodeType":"ArrayTypeName","src":"633:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage_ptr","typeString":"struct TaskContract.Task[]"}},"visibility":"internal"}],"src":"632:15:1"},"scope":224,"src":"588:499:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":222,"nodeType":"Block","src":"1151:151:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":202,"name":"taskToOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1162:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":204,"indexExpression":{"id":203,"name":"taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"1174:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1162:19:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":205,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1185:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1185:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1162:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":221,"nodeType":"IfStatement","src":"1159:137:1","trueBody":{"id":220,"nodeType":"Block","src":"1197:99:1","statements":[{"expression":{"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":208,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1207:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Task_$53_storage_$dyn_storage","typeString":"struct TaskContract.Task storage ref[] storage ref"}},"id":210,"indexExpression":{"id":209,"name":"taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"1213:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1207:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$53_storage","typeString":"struct TaskContract.Task storage ref"}},"id":211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isDeleted","nodeType":"MemberAccess","referencedDeclaration":52,"src":"1207:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":212,"name":"isDeleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"1233:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1207:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":214,"nodeType":"ExpressionStatement","src":"1207:35:1"},{"eventCall":{"arguments":[{"id":216,"name":"taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"1268:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":217,"name":"isDeleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"1276:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":215,"name":"Deletetask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1257:10:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1257:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":219,"nodeType":"EmitStatement","src":"1252:34:1"}]}}]},"functionSelector":"aaba2907","id":223,"implemented":true,"kind":"function","modifiers":[],"name":"deleteTask","nameLocation":"1102:10:1","nodeType":"FunctionDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"taskId","nameLocation":"1118:6:1","nodeType":"VariableDeclaration","scope":223,"src":"1113:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint","nodeType":"ElementaryTypeName","src":"1113:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"isDeleted","nameLocation":"1131:9:1","nodeType":"VariableDeclaration","scope":223,"src":"1126:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":198,"name":"bool","nodeType":"ElementaryTypeName","src":"1126:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1112:29:1"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"1151:0:1"},"scope":224,"src":"1093:209:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":225,"src":"57:1250:1","usedErrors":[]}],"src":"32:1275:1"},"compiler":{"name":"solc","version":"0.8.15+commit.e14f2714.Emscripten.clang"},"networks":{},"schemaVersion":"3.4.8","updatedAt":"2023-04-26T11:06:05.390Z","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.tsx"));
module.exports = __webpack_exports__;

})();